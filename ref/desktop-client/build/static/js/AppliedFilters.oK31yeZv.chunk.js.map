{"version":3,"file":"AppliedFilters.oK31yeZv.chunk.js","sources":["../../../src/icons/v1/Filter.tsx","../../../../../node_modules/lodash/isArray.js","../../../../../node_modules/lodash/_freeGlobal.js","../../../../../node_modules/lodash/_root.js","../../../../../node_modules/lodash/_Symbol.js","../../../../../node_modules/lodash/_getRawTag.js","../../../../../node_modules/lodash/_objectToString.js","../../../../../node_modules/lodash/_baseGetTag.js","../../../../../node_modules/lodash/isObjectLike.js","../../../../../node_modules/lodash/isSymbol.js","../../../../../node_modules/lodash/_arrayMap.js","../../../../../node_modules/lodash/_baseToString.js","../../../../../node_modules/lodash/toString.js","../../../src/components/common/MenuButton.tsx","../../../src/components/filters/ConditionsOpMenu.tsx","../../../src/components/filters/CompactFiltersButton.tsx","../../../src/components/filters/FiltersButton.tsx","../../../src/components/filters/OpButton.tsx","../../../src/components/filters/subfieldFromFilter.ts","../../../src/components/filters/subfieldToOptions.ts","../../../src/components/filters/updateFilterReducer.ts","../../../src/components/filters/FiltersMenu.jsx","../../../src/components/filters/FilterExpression.tsx","../../../src/components/filters/AppliedFilters.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgFilter = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path d=\"m12 12 8-8V0H0v4l8 8v8l4-4v-4z\" fill=\"currentColor\" />\n  </svg>\n);\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","import React, { forwardRef } from 'react';\n\nimport { SvgDotsHorizontalTriple } from '../../icons/v1';\nimport { type CSSProperties } from '../../style';\n\nimport { Button } from './Button';\n\ntype MenuButtonProps = {\n  onClick: () => void;\n  style?: CSSProperties;\n};\n\nexport const MenuButton = forwardRef<HTMLButtonElement, MenuButtonProps>(\n  ({ onClick, style }, ref) => {\n    return (\n      <Button\n        ref={ref}\n        type=\"bare\"\n        onClick={onClick}\n        aria-label=\"Menu\"\n        style={style}\n      >\n        <SvgDotsHorizontalTriple\n          width={15}\n          height={15}\n          style={{ transform: 'rotateZ(90deg)' }}\n        />\n      </Button>\n    );\n  },\n);\n\nMenuButton.displayName = 'MenuButton';\n","import React from 'react';\n\nimport { type RuleConditionEntity } from 'loot-core/types/models';\n\nimport { theme } from '../../style';\nimport { Text } from '../common/Text';\nimport { View } from '../common/View';\nimport { FieldSelect } from '../modals/EditRule';\n\nexport function ConditionsOpMenu({\n  conditionsOp,\n  onChange,\n  conditions,\n}: {\n  conditionsOp: string;\n  onChange: (value: string, conditions: RuleConditionEntity[]) => void;\n  conditions: RuleConditionEntity[];\n}) {\n  return conditions.length > 1 ? (\n    <Text style={{ color: theme.pageText, marginTop: 11, marginRight: 5 }}>\n      <FieldSelect\n        style={{ display: 'inline-flex' }}\n        fields={[\n          ['and', 'all'],\n          ['or', 'any'],\n        ]}\n        value={conditionsOp}\n        onChange={(name: string, value: string) => onChange(value, conditions)}\n      />\n      of:\n    </Text>\n  ) : (\n    <View />\n  );\n}\n","import React from 'react';\n\nimport { SvgFilter } from '../../icons/v1';\nimport { Button } from '../common/Button';\n\nexport function CompactFiltersButton({ onClick }: { onClick: () => void }) {\n  return (\n    <Button type=\"bare\" onClick={onClick}>\n      <SvgFilter width={15} height={15} />\n    </Button>\n  );\n}\n","import React from 'react';\n\nimport { SvgFilter } from '../../icons/v1/Filter';\nimport { Button } from '../common/Button';\n\nexport function FiltersButton({ onClick }: { onClick: () => void }) {\n  return (\n    <Button type=\"bare\" onClick={onClick} title=\"Filters\">\n      <SvgFilter style={{ width: 12, height: 12, marginRight: 5 }} /> Filter\n    </Button>\n  );\n}\n","import React from 'react';\n\nimport { friendlyOp } from 'loot-core/src/shared/rules';\n\nimport { type CSSProperties, theme } from '../../style';\nimport { Button } from '../common/Button';\n\ntype OpButtonProps = {\n  op: string;\n  selected: boolean;\n  onClick: () => void;\n  style?: CSSProperties;\n};\n\nexport function OpButton({ op, selected, style, onClick }: OpButtonProps) {\n  return (\n    <Button\n      type=\"bare\"\n      style={{\n        backgroundColor: theme.pillBackground,\n        marginBottom: 5,\n        ...style,\n        ...(selected && {\n          color: theme.buttonNormalSelectedText,\n          '&,:hover,:active': {\n            backgroundColor: theme.buttonNormalSelectedBackground,\n            color: theme.buttonNormalSelectedText,\n          },\n        }),\n      }}\n      onClick={onClick}\n    >\n      {friendlyOp(op)}\n    </Button>\n  );\n}\n","import { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nexport function subfieldFromFilter({\n  field,\n  options,\n  value,\n}: RuleConditionEntity) {\n  if (field === 'date') {\n    if (typeof value === 'string') {\n      if (value.length === 7) {\n        return 'month';\n      } else if (value.length === 4) {\n        return 'year';\n      }\n    }\n  }\n\n  if (field === 'amount') {\n    if (options && options.inflow) {\n      return 'amount-inflow';\n    } else if (options && options.outflow) {\n      return 'amount-outflow';\n    }\n  }\n\n  return field;\n}\n","import { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nexport function subfieldToOptions(field: string, subfield: string) {\n  let setOptions: RuleConditionEntity['options'];\n  switch (field) {\n    case 'amount':\n      switch (subfield) {\n        case 'amount-inflow':\n          setOptions = { inflow: true };\n          break;\n        case 'amount-outflow':\n          setOptions = { outflow: true };\n          break;\n        default:\n          break;\n      }\n      break;\n    case 'date':\n      switch (subfield) {\n        case 'month':\n          setOptions = { month: true };\n          break;\n        case 'year':\n          setOptions = { year: true };\n          break;\n        default:\n          break;\n      }\n      break;\n    default:\n      break;\n  }\n  return setOptions;\n}\n","import { makeValue, FIELD_TYPES } from 'loot-core/src/shared/rules';\nimport { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nexport function updateFilterReducer(\n  state: { field: string; value: string | string[] | number | boolean | null },\n  action: RuleConditionEntity,\n) {\n  switch (action.type) {\n    case 'set-op': {\n      const type = FIELD_TYPES.get(state.field);\n      let value = state.value;\n      if (\n        (type === 'id' || type === 'string') &&\n        (action.op === 'contains' ||\n          action.op === 'matches' ||\n          action.op === 'is' ||\n          action.op === 'doesNotContain' ||\n          action.op === 'isNot')\n      ) {\n        // Clear out the value if switching between contains or\n        // is/oneof for the id or string type\n        value = null;\n      }\n      return { ...state, op: action.op, value };\n    }\n    case 'set-value': {\n      const { value } = makeValue(action.value, {\n        type: FIELD_TYPES.get(state.field),\n      });\n      return { ...state, value };\n    }\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n","import React, { useState, useRef, useEffect, useReducer } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { FocusScope } from '@react-aria/focus';\nimport {\n  parse as parseDate,\n  format as formatDate,\n  isValid as isDateValid,\n} from 'date-fns';\n\nimport { useFilters } from 'loot-core/src/client/data-hooks/filters';\nimport { send } from 'loot-core/src/platform/client/fetch';\nimport { getMonthYearFormat } from 'loot-core/src/shared/months';\nimport {\n  mapField,\n  deserializeField,\n  getFieldError,\n  unparse,\n  FIELD_TYPES,\n  TYPE_INFO,\n} from 'loot-core/src/shared/rules';\nimport { titleFirst } from 'loot-core/src/shared/util';\n\nimport { useDateFormat } from '../../hooks/useDateFormat';\nimport { styles, theme } from '../../style';\nimport { Button } from '../common/Button';\nimport { Menu } from '../common/Menu';\nimport { Popover } from '../common/Popover';\nimport { Select } from '../common/Select';\nimport { Stack } from '../common/Stack';\nimport { Text } from '../common/Text';\nimport { Tooltip } from '../common/Tooltip';\nimport { View } from '../common/View';\nimport { GenericInput } from '../util/GenericInput';\n\nimport { CompactFiltersButton } from './CompactFiltersButton';\nimport { FiltersButton } from './FiltersButton';\nimport { OpButton } from './OpButton';\nimport { subfieldFromFilter } from './subfieldFromFilter';\nimport { subfieldToOptions } from './subfieldToOptions';\nimport { updateFilterReducer } from './updateFilterReducer';\n\nlet isDatepickerClick = false;\n\nconst filterFields = [\n  'date',\n  'account',\n  'payee',\n  'notes',\n  'category',\n  'amount',\n  'cleared',\n  'reconciled',\n  'saved',\n].map(field => [field, mapField(field)]);\n\nfunction ConfigureField({\n  field,\n  initialSubfield = field,\n  op,\n  value,\n  dispatch,\n  onApply,\n}) {\n  const [subfield, setSubfield] = useState(initialSubfield);\n  const inputRef = useRef();\n  const prevOp = useRef(null);\n\n  useEffect(() => {\n    if (prevOp.current !== op && inputRef.current) {\n      inputRef.current.focus();\n    }\n    prevOp.current = op;\n  }, [op]);\n\n  const type = FIELD_TYPES.get(field);\n  let ops = TYPE_INFO[type].ops.filter(op => op !== 'isbetween');\n\n  // Month and year fields are quite hacky right now! Figure out how\n  // to clean this up later\n  if (subfield === 'month' || subfield === 'year') {\n    ops = ['is'];\n  }\n\n  return (\n    <FocusScope>\n      <View style={{ marginBottom: 10 }}>\n        <Stack direction=\"row\" align=\"flex-start\">\n          {field === 'amount' || field === 'date' ? (\n            <Select\n              options={\n                field === 'amount'\n                  ? [\n                      ['amount', 'Amount'],\n                      ['amount-inflow', 'Amount (inflow)'],\n                      ['amount-outflow', 'Amount (outflow)'],\n                    ]\n                  : field === 'date'\n                    ? [\n                        ['date', 'Date'],\n                        ['month', 'Month'],\n                        ['year', 'Year'],\n                      ]\n                    : null\n              }\n              value={subfield}\n              onChange={sub => {\n                setSubfield(sub);\n\n                if (sub === 'month' || sub === 'year') {\n                  dispatch({ type: 'set-op', op: 'is' });\n                }\n              }}\n            />\n          ) : (\n            titleFirst(mapField(field))\n          )}\n          <View style={{ flex: 1 }} />\n        </Stack>\n      </View>\n\n      <View\n        style={{\n          color: theme.pageTextLight,\n          marginBottom: 10,\n        }}\n      >\n        {field === 'saved' && 'Existing filters will be cleared'}\n      </View>\n\n      <Stack\n        direction=\"row\"\n        align=\"flex-start\"\n        spacing={1}\n        style={{ flexWrap: 'wrap' }}\n      >\n        {type === 'boolean' ? (\n          <>\n            <OpButton\n              key=\"true\"\n              op=\"true\"\n              selected={value === true}\n              onClick={() => {\n                dispatch({ type: 'set-op', op: 'is' });\n                dispatch({ type: 'set-value', value: true });\n              }}\n            />\n            <OpButton\n              key=\"false\"\n              op=\"false\"\n              selected={value === false}\n              onClick={() => {\n                dispatch({ type: 'set-op', op: 'is' });\n                dispatch({ type: 'set-value', value: false });\n              }}\n            />\n          </>\n        ) : (\n          <>\n            <Stack\n              direction=\"row\"\n              align=\"flex-start\"\n              spacing={1}\n              style={{ flexWrap: 'wrap' }}\n            >\n              {ops.slice(0, 3).map(currOp => (\n                <OpButton\n                  key={currOp}\n                  op={currOp}\n                  selected={currOp === op}\n                  onClick={() => dispatch({ type: 'set-op', op: currOp })}\n                />\n              ))}\n            </Stack>\n            <Stack\n              direction=\"row\"\n              align=\"flex-start\"\n              spacing={1}\n              style={{ flexWrap: 'wrap' }}\n            >\n              {ops.slice(3, ops.length).map(currOp => (\n                <OpButton\n                  key={currOp}\n                  op={currOp}\n                  selected={currOp === op}\n                  onClick={() => dispatch({ type: 'set-op', op: currOp })}\n                />\n              ))}\n            </Stack>\n          </>\n        )}\n      </Stack>\n\n      <form action=\"#\">\n        {type !== 'boolean' && (\n          <GenericInput\n            inputRef={inputRef}\n            field={field}\n            subfield={subfield}\n            type={\n              type === 'id' &&\n              (op === 'contains' || op === 'matches' || op === 'doesNotContain')\n                ? 'string'\n                : type\n            }\n            value={value}\n            multi={op === 'oneOf' || op === 'notOneOf'}\n            style={{ marginTop: 10 }}\n            onChange={v => {\n              dispatch({ type: 'set-value', value: v });\n            }}\n          />\n        )}\n\n        <Stack\n          direction=\"row\"\n          justify=\"flex-end\"\n          align=\"center\"\n          style={{ marginTop: 15 }}\n        >\n          <View style={{ flex: 1 }} />\n          <Button\n            type=\"primary\"\n            onClick={e => {\n              e.preventDefault();\n              onApply({\n                field,\n                op,\n                value,\n                options: subfieldToOptions(field, subfield),\n              });\n            }}\n          >\n            Apply\n          </Button>\n        </Stack>\n      </form>\n    </FocusScope>\n  );\n}\n\nexport function FilterButton({ onApply, compact, hover, exclude }) {\n  const filters = useFilters();\n  const triggerRef = useRef(null);\n\n  const dateFormat = useDateFormat() || 'MM/dd/yyyy';\n\n  const [state, dispatch] = useReducer(\n    (state, action) => {\n      switch (action.type) {\n        case 'select-field':\n          return { ...state, fieldsOpen: true, condOpen: false };\n        case 'configure': {\n          const { field } = deserializeField(action.field);\n          const type = FIELD_TYPES.get(field);\n          const ops = TYPE_INFO[type].ops;\n          return {\n            ...state,\n            fieldsOpen: false,\n            condOpen: true,\n            field: action.field,\n            op: ops[0],\n            value: type === 'boolean' ? true : null,\n          };\n        }\n        case 'close':\n          return { fieldsOpen: false, condOpen: false, value: null };\n        default:\n          return updateFilterReducer(state, action);\n      }\n    },\n    { fieldsOpen: false, condOpen: false, field: null, value: null },\n  );\n\n  async function onValidateAndApply(cond) {\n    cond = unparse({ ...cond, type: FIELD_TYPES.get(cond.field) });\n\n    if (cond.type === 'date' && cond.options) {\n      if (cond.options.month) {\n        const date = parseDate(\n          cond.value,\n          getMonthYearFormat(dateFormat),\n          new Date(),\n        );\n        if (isDateValid(date)) {\n          cond.value = formatDate(date, 'yyyy-MM');\n        } else {\n          alert('Invalid date format');\n          return;\n        }\n      } else if (cond.options.year) {\n        const date = parseDate(cond.value, 'yyyy', new Date());\n        if (isDateValid(date)) {\n          cond.value = formatDate(date, 'yyyy');\n        } else {\n          alert('Invalid date format');\n          return;\n        }\n      }\n    }\n\n    const { error } =\n      cond.field !== 'saved' &&\n      (await send('rule-validate', {\n        conditions: [cond],\n        actions: [],\n      }));\n\n    const saved = filters.find(f => cond.value === f.id);\n\n    if (error && error.conditionErrors.length > 0) {\n      const field = titleFirst(mapField(cond.field));\n      alert(field + ': ' + getFieldError(error.conditionErrors[0]));\n    } else {\n      onApply(saved ? saved : cond);\n      dispatch({ type: 'close' });\n    }\n  }\n  useHotkeys('f', () => dispatch({ type: 'select-field' }), {\n    scopes: ['app'],\n  });\n\n  return (\n    <View>\n      <View ref={triggerRef}>\n        <Tooltip\n          style={{\n            ...styles.tooltip,\n            lineHeight: 1.5,\n            padding: '6px 10px',\n          }}\n          content={<Text>Filters</Text>}\n          placement=\"bottom start\"\n          triggerProps={{\n            isDisabled: !hover,\n          }}\n        >\n          {compact ? (\n            <CompactFiltersButton\n              onClick={() => dispatch({ type: 'select-field' })}\n            />\n          ) : (\n            <FiltersButton onClick={() => dispatch({ type: 'select-field' })} />\n          )}\n        </Tooltip>\n      </View>\n\n      <Popover\n        triggerRef={triggerRef}\n        placement=\"bottom start\"\n        isOpen={state.fieldsOpen}\n        onOpenChange={() => dispatch({ type: 'close' })}\n        data-testid=\"filters-select-tooltip\"\n      >\n        <Menu\n          onMenuSelect={name => {\n            dispatch({ type: 'configure', field: name });\n          }}\n          items={filterFields\n            .filter(f => (exclude ? !exclude.includes(f[0]) : true))\n            .sort()\n            .map(([name, text]) => ({\n              name,\n              text: titleFirst(text),\n            }))}\n        />\n      </Popover>\n\n      <Popover\n        triggerRef={triggerRef}\n        placement=\"bottom start\"\n        isOpen={state.condOpen}\n        onOpenChange={() => {\n          dispatch({ type: 'close' });\n        }}\n        shouldCloseOnInteractOutside={element => {\n          // Datepicker selections for some reason register 2x clicks\n          // We want to keep the popover open after selecting a date.\n          // So we ignore the \"close\" event on selection + the subsequent event.\n          if (element.dataset.pikaYear) {\n            isDatepickerClick = true;\n            return false;\n          }\n          if (isDatepickerClick) {\n            isDatepickerClick = false;\n            return false;\n          }\n\n          return true;\n        }}\n        style={{ width: 275, padding: 15, color: theme.menuItemText }}\n        data-testid=\"filters-menu-tooltip\"\n      >\n        {state.field && (\n          <ConfigureField\n            field={state.field}\n            op={state.op}\n            value={state.value}\n            dispatch={dispatch}\n            onApply={onValidateAndApply}\n          />\n        )}\n      </Popover>\n    </View>\n  );\n}\n\nexport function FilterEditor({ field, op, value, options, onSave, onClose }) {\n  const [state, dispatch] = useReducer(\n    (state, action) => {\n      switch (action.type) {\n        case 'close':\n          onClose();\n          return state;\n        default:\n          return updateFilterReducer(state, action);\n      }\n    },\n    { field, op, value, options },\n  );\n\n  return (\n    <ConfigureField\n      field={state.field}\n      initialSubfield={subfieldFromFilter({ field, options, value })}\n      op={state.op}\n      value={state.value}\n      options={state.options}\n      dispatch={dispatch}\n      onApply={cond => {\n        cond = unparse({ ...cond, type: FIELD_TYPES.get(cond.field) });\n        onSave(cond);\n        onClose();\n      }}\n    />\n  );\n}\n","import React, { useRef, useState } from 'react';\n\nimport { mapField, friendlyOp } from 'loot-core/src/shared/rules';\nimport { integerToCurrency } from 'loot-core/src/shared/util';\nimport {\n  type RuleConditionOp,\n  type RuleConditionEntity,\n} from 'loot-core/src/types/models';\n\nimport { SvgDelete } from '../../icons/v0';\nimport { type CSSProperties, theme } from '../../style';\nimport { Button } from '../common/Button';\nimport { Popover } from '../common/Popover';\nimport { Text } from '../common/Text';\nimport { View } from '../common/View';\nimport { Value } from '../rules/Value';\n\nimport { FilterEditor } from './FiltersMenu';\nimport { subfieldFromFilter } from './subfieldFromFilter';\n\nlet isDatepickerClick = false;\n\ntype FilterExpressionProps = {\n  field: string | undefined;\n  customName: string | undefined;\n  op: RuleConditionOp | undefined;\n  value: string | string[] | number | boolean | undefined;\n  options: RuleConditionEntity['options'];\n  style?: CSSProperties;\n  onChange: (cond: RuleConditionEntity) => void;\n  onDelete: () => void;\n};\n\nexport function FilterExpression({\n  field: originalField,\n  customName,\n  op,\n  value,\n  options,\n  style,\n  onChange,\n  onDelete,\n}: FilterExpressionProps) {\n  const [editing, setEditing] = useState(false);\n  const triggerRef = useRef(null);\n\n  const field = subfieldFromFilter({ field: originalField, value });\n\n  return (\n    <View\n      style={{\n        backgroundColor: theme.pillBackground,\n        borderRadius: 4,\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginRight: 10,\n        marginTop: 10,\n        ...style,\n      }}\n    >\n      <Button\n        ref={triggerRef}\n        type=\"bare\"\n        disabled={customName != null}\n        onClick={() => setEditing(true)}\n      >\n        <div style={{ paddingBlock: 1, paddingLeft: 5, paddingRight: 2 }}>\n          {customName ? (\n            <Text style={{ color: theme.pageTextPositive }}>{customName}</Text>\n          ) : (\n            <>\n              <Text style={{ color: theme.pageTextPositive }}>\n                {mapField(field, options)}\n              </Text>{' '}\n              <Text>{friendlyOp(op, null)}</Text>{' '}\n              <Value\n                value={value}\n                field={field}\n                inline={true}\n                valueIsRaw={\n                  op === 'contains' ||\n                  op === 'matches' ||\n                  op === 'doesNotContain'\n                }\n              />\n            </>\n          )}\n        </div>\n      </Button>\n      <Button type=\"bare\" onClick={onDelete} aria-label=\"Delete filter\">\n        <SvgDelete\n          style={{\n            width: 8,\n            height: 8,\n            margin: 4,\n          }}\n        />\n      </Button>\n\n      <Popover\n        triggerRef={triggerRef}\n        placement=\"bottom start\"\n        isOpen={editing}\n        onOpenChange={() => setEditing(false)}\n        shouldCloseOnInteractOutside={element => {\n          // Datepicker selections for some reason register 2x clicks\n          // We want to keep the popover open after selecting a date.\n          // So we ignore the \"close\" event on selection + the subsequent event.\n          if (element instanceof HTMLElement && element.dataset.pikaYear) {\n            isDatepickerClick = true;\n            return false;\n          }\n          if (isDatepickerClick) {\n            isDatepickerClick = false;\n            return false;\n          }\n\n          return true;\n        }}\n        style={{ width: 275, padding: 15, color: theme.menuItemText }}\n        data-testid=\"filters-menu-tooltip\"\n      >\n        <FilterEditor\n          field={originalField}\n          op={op}\n          value={\n            field === 'amount' && typeof value === 'number'\n              ? integerToCurrency(value)\n              : value\n          }\n          options={options}\n          onSave={onChange}\n          onClose={() => setEditing(false)}\n        />\n      </Popover>\n    </View>\n  );\n}\n","import React from 'react';\n\nimport { type RuleConditionEntity } from 'loot-core/src/types/models';\n\nimport { View } from '../common/View';\n\nimport { ConditionsOpMenu } from './ConditionsOpMenu';\nimport { FilterExpression } from './FilterExpression';\n\ntype AppliedFiltersProps = {\n  conditions: RuleConditionEntity[];\n  onUpdate: (\n    filter: RuleConditionEntity,\n    newFilter: RuleConditionEntity,\n  ) => void;\n  onDelete: (filter: RuleConditionEntity) => void;\n  conditionsOp: string;\n  onConditionsOpChange: (\n    value: string,\n    conditions: RuleConditionEntity[],\n  ) => void;\n};\n\nexport function AppliedFilters({\n  conditions,\n  onUpdate,\n  onDelete,\n  conditionsOp,\n  onConditionsOpChange,\n}: AppliedFiltersProps) {\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap',\n      }}\n    >\n      <ConditionsOpMenu\n        conditionsOp={conditionsOp}\n        onChange={onConditionsOpChange}\n        conditions={conditions}\n      />\n      {conditions.map((filter: RuleConditionEntity, i: number) => (\n        <FilterExpression\n          key={i}\n          customName={filter.customName}\n          field={filter.field}\n          op={filter.op}\n          value={filter.value}\n          options={filter.options}\n          onChange={newFilter => onUpdate(filter, newFilter)}\n          onDelete={() => onDelete(filter)}\n        />\n      ))}\n    </View>\n  );\n}\n"],"names":["SvgFilter","props","_jsx","svg","xmlns","viewBox","style","color","path","d","fill","isArray","isArray_1","freeGlobal","global","_freeGlobal","require$$0","freeSelf","root","_root","Symbol","_Symbol","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","getRawTag","value","isOwn","tag","unmasked","result","_getRawTag","objectToString","_objectToString","require$$1","require$$2","nullTag","undefinedTag","baseGetTag","_baseGetTag","isObjectLike","isObjectLike_1","symbolTag","isSymbol","isSymbol_1","arrayMap","array","iteratee","index","length","_arrayMap","require$$3","INFINITY","symbolProto","symbolToString","baseToString","_baseToString","toString","toString_1","MenuButton","forwardRef","onClick","ref","Button","type","aria-label","SvgDotsHorizontalTriple","width","height","transform","displayName","ConditionsOpMenu","conditionsOp","onChange","conditions","_jsxs","Text","theme","pageText","marginTop","marginRight","FieldSelect","display","fields","name","View","CompactFiltersButton","FiltersButton","title","OpButton","op","selected","backgroundColor","pillBackground","marginBottom","buttonNormalSelectedText","buttonNormalSelectedBackground","friendlyOp","subfieldFromFilter","field","options","inflow","outflow","subfieldToOptions","subfield","setOptions","month","year","updateFilterReducer","state","action","FIELD_TYPES","get","makeValue","Error","isDatepickerClick","filterFields","map","mapField","ConfigureField","initialSubfield","dispatch","onApply","setSubfield","useState","inputRef","useRef","prevOp","useEffect","current","focus","ops","TYPE_INFO","filter","FocusScope","Stack","direction","align","Select","sub","titleFirst","flex","pageTextLight","spacing","flexWrap","_Fragment","slice","currOp","form","GenericInput","multi","v","justify","e","preventDefault","FilterButton","compact","hover","exclude","filters","useFilters","triggerRef","dateFormat","useDateFormat","useReducer","fieldsOpen","condOpen","deserializeField","onValidateAndApply","cond","unparse","date","parseDate","getMonthYearFormat","Date","isDateValid","formatDate","alert","error","send","actions","saved","find","f","id","conditionErrors","getFieldError","useHotkeys","scopes","Tooltip","styles","tooltip","lineHeight","padding","content","placement","triggerProps","isDisabled","Popover","isOpen","onOpenChange","data-testid","Menu","onMenuSelect","items","includes","sort","text","shouldCloseOnInteractOutside","element","dataset","pikaYear","menuItemText","FilterEditor","onSave","onClose","FilterExpression","originalField","customName","onDelete","editing","setEditing","borderRadius","flexDirection","alignItems","disabled","div","paddingBlock","paddingLeft","paddingRight","pageTextPositive","Value","inline","valueIsRaw","SvgDelete","margin","HTMLElement","integerToCurrency","AppliedFilters","onUpdate","onConditionsOpChange","i","newFilter"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12]}