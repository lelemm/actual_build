{"version":3,"file":"wide.OXzV7lGp.chunk.js","sources":["../../../src/icons/v0/LeftArrow2.tsx","../../../src/icons/v1/ArrowDown.tsx","../../../src/icons/v1/ArrowUp.tsx","../../../src/icons/v2/ArrowButtonDown1.tsx","../../../src/icons/v2/ArrowButtonRight1.tsx","../../../src/icons/v2/ArrowButtonUp1.tsx","../../../src/icons/v2/ArrowsExpand3.tsx","../../../src/icons/v2/ArrowsShrink3.tsx","../../../src/icons/v2/CustomNotesPaper.tsx","../../../src/icons/v2/DownloadThickBottom.tsx","../../../src/icons/v2/Hyperlink2.tsx","../../../src/icons/v2/Pencil1.tsx","../../../src/components/budget/MonthPicker.tsx","../../../src/components/budget/BudgetPageHeader.tsx","../../../src/components/budget/RenderMonths.tsx","../../../src/components/NotesButton.tsx","../../../src/components/budget/SidebarCategory.tsx","../../../src/components/budget/ExpenseCategory.tsx","../../../src/components/budget/SidebarGroup.tsx","../../../src/components/budget/ExpenseGroup.tsx","../../../src/components/budget/IncomeCategory.tsx","../../../src/components/budget/IncomeGroup.tsx","../../../src/components/budget/IncomeHeader.tsx","../../../src/components/budget/BudgetCategories.jsx","../../../src/components/budget/BudgetSummaries.tsx","../../../src/components/budget/BudgetTotals.tsx","../../../src/components/budget/BudgetTable.jsx","../../../src/components/budget/DynamicBudgetTable.tsx","../../../src/components/budget/report/ReportContext.tsx","../../../src/components/budget/report/budgetsummary/BudgetSummary.tsx","../../../src/components/budget/report/ReportComponents.tsx","../../../src/components/budget/rollover/CoverMenu.tsx","../../../src/components/budget/rollover/TransferMenu.tsx","../../../src/components/budget/rollover/BalanceMovementMenu.tsx","../../../src/components/budget/rollover/RolloverContext.tsx","../../../src/components/budget/rollover/HoldMenu.tsx","../../../src/components/budget/rollover/budgetsummary/ToBudget.tsx","../../../src/components/budget/rollover/budgetsummary/BudgetSummary.tsx","../../../src/components/budget/rollover/RolloverComponents.tsx","../../../src/components/budget/index.tsx","../../../src/components/schedules/index.tsx","../../../src/components/gocardless/GoCardlessLink.tsx","../../../../loot-core/src/client/transfer.ts","../../../src/hooks/useSplitsExpanded.jsx","../../../../../node_modules/lodash/escapeRegExp.js","../../../src/components/transactions/TransactionsTable.jsx","../../../src/components/transactions/TransactionList.jsx","../../../src/components/filters/FilterMenu.tsx","../../../src/components/filters/NameFilter.tsx","../../../src/components/filters/SavedFilterMenuButton.tsx","../../../src/components/filters/FiltersStack.tsx","../../../src/components/transactions/SelectedTransactionsButton.jsx","../../../src/components/accounts/Balance.jsx","../../../src/components/accounts/Reconcile.jsx","../../../src/components/accounts/Header.jsx","../../../src/components/accounts/Account.jsx"],"sourcesContent":["import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgLeftArrow2 = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 91 51\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M30.256 48.614a3.14 3.14 0 0 0-.989-2.153L10.803 29.063h76.915a3.2 3.2 0 0 0 .315 0c1.584-.084 2.95-1.64 2.867-3.266-.082-1.625-1.598-3.028-3.182-2.943H10.803L29.267 5.49c1.284-1.099 1.456-3.057.385-4.373a2.972 2.972 0 0 0-4.48-.187L.971 23.695a3.163 3.163 0 0 0 0 4.56l24.2 22.766a2.98 2.98 0 0 0 2.205.84c1.669-.08 2.958-1.534 2.88-3.247Z\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgArrowDown = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path\n      d=\"m9 16.172-6.071-6.071-1.414 1.414L10 20l.707-.707 7.778-7.778-1.414-1.414L11 16.172V0H9z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgArrowUp = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path\n      d=\"M9 3.828 2.929 9.899 1.515 8.485 10 0l.707.707 7.778 7.778-1.414 1.414L11 3.828V20H9V3.828z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgArrowButtonDown1 = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path\n      d=\"M12 13.584a2.643 2.643 0 0 1-1.875-.775L.584 3.268a1.768 1.768 0 0 1 2.5-2.5l8.739 8.739a.25.25 0 0 0 .354 0L20.916.768a1.768 1.768 0 0 1 2.5 2.5l-9.541 9.541a2.643 2.643 0 0 1-1.875.775Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M12 23.75a2.643 2.643 0 0 1-1.875-.775L.584 13.434a1.768 1.768 0 0 1 2.5-2.5l8.739 8.739a.25.25 0 0 0 .354 0l8.739-8.739a1.768 1.768 0 0 1 2.5 2.5l-9.541 9.541A2.643 2.643 0 0 1 12 23.75Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgArrowButtonRight1 = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path\n      d=\"M13.584 12a2.643 2.643 0 0 1-.775 1.875l-9.541 9.541a1.768 1.768 0 0 1-2.5-2.5l8.739-8.739a.25.25 0 0 0 0-.354L.768 3.084a1.768 1.768 0 0 1 2.5-2.5l9.541 9.541A2.643 2.643 0 0 1 13.584 12Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M23.75 12a2.643 2.643 0 0 1-.775 1.875l-9.541 9.541a1.768 1.768 0 0 1-2.5-2.5l8.739-8.739a.25.25 0 0 0 0-.354l-8.739-8.739a1.768 1.768 0 0 1 2.5-2.5l9.541 9.541A2.643 2.643 0 0 1 23.75 12Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgArrowButtonUp1 = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path\n      d=\"M12 10.416a2.643 2.643 0 0 1 1.875.775l9.541 9.541a1.768 1.768 0 0 1-2.5 2.5l-8.739-8.739a.25.25 0 0 0-.354 0l-8.739 8.739a1.768 1.768 0 0 1-2.5-2.5l9.541-9.541A2.643 2.643 0 0 1 12 10.416Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M12 .25a2.643 2.643 0 0 1 1.875.775l9.541 9.541a1.768 1.768 0 0 1-2.5 2.5l-8.739-8.739a.25.25 0 0 0-.354 0l-8.739 8.739a1.768 1.768 0 0 1-2.5-2.5l9.541-9.541A2.643 2.643 0 0 1 12 .25Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgArrowsExpand3 = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M19.611 2.571h-3.754a1.286 1.286 0 1 1 0-2.571h6.857A1.286 1.286 0 0 1 24 1.286v6.857a1.286 1.286 0 0 1-2.571 0V4.39L15.48 10.34a1.286 1.286 0 0 1-1.817-1.817l5.948-5.95ZM1.286 14.571a1.286 1.286 0 0 1 1.285 1.286v3.754l5.949-5.946a1.286 1.286 0 0 1 1.817 1.817L4.39 21.429h3.753a1.285 1.285 0 1 1 0 2.571H1.286A1.286 1.286 0 0 1 0 22.714v-6.857a1.286 1.286 0 0 1 1.286-1.286Z\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgArrowsShrink3 = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M14.143 1.714A1.286 1.286 0 0 1 15.429 3v3.753L21.806.377a1.286 1.286 0 0 1 1.817 1.817l-6.376 6.377H21a1.286 1.286 0 1 1 0 2.572h-6.857a1.286 1.286 0 0 1-1.286-1.286V3a1.286 1.286 0 0 1 1.286-1.286ZM9.857 22.286A1.285 1.285 0 0 1 8.571 21v-3.753l-6.377 6.376a1.286 1.286 0 0 1-1.817-1.817l6.376-6.377H3a1.286 1.286 0 0 1 0-2.572h6.857a1.286 1.286 0 0 1 1.286 1.286V21a1.286 1.286 0 0 1-1.286 1.286Z\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgCustomNotesPaper = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 19 24\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M17 24H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h9a1 1 0 0 1 .707.293l7 7A1 1 0 0 1 19 8v14a2 2 0 0 1-2 2ZM2 21.5a.5.5 0 0 0 .5.5h14a.5.5 0 0 0 .5-.5V9a.5.5 0 0 0-.5-.5h-4a2 2 0 0 1-2-2v-4A.5.5 0 0 0 10 2H2.5a.5.5 0 0 0-.5.5v19Z\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgDownloadThickBottom = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path\n      d=\"M8.616 1.741A1.455 1.455 0 0 1 10.07.287h3.392a1.455 1.455 0 0 1 1.453 1.454v8.228a.25.25 0 0 0 .25.25h2.9a1.138 1.138 0 0 1 .827 2l-6.1 6.1a1.489 1.489 0 0 1-2.056 0l-6.1-6.1a1.137 1.137 0 0 1 .827-2h2.9a.249.249 0 0 0 .25-.25Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M0 19.677a4.039 4.039 0 0 0 4.035 4.035h15.93A4.039 4.039 0 0 0 24 19.677V17.8a1.225 1.225 0 0 0-2.449 0v1.874a1.588 1.588 0 0 1-1.586 1.586H4.035a1.588 1.588 0 0 1-1.586-1.586V17.8A1.225 1.225 0 0 0 0 17.8Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgHyperlink2 = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path\n      d=\"M12.406 14.905a1 1 0 0 0-.543 1.307 1 1 0 0 1-.217 1.09l-2.828 2.829a2 2 0 0 1-2.828 0L3.868 18.01a2 2 0 0 1 0-2.829L6.7 12.353a1.013 1.013 0 0 1 1.091-.217 1 1 0 0 0 .763-1.849 3.034 3.034 0 0 0-3.268.652l-2.832 2.828a4.006 4.006 0 0 0 0 5.657l2.122 2.121a4 4 0 0 0 5.656 0l2.829-2.828a3.008 3.008 0 0 0 .651-3.27 1 1 0 0 0-1.306-.542Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M7.757 16.241a1.011 1.011 0 0 0 1.414 0l7.779-7.778a1 1 0 0 0-1.414-1.414l-7.779 7.778a1 1 0 0 0 0 1.414Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"m21.546 4.574-2.121-2.121a4.006 4.006 0 0 0-5.657 0l-2.829 2.828a3.006 3.006 0 0 0-.651 3.269 1 1 0 1 0 1.849-.764 1 1 0 0 1 .217-1.086l2.828-2.828a2 2 0 0 1 2.829 0l2.121 2.121a2 2 0 0 1 0 2.829L17.3 11.645a1.015 1.015 0 0 1-1.091.217 1 1 0 0 0-.765 1.849 3.026 3.026 0 0 0 3.27-.651l2.828-2.828a4.007 4.007 0 0 0 .004-5.658Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport type { SVGProps } from 'react';\nexport const SvgPencil1 = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    style={{\n      color: 'inherit',\n      ...props.style,\n    }}\n  >\n    <path\n      d=\"M15.067 3.986a.5.5 0 0 0-.354-.148.5.5 0 0 0-.354.147L3.437 14.91a.5.5 0 0 0 0 .707l4.948 4.948a.5.5 0 0 0 .707 0L20.009 9.648a.5.5 0 0 0 0-.706ZM2.43 16.8a.5.5 0 0 0-.489-.127.5.5 0 0 0-.351.364L.084 23.314a.5.5 0 0 0 .133.47.507.507 0 0 0 .47.132l6.272-1.5a.5.5 0 0 0 .237-.84ZM23.2 2.924 21.077.8a2.5 2.5 0 0 0-3.532 0l-1.418 1.417a.5.5 0 0 0 0 .707l4.95 4.949a.5.5 0 0 0 .707 0L23.2 6.454a2.5 2.5 0 0 0 0-3.53Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","// @ts-strict-ignore\nimport { type CSSProperties, useState } from 'react';\n\nimport * as monthUtils from 'loot-core/src/shared/months';\n\nimport { useResizeObserver } from '../../hooks/useResizeObserver';\nimport { styles, theme } from '../../style';\nimport { View } from '../common/View';\n\nimport { type BoundsProps } from './MonthsContext';\n\ntype MonthPickerProps = {\n  startMonth: string;\n  numDisplayed: number;\n  monthBounds: BoundsProps;\n  style: CSSProperties;\n  onSelect: (month: string) => void;\n};\n\nexport const MonthPicker = ({\n  startMonth,\n  numDisplayed,\n  monthBounds,\n  style,\n  onSelect,\n}: MonthPickerProps) => {\n  const [hoverId, setHoverId] = useState(null);\n  const [targetMonthCount, setTargetMonthCount] = useState(12);\n\n  const currentMonth = monthUtils.currentMonth();\n  const firstSelectedMonth = startMonth;\n\n  const lastSelectedMonth = monthUtils.addMonths(\n    firstSelectedMonth,\n    numDisplayed - 1,\n  );\n\n  const range = monthUtils.rangeInclusive(\n    monthUtils.subMonths(\n      firstSelectedMonth,\n      targetMonthCount / 2 - numDisplayed / 2,\n    ),\n    monthUtils.addMonths(\n      lastSelectedMonth,\n      targetMonthCount / 2 - numDisplayed / 2,\n    ),\n  );\n\n  const firstSelectedIndex =\n    Math.floor(range.length / 2) - Math.floor(numDisplayed / 2);\n  const lastSelectedIndex = firstSelectedIndex + numDisplayed - 1;\n\n  const [size, setSize] = useState('small');\n  const containerRef = useResizeObserver(rect => {\n    setSize(rect.width <= 400 ? 'small' : 'big');\n    setTargetMonthCount(\n      Math.min(Math.max(Math.floor(rect.width / 50), 12), 24),\n    );\n  });\n\n  const yearHeadersShown = [];\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        ...style,\n      }}\n    >\n      <View\n        innerRef={containerRef}\n        style={{\n          flexDirection: 'row',\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {range.map((month, idx) => {\n          const monthName = monthUtils.format(month, 'MMM');\n          const selected =\n            idx >= firstSelectedIndex && idx <= lastSelectedIndex;\n\n          const lastHoverId = hoverId + numDisplayed - 1;\n          const hovered =\n            hoverId === null ? false : idx >= hoverId && idx <= lastHoverId;\n\n          const current = currentMonth === month;\n          const year = monthUtils.getYear(month);\n\n          let showYearHeader = false;\n\n          if (!yearHeadersShown.includes(year)) {\n            yearHeadersShown.push(year);\n            showYearHeader = true;\n          }\n\n          const isMonthBudgeted =\n            month >= monthBounds.start && month <= monthBounds.end;\n\n          return (\n            <View\n              key={month}\n              style={{\n                padding: '3px 3px',\n                width: size === 'big' ? '35px' : '20px',\n                textAlign: 'center',\n                userSelect: 'none',\n                cursor: 'default',\n                borderRadius: 2,\n                border: 'none',\n                ...(!isMonthBudgeted && {\n                  textDecoration: 'line-through',\n                  color: theme.pageTextSubdued,\n                }),\n                ...styles.smallText,\n                ...(selected && {\n                  backgroundColor: theme.tableBorderHover,\n                  color: theme.buttonPrimaryText,\n                }),\n                ...((hovered || selected) && {\n                  borderRadius: 0,\n                  cursor: 'pointer',\n                }),\n                ...(hoverId !== null &&\n                  !hovered &&\n                  selected && {\n                    filter: 'brightness(65%)',\n                  }),\n                ...(hovered &&\n                  !selected && {\n                    backgroundColor: theme.buttonBareBackgroundHover,\n                  }),\n                ...(hovered &&\n                  selected && {\n                    backgroundColor: theme.tableBorderHover,\n                  }),\n                ...((idx === firstSelectedIndex ||\n                  (idx === hoverId && !selected)) && {\n                  borderTopLeftRadius: 2,\n                  borderBottomLeftRadius: 2,\n                }),\n                ...((idx === lastSelectedIndex ||\n                  (idx === lastHoverId && !selected)) && {\n                  borderTopRightRadius: 2,\n                  borderBottomRightRadius: 2,\n                }),\n                ...(current && { fontWeight: 'bold' }),\n              }}\n              onClick={() => onSelect(month)}\n              onMouseEnter={() => setHoverId(idx)}\n              onMouseLeave={() => setHoverId(null)}\n            >\n              {size === 'small' ? monthName[0] : monthName}\n              {showYearHeader && (\n                <View\n                  style={{\n                    position: 'absolute',\n                    top: -14,\n                    left: 0,\n                    fontSize: 10,\n                    fontWeight: 'bold',\n                    color: isMonthBudgeted\n                      ? theme.pageText\n                      : theme.pageTextSubdued,\n                  }}\n                >\n                  {year}\n                </View>\n              )}\n            </View>\n          );\n        })}\n      </View>\n    </View>\n  );\n};\n","// @ts-strict-ignore\nimport React, { type ComponentProps, memo } from 'react';\n\nimport { View } from '../common/View';\n\nimport { MonthPicker } from './MonthPicker';\nimport { getScrollbarWidth } from './util';\n\ntype BudgetPageHeaderProps = {\n  startMonth: string;\n  onMonthSelect: (month: string) => void;\n  numMonths: number;\n  monthBounds: ComponentProps<typeof MonthPicker>['monthBounds'];\n};\n\nexport const BudgetPageHeader = memo<BudgetPageHeaderProps>(\n  ({ startMonth, onMonthSelect, numMonths, monthBounds }) => {\n    return (\n      <View style={{ marginLeft: 200 + 5, flexShrink: 0 }}>\n        <View style={{ marginRight: 5 + getScrollbarWidth() }}>\n          <MonthPicker\n            startMonth={startMonth}\n            numDisplayed={numMonths}\n            monthBounds={monthBounds}\n            style={{ paddingTop: 5 }}\n            onSelect={month => onMonthSelect(month)}\n          />\n        </View>\n      </View>\n    );\n  },\n);\n\nBudgetPageHeader.displayName = 'BudgetPageHeader';\n","// @ts-strict-ignore\nimport React, {\n  useContext,\n  type CSSProperties,\n  type ComponentType,\n} from 'react';\n\nimport * as monthUtils from 'loot-core/src/shared/months';\n\nimport { theme } from '../../style';\nimport { View } from '../common/View';\nimport { NamespaceContext } from '../spreadsheet/NamespaceContext';\n\nimport { MonthsContext } from './MonthsContext';\n\ntype RenderMonthsProps = {\n  component?: ComponentType<{ month: string; editing: boolean }>;\n  editingMonth?: string;\n  args?: object;\n  style?: CSSProperties;\n};\n\nexport function RenderMonths({\n  component: Component,\n  editingMonth,\n  args,\n  style,\n}: RenderMonthsProps) {\n  const { months } = useContext(MonthsContext);\n\n  return months.map((month, index) => {\n    const editing = editingMonth === month;\n\n    return (\n      <NamespaceContext.Provider\n        key={index}\n        value={monthUtils.sheetForMonth(month)}\n      >\n        <View\n          style={{\n            flex: 1,\n            borderLeft: '1px solid ' + theme.tableBorder,\n            ...style,\n          }}\n        >\n          <Component month={month} editing={editing} {...args} />\n        </View>\n      </NamespaceContext.Provider>\n    );\n  }) as unknown as JSX.Element;\n}\n","import React, { useEffect, useRef, useState, type ComponentProps } from 'react';\n\nimport { send } from 'loot-core/src/platform/client/fetch';\n\nimport { useNotes } from '../hooks/useNotes';\nimport { SvgCustomNotesPaper } from '../icons/v2';\nimport { type CSSProperties, theme } from '../style';\n\nimport { Button } from './common/Button';\nimport { Popover } from './common/Popover';\nimport { Tooltip } from './common/Tooltip';\nimport { View } from './common/View';\nimport { Notes } from './Notes';\n\ntype NotesButtonProps = {\n  id: string;\n  width?: number;\n  height?: number;\n  defaultColor?: string;\n  tooltipPosition?: ComponentProps<typeof Tooltip>['placement'];\n  style?: CSSProperties;\n};\nexport function NotesButton({\n  id,\n  width = 12,\n  height = 12,\n  defaultColor = theme.buttonNormalText,\n  tooltipPosition = 'bottom start',\n  style,\n}: NotesButtonProps) {\n  const triggerRef = useRef(null);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const note = useNotes(id) || '';\n  const hasNotes = note && note !== '';\n\n  const [tempNotes, setTempNotes] = useState<string>(note);\n  useEffect(() => setTempNotes(note), [note]);\n\n  function onClose() {\n    send('notes-save', { id, note: tempNotes });\n    setIsOpen(false);\n  }\n\n  return (\n    <Tooltip\n      content={<Notes notes={note} />}\n      placement={tooltipPosition}\n      triggerProps={{\n        isDisabled: !hasNotes || isOpen,\n      }}\n    >\n      <View style={{ flexShrink: 0 }}>\n        <Button\n          ref={triggerRef}\n          type=\"bare\"\n          aria-label=\"View notes\"\n          className={!hasNotes && !isOpen ? 'hover-visible' : ''}\n          style={{\n            color: defaultColor,\n            ...style,\n            ...(hasNotes && { display: 'flex !important' }),\n            ...(isOpen && { color: theme.buttonNormalText }),\n          }}\n          onClick={event => {\n            event.stopPropagation();\n            setIsOpen(true);\n          }}\n        >\n          <SvgCustomNotesPaper style={{ width, height, flexShrink: 0 }} />\n        </Button>\n      </View>\n\n      <Popover\n        triggerRef={triggerRef}\n        isOpen={isOpen}\n        onOpenChange={onClose}\n        placement={tooltipPosition}\n        style={{ padding: 4 }}\n      >\n        <Notes notes={tempNotes} editable focused onChange={setTempNotes} />\n      </Popover>\n    </Tooltip>\n  );\n}\n","// @ts-strict-ignore\nimport React, { type CSSProperties, type Ref, useRef, useState } from 'react';\n\nimport {\n  type CategoryGroupEntity,\n  type CategoryEntity,\n} from 'loot-core/src/types/models';\n\nimport { SvgCheveronDown } from '../../icons/v1';\nimport { theme } from '../../style';\nimport { Button } from '../common/Button';\nimport { Menu } from '../common/Menu';\nimport { Popover } from '../common/Popover';\nimport { View } from '../common/View';\nimport { NotesButton } from '../NotesButton';\nimport { InputCell } from '../table';\n\ntype SidebarCategoryProps = {\n  innerRef: Ref<HTMLDivElement>;\n  category: CategoryEntity;\n  categoryGroup?: CategoryGroupEntity;\n  dragPreview?: boolean;\n  dragging?: boolean;\n  editing: boolean;\n  style?: CSSProperties;\n  borderColor?: string;\n  isLast?: boolean;\n  onEditName: (id: string) => void;\n  onSave: (category: CategoryEntity) => void;\n  onDelete: (id: string) => Promise<void>;\n  onHideNewCategory?: () => void;\n};\n\nexport function SidebarCategory({\n  innerRef,\n  category,\n  categoryGroup,\n  dragPreview,\n  dragging,\n  editing,\n  style,\n  isLast,\n  onEditName,\n  onSave,\n  onDelete,\n  onHideNewCategory,\n}: SidebarCategoryProps) {\n  const temporary = category.id === 'new';\n  const [menuOpen, setMenuOpen] = useState(false);\n  const triggerRef = useRef(null);\n\n  const displayed = (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        userSelect: 'none',\n        WebkitUserSelect: 'none',\n        opacity: category.hidden || categoryGroup?.hidden ? 0.33 : undefined,\n      }}\n    >\n      <div\n        data-testid=\"category-name\"\n        style={{\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          minWidth: 0,\n        }}\n      >\n        {category.name}\n      </div>\n      <View style={{ flexShrink: 0, marginLeft: 5 }} ref={triggerRef}>\n        <Button\n          type=\"bare\"\n          className=\"hover-visible\"\n          onClick={e => {\n            e.stopPropagation();\n            setMenuOpen(true);\n          }}\n          style={{ color: 'currentColor', padding: 3 }}\n        >\n          <SvgCheveronDown\n            width={14}\n            height={14}\n            style={{ color: 'currentColor' }}\n          />\n        </Button>\n\n        <Popover\n          triggerRef={triggerRef}\n          placement=\"bottom start\"\n          isOpen={menuOpen}\n          onOpenChange={() => setMenuOpen(false)}\n          style={{ width: 200 }}\n        >\n          <Menu\n            onMenuSelect={type => {\n              if (type === 'rename') {\n                onEditName(category.id);\n              } else if (type === 'delete') {\n                onDelete(category.id);\n              } else if (type === 'toggle-visibility') {\n                onSave({ ...category, hidden: !category.hidden });\n              }\n              setMenuOpen(false);\n            }}\n            items={[\n              { name: 'rename', text: 'Rename' },\n              !categoryGroup?.hidden && {\n                name: 'toggle-visibility',\n                text: category.hidden ? 'Show' : 'Hide',\n              },\n              { name: 'delete', text: 'Delete' },\n            ]}\n          />\n        </Popover>\n      </View>\n      <View style={{ flex: 1 }} />\n      <View style={{ flexShrink: 0 }}>\n        <NotesButton\n          id={category.id}\n          style={dragging && { color: 'currentColor' }}\n          defaultColor={theme.pageTextLight}\n        />\n      </View>\n    </View>\n  );\n\n  return (\n    <View\n      innerRef={innerRef}\n      style={{\n        width: 200,\n        overflow: 'hidden',\n        '& .hover-visible': {\n          display: 'none',\n        },\n        ...(!dragging &&\n          !dragPreview && {\n            '&:hover .hover-visible': {\n              display: 'flex',\n            },\n          }),\n        ...(dragging && { color: theme.formInputTextPlaceholderSelected }),\n        // The zIndex here forces the the view on top of a row below\n        // it that may be \"collapsed\" and show a border on top\n        ...(dragPreview && {\n          backgroundColor: theme.tableBackground,\n          zIndex: 10000,\n          borderRadius: 6,\n          overflow: 'hidden',\n        }),\n        ...style,\n      }}\n      onKeyDown={e => {\n        if (e.key === 'Enter') {\n          onEditName(null);\n          e.stopPropagation();\n        }\n      }}\n    >\n      <InputCell\n        value={category.name}\n        formatter={() => displayed}\n        width=\"flex\"\n        exposed={editing || temporary}\n        onUpdate={value => {\n          if (temporary) {\n            if (value === '') {\n              onHideNewCategory();\n            } else if (value !== '') {\n              onSave({ ...category, name: value });\n            }\n          } else {\n            if (value !== category.name) {\n              onSave({ ...category, name: value });\n            }\n          }\n        }}\n        onBlur={() => onEditName(null)}\n        style={{ paddingLeft: 13, ...(isLast && { borderBottomWidth: 0 }) }}\n        inputProps={{\n          placeholder: temporary ? 'New Category Name' : '',\n        }}\n      />\n    </View>\n  );\n}\n","// @ts-strict-ignore\nimport React, { type ComponentProps } from 'react';\n\nimport {\n  type CategoryGroupEntity,\n  type CategoryEntity,\n} from 'loot-core/src/types/models';\n\nimport { theme } from '../../style';\nimport { View } from '../common/View';\nimport {\n  useDraggable,\n  useDroppable,\n  DropHighlight,\n  type DragState,\n  type OnDragChangeCallback,\n  type OnDropCallback,\n} from '../sort';\nimport { Row } from '../table';\n\nimport { RenderMonths } from './RenderMonths';\nimport { SidebarCategory } from './SidebarCategory';\n\ntype ExpenseCategoryProps = {\n  cat: CategoryEntity;\n  categoryGroup?: CategoryGroupEntity;\n  editingCell: { id: string; cell: string } | null;\n  dragState: DragState<CategoryEntity>;\n  MonthComponent: ComponentProps<typeof RenderMonths>['component'];\n  onEditName?: ComponentProps<typeof SidebarCategory>['onEditName'];\n  onEditMonth?: (id: string, month: string) => void;\n  onSave?: ComponentProps<typeof SidebarCategory>['onSave'];\n  onDelete?: ComponentProps<typeof SidebarCategory>['onDelete'];\n  onDragChange: OnDragChangeCallback<CategoryEntity>;\n  onBudgetAction: (month: number, action: string, arg: unknown) => void;\n  onShowActivity: (id: string, month: string) => void;\n  onReorder: OnDropCallback;\n};\n\nexport function ExpenseCategory({\n  cat,\n  categoryGroup,\n  editingCell,\n  dragState,\n  MonthComponent,\n  onEditName,\n  onEditMonth,\n  onSave,\n  onDelete,\n  onBudgetAction,\n  onShowActivity,\n  onDragChange,\n  onReorder,\n}: ExpenseCategoryProps) {\n  let dragging = dragState && dragState.item === cat;\n\n  if (dragState && dragState.item.id === cat.cat_group) {\n    dragging = true;\n  }\n\n  const { dragRef } = useDraggable({\n    type: 'category',\n    onDragChange,\n    item: cat,\n    canDrag: editingCell === null,\n  });\n\n  const { dropRef, dropPos } = useDroppable({\n    types: 'category',\n    id: cat.id,\n    onDrop: onReorder,\n  });\n\n  return (\n    <Row\n      innerRef={dropRef}\n      collapsed={true}\n      style={{\n        backgroundColor: theme.tableBackground,\n        opacity: cat.hidden || categoryGroup?.hidden ? 0.5 : undefined,\n      }}\n    >\n      <DropHighlight pos={dropPos} offset={{ top: 1 }} />\n\n      <View style={{ flex: 1, flexDirection: 'row' }}>\n        <SidebarCategory\n          innerRef={dragRef}\n          category={cat}\n          categoryGroup={categoryGroup}\n          dragPreview={dragging && dragState.preview}\n          dragging={dragging && !dragState.preview}\n          editing={\n            editingCell &&\n            editingCell.cell === 'name' &&\n            editingCell.id === cat.id\n          }\n          onEditName={onEditName}\n          onSave={onSave}\n          onDelete={onDelete}\n        />\n\n        <RenderMonths\n          component={MonthComponent}\n          editingMonth={\n            editingCell && editingCell.id === cat.id && editingCell.cell\n          }\n          args={{\n            category: cat,\n            onEdit: onEditMonth,\n            onBudgetAction,\n            onShowActivity,\n          }}\n        />\n      </View>\n    </Row>\n  );\n}\n","// @ts-strict-ignore\nimport React, { type CSSProperties, useRef, useState } from 'react';\nimport { type ConnectDragSource } from 'react-dnd';\n\nimport { SvgExpandArrow } from '../../icons/v0';\nimport { SvgCheveronDown } from '../../icons/v1';\nimport { theme } from '../../style';\nimport { Button } from '../common/Button';\nimport { Menu } from '../common/Menu';\nimport { Popover } from '../common/Popover';\nimport { Text } from '../common/Text';\nimport { View } from '../common/View';\nimport { NotesButton } from '../NotesButton';\nimport { InputCell } from '../table';\n\ntype SidebarGroupProps = {\n  group: {\n    id: string;\n    hidden: number;\n    categories: object[];\n    is_income: number;\n    name: string;\n    sort_order: number;\n    tombstone: number;\n  };\n  editing?: boolean;\n  collapsed: boolean;\n  dragPreview?: boolean;\n  innerRef?: ConnectDragSource;\n  style?: CSSProperties;\n  onEdit?: (id: string) => void;\n  onSave?: (group: object) => Promise<void>;\n  onDelete?: (id: string) => Promise<void>;\n  onShowNewCategory?: (groupId: string) => void;\n  onHideNewGroup?: () => void;\n  onToggleCollapse?: (id: string) => void;\n};\n\nexport function SidebarGroup({\n  group,\n  editing,\n  collapsed,\n  dragPreview,\n  innerRef,\n  style,\n  onEdit,\n  onSave,\n  onDelete,\n  onShowNewCategory,\n  onHideNewGroup,\n  onToggleCollapse,\n}: SidebarGroupProps) {\n  const temporary = group.id === 'new';\n  const [menuOpen, setMenuOpen] = useState(false);\n  const triggerRef = useRef(null);\n\n  const displayed = (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        userSelect: 'none',\n        WebkitUserSelect: 'none',\n      }}\n      onClick={() => {\n        onToggleCollapse(group.id);\n      }}\n    >\n      {!dragPreview && (\n        <SvgExpandArrow\n          width={8}\n          height={8}\n          style={{\n            marginRight: 5,\n            marginLeft: 5,\n            flexShrink: 0,\n            transition: 'transform .1s',\n            transform: collapsed ? 'rotate(-90deg)' : '',\n          }}\n        />\n      )}\n      <div\n        style={{\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          minWidth: 0,\n        }}\n      >\n        {dragPreview && <Text style={{ fontWeight: 500 }}>Group: </Text>}\n        {group.name}\n      </div>\n      {!dragPreview && (\n        <>\n          <View style={{ marginLeft: 5, flexShrink: 0 }} ref={triggerRef}>\n            <Button\n              type=\"bare\"\n              className=\"hover-visible\"\n              onClick={e => {\n                e.stopPropagation();\n                setMenuOpen(true);\n              }}\n              style={{ padding: 3 }}\n            >\n              <SvgCheveronDown width={14} height={14} />\n            </Button>\n\n            <Popover\n              triggerRef={triggerRef}\n              placement=\"bottom start\"\n              isOpen={menuOpen}\n              onOpenChange={() => setMenuOpen(false)}\n              style={{ width: 200 }}\n            >\n              <Menu\n                onMenuSelect={type => {\n                  if (type === 'rename') {\n                    onEdit(group.id);\n                  } else if (type === 'add-category') {\n                    onShowNewCategory(group.id);\n                  } else if (type === 'delete') {\n                    onDelete(group.id);\n                  } else if (type === 'toggle-visibility') {\n                    onSave({ ...group, hidden: !group.hidden });\n                  }\n                  setMenuOpen(false);\n                }}\n                items={[\n                  { name: 'add-category', text: 'Add category' },\n                  { name: 'rename', text: 'Rename' },\n                  !group.is_income && {\n                    name: 'toggle-visibility',\n                    text: group.hidden ? 'Show' : 'Hide',\n                  },\n                  onDelete && { name: 'delete', text: 'Delete' },\n                ]}\n              />\n            </Popover>\n          </View>\n          <View style={{ flex: 1 }} />\n          <View style={{ flexShrink: 0 }}>\n            <NotesButton\n              id={group.id}\n              style={dragPreview && { color: 'currentColor' }}\n              defaultColor={theme.pageTextLight}\n            />\n          </View>\n        </>\n      )}\n    </View>\n  );\n\n  return (\n    <View\n      innerRef={innerRef}\n      style={{\n        ...style,\n        width: 200,\n        backgroundColor: theme.tableRowHeaderBackground,\n        overflow: 'hidden',\n        '& .hover-visible': {\n          display: 'none',\n        },\n        ...(!dragPreview && {\n          '&:hover .hover-visible': {\n            display: 'flex',\n          },\n        }),\n        ...(dragPreview && {\n          paddingLeft: 10,\n          zIndex: 10000,\n          borderRadius: 6,\n          overflow: 'hidden',\n        }),\n      }}\n      onKeyDown={e => {\n        if (e.key === 'Enter') {\n          onEdit(null);\n          e.stopPropagation();\n        }\n      }}\n    >\n      <InputCell\n        value={group.name}\n        formatter={() => displayed}\n        width=\"flex\"\n        exposed={editing}\n        onUpdate={value => {\n          if (temporary) {\n            if (value === '') {\n              onHideNewGroup();\n            } else if (value !== '') {\n              onSave({ id: group.id, name: value });\n            }\n          } else {\n            onSave({ id: group.id, name: value });\n          }\n        }}\n        onBlur={() => onEdit(null)}\n        style={{ fontWeight: 600 }}\n        inputProps={{\n          style: { marginLeft: 20 },\n          placeholder: temporary ? 'New Group Name' : '',\n        }}\n      />\n    </View>\n  );\n}\n","// @ts-strict-ignore\nimport React, { type ComponentProps } from 'react';\n\nimport { theme } from '../../style';\nimport { View } from '../common/View';\nimport {\n  useDraggable,\n  useDroppable,\n  DropHighlight,\n  type OnDragChangeCallback,\n  type OnDropCallback,\n  type DragState,\n} from '../sort';\nimport { Row, ROW_HEIGHT } from '../table';\n\nimport { RenderMonths } from './RenderMonths';\nimport { SidebarGroup } from './SidebarGroup';\n\ntype ExpenseGroupProps = {\n  group: ComponentProps<typeof SidebarGroup>['group'];\n  collapsed: boolean;\n  editingCell: { id: string; cell: string } | null;\n  dragState: DragState<ComponentProps<typeof SidebarGroup>['group']>;\n  MonthComponent: ComponentProps<typeof RenderMonths>['component'];\n  onEditName?: ComponentProps<typeof SidebarGroup>['onEdit'];\n  onSave?: ComponentProps<typeof SidebarGroup>['onSave'];\n  onDelete?: ComponentProps<typeof SidebarGroup>['onDelete'];\n  onDragChange: OnDragChangeCallback<\n    ComponentProps<typeof SidebarGroup>['group']\n  >;\n  onReorderGroup: OnDropCallback;\n  onReorderCategory: OnDropCallback;\n  onToggleCollapse?: ComponentProps<typeof SidebarGroup>['onToggleCollapse'];\n  onShowNewCategory?: ComponentProps<typeof SidebarGroup>['onShowNewCategory'];\n};\n\nexport function ExpenseGroup({\n  group,\n  collapsed,\n  editingCell,\n  dragState,\n  MonthComponent,\n  onEditName,\n  onSave,\n  onDelete,\n  onDragChange,\n  onReorderGroup,\n  onReorderCategory,\n  onToggleCollapse,\n  onShowNewCategory,\n}: ExpenseGroupProps) {\n  const dragging = dragState && dragState.item === group;\n\n  const { dragRef } = useDraggable({\n    type: 'group',\n    onDragChange,\n    item: group,\n    canDrag: editingCell === null,\n  });\n\n  const { dropRef, dropPos } = useDroppable({\n    types: 'group',\n    id: group.id,\n    onDrop: onReorderGroup,\n  });\n\n  const { dropRef: catDropRef, dropPos: catDropPos } = useDroppable({\n    types: 'category',\n    id: group.id,\n    onDrop: onReorderCategory,\n    onLongHover: () => {\n      if (collapsed) {\n        onToggleCollapse(group.id);\n      }\n    },\n  });\n\n  return (\n    <Row\n      collapsed={true}\n      style={{\n        fontWeight: 600,\n        opacity: group.hidden ? 0.33 : undefined,\n        backgroundColor: theme.tableRowHeaderBackground,\n      }}\n    >\n      {dragState && !dragState.preview && dragState.type === 'group' && (\n        <View\n          innerRef={dropRef}\n          style={{\n            position: 'absolute',\n            left: 0,\n            right: 0,\n            height: collapsed\n              ? ROW_HEIGHT - 1\n              : (1 + group.categories.length) * (ROW_HEIGHT - 1) + 1,\n            zIndex: 10000,\n          }}\n        >\n          <DropHighlight pos={dropPos} offset={{ top: 1 }} />\n        </View>\n      )}\n\n      <DropHighlight pos={catDropPos} offset={{ top: 1 }} />\n\n      <View\n        innerRef={catDropRef}\n        style={{\n          flex: 1,\n          flexDirection: 'row',\n          opacity: dragging && !dragState.preview ? 0.3 : 1,\n        }}\n      >\n        <SidebarGroup\n          innerRef={dragRef}\n          group={group}\n          editing={\n            editingCell &&\n            editingCell.cell === 'name' &&\n            editingCell.id === group.id\n          }\n          dragPreview={dragging && dragState.preview}\n          collapsed={collapsed}\n          onToggleCollapse={onToggleCollapse}\n          onEdit={onEditName}\n          onSave={onSave}\n          onDelete={onDelete}\n          onShowNewCategory={onShowNewCategory}\n        />\n        <RenderMonths component={MonthComponent} args={{ group }} />\n      </View>\n    </Row>\n  );\n}\n","// @ts-strict-ignore\nimport React, { type ComponentProps } from 'react';\n\nimport { type CategoryEntity } from 'loot-core/src/types/models';\n\nimport {\n  useDraggable,\n  useDroppable,\n  DropHighlight,\n  type OnDragChangeCallback,\n  type OnDropCallback,\n} from '../sort';\nimport { Row } from '../table';\n\nimport { RenderMonths } from './RenderMonths';\nimport { SidebarCategory } from './SidebarCategory';\n\ntype IncomeCategoryProps = {\n  cat: CategoryEntity;\n  isLast?: boolean;\n  editingCell: { id: string; cell: string } | null;\n  MonthComponent: ComponentProps<typeof RenderMonths>['component'];\n  onEditName: ComponentProps<typeof SidebarCategory>['onEditName'];\n  onEditMonth?: (id: string, month: string) => void;\n  onSave: ComponentProps<typeof SidebarCategory>['onSave'];\n  onDelete: ComponentProps<typeof SidebarCategory>['onDelete'];\n  onDragChange: OnDragChangeCallback<CategoryEntity>;\n  onBudgetAction: (month: string, action: string, arg: unknown) => void;\n  onReorder: OnDropCallback;\n  onShowActivity: (id: string, month: string) => void;\n};\n\nexport function IncomeCategory({\n  cat,\n  isLast,\n  editingCell,\n  MonthComponent,\n  onEditName,\n  onEditMonth,\n  onSave,\n  onDelete,\n  onDragChange,\n  onBudgetAction,\n  onReorder,\n  onShowActivity,\n}: IncomeCategoryProps) {\n  const { dragRef } = useDraggable({\n    type: 'income-category',\n    onDragChange,\n    item: cat,\n    canDrag: editingCell === null,\n  });\n\n  const { dropRef, dropPos } = useDroppable({\n    types: 'income-category',\n    id: cat.id,\n    onDrop: onReorder,\n  });\n\n  return (\n    <Row\n      innerRef={dropRef}\n      collapsed={true}\n      style={{\n        opacity: cat.hidden ? 0.5 : undefined,\n      }}\n    >\n      <DropHighlight pos={dropPos} offset={{ top: 1 }} />\n\n      <SidebarCategory\n        innerRef={dragRef}\n        category={cat}\n        isLast={isLast}\n        editing={\n          editingCell &&\n          editingCell.cell === 'name' &&\n          editingCell.id === cat.id\n        }\n        onEditName={onEditName}\n        onSave={onSave}\n        onDelete={onDelete}\n      />\n      <RenderMonths\n        component={MonthComponent}\n        editingMonth={\n          editingCell && editingCell.id === cat.id && editingCell.cell\n        }\n        args={{\n          category: cat,\n          onEdit: onEditMonth,\n          isLast,\n          onShowActivity,\n          onBudgetAction,\n        }}\n      />\n    </Row>\n  );\n}\n","// @ts-strict-ignore\nimport React from 'react';\n\nimport { theme } from '../../style';\nimport { Row } from '../table';\n\nimport { RenderMonths } from './RenderMonths';\nimport { SidebarGroup } from './SidebarGroup';\n\ntype IncomeGroupProps = {\n  group: {\n    id: string;\n    hidden: number;\n    categories: object[];\n    is_income: number;\n    name: string;\n    sort_order: number;\n    tombstone: number;\n  };\n  editingCell: { id: string; cell: string } | null;\n  collapsed: boolean;\n  MonthComponent: () => JSX.Element;\n  onEditName: (id: string) => void;\n  onSave: (group: object) => Promise<void>;\n  onToggleCollapse: (id: string) => void;\n  onShowNewCategory: (groupId: string) => void;\n};\n\nexport function IncomeGroup({\n  group,\n  editingCell,\n  collapsed,\n  MonthComponent,\n  onEditName,\n  onSave,\n  onToggleCollapse,\n  onShowNewCategory,\n}: IncomeGroupProps) {\n  return (\n    <Row\n      collapsed={true}\n      style={{\n        fontWeight: 600,\n        backgroundColor: theme.tableRowHeaderBackground,\n      }}\n    >\n      <SidebarGroup\n        group={group}\n        collapsed={collapsed}\n        editing={\n          editingCell &&\n          editingCell.cell === 'name' &&\n          editingCell.id === group.id\n        }\n        onEdit={onEditName}\n        onSave={onSave}\n        onToggleCollapse={onToggleCollapse}\n        onShowNewCategory={onShowNewCategory}\n      />\n      <RenderMonths component={MonthComponent} args={{ group }} />\n    </Row>\n  );\n}\n","import React from 'react';\n\nimport { Button } from '../common/Button';\nimport { View } from '../common/View';\n\nimport { RenderMonths } from './RenderMonths';\n\ntype IncomeHeaderProps = {\n  MonthComponent?: () => JSX.Element;\n  onShowNewGroup: () => void;\n};\n\nexport function IncomeHeader({\n  MonthComponent,\n  onShowNewGroup,\n}: IncomeHeaderProps) {\n  return (\n    <View style={{ flexDirection: 'row', flex: 1 }}>\n      <View\n        style={{\n          width: 200,\n          alignItems: 'flex-start',\n          justifyContent: 'flex-start',\n        }}\n      >\n        <Button onClick={onShowNewGroup} style={{ fontSize: 12, margin: 10 }}>\n          Add Group\n        </Button>\n      </View>\n      <RenderMonths\n        component={MonthComponent}\n        style={{ border: 0, justifyContent: 'flex-end' }}\n      />\n    </View>\n  );\n}\n","import React, { memo, useState, useMemo } from 'react';\n\nimport { useLocalPref } from '../../hooks/useLocalPref';\nimport { theme, styles } from '../../style';\nimport { View } from '../common/View';\nimport { DropHighlightPosContext } from '../sort';\nimport { Row } from '../table';\n\nimport { ExpenseCategory } from './ExpenseCategory';\nimport { ExpenseGroup } from './ExpenseGroup';\nimport { IncomeCategory } from './IncomeCategory';\nimport { IncomeGroup } from './IncomeGroup';\nimport { IncomeHeader } from './IncomeHeader';\nimport { SidebarCategory } from './SidebarCategory';\nimport { SidebarGroup } from './SidebarGroup';\nimport { separateGroups } from './util';\n\nexport const BudgetCategories = memo(\n  ({\n    categoryGroups,\n    editingCell,\n    dataComponents,\n    onBudgetAction,\n    onShowActivity,\n    onEditName,\n    onEditMonth,\n    onSaveCategory,\n    onSaveGroup,\n    onDeleteCategory,\n    onDeleteGroup,\n    onReorderCategory,\n    onReorderGroup,\n  }) => {\n    const [collapsedGroupIds = [], setCollapsedGroupIdsPref] =\n      useLocalPref('budget.collapsed');\n    const [showHiddenCategories] = useLocalPref('budget.showHiddenCategories');\n    function onCollapse(value) {\n      setCollapsedGroupIdsPref(value);\n    }\n\n    const [isAddingGroup, setIsAddingGroup] = useState(false);\n    const [newCategoryForGroup, setNewCategoryForGroup] = useState(null);\n    const items = useMemo(() => {\n      const [expenseGroups, incomeGroup] = separateGroups(categoryGroups);\n\n      let items = Array.prototype.concat.apply(\n        [],\n        expenseGroups.map(group => {\n          if (group.hidden && !showHiddenCategories) {\n            return [];\n          }\n\n          const groupCategories = group.categories.filter(\n            cat => showHiddenCategories || !cat.hidden,\n          );\n\n          const items = [{ type: 'expense-group', value: { ...group } }];\n\n          if (newCategoryForGroup === group.id) {\n            items.push({ type: 'new-category' });\n          }\n\n          return [\n            ...items,\n            ...(collapsedGroupIds.includes(group.id)\n              ? []\n              : groupCategories\n            ).map(cat => ({\n              type: 'expense-category',\n              value: cat,\n              group,\n            })),\n          ];\n        }),\n      );\n\n      if (isAddingGroup) {\n        items.push({ type: 'new-group' });\n      }\n\n      if (incomeGroup) {\n        items = items.concat(\n          [\n            { type: 'income-separator' },\n            { type: 'income-group', value: incomeGroup },\n            newCategoryForGroup === incomeGroup.id && { type: 'new-category' },\n            ...(collapsedGroupIds.includes(incomeGroup.id)\n              ? []\n              : incomeGroup.categories.filter(\n                  cat => showHiddenCategories || !cat.hidden,\n                )\n            ).map(cat => ({\n              type: 'income-category',\n              value: cat,\n            })),\n          ].filter(x => x),\n        );\n      }\n\n      return items;\n    }, [\n      categoryGroups,\n      collapsedGroupIds,\n      newCategoryForGroup,\n      isAddingGroup,\n      showHiddenCategories,\n    ]);\n\n    const [dragState, setDragState] = useState(null);\n    const [savedCollapsed, setSavedCollapsed] = useState(null);\n\n    // TODO: If we turn this into a reducer, we could probably memoize\n    // each item in the list for better perf\n    function onDragChange(newDragState) {\n      const { state } = newDragState;\n\n      if (state === 'start-preview') {\n        setDragState({\n          type: newDragState.type,\n          item: newDragState.item,\n          preview: true,\n        });\n      } else if (state === 'start') {\n        if (dragState) {\n          setDragState({\n            ...dragState,\n            preview: false,\n          });\n          setSavedCollapsed(collapsedGroupIds);\n        }\n      } else if (state === 'hover') {\n        setDragState({\n          ...dragState,\n          hoveredId: newDragState.id,\n          hoveredPos: newDragState.pos,\n        });\n      } else if (state === 'end') {\n        setDragState(null);\n        onCollapse(savedCollapsed || []);\n      }\n    }\n\n    function onToggleCollapse(id) {\n      if (collapsedGroupIds.includes(id)) {\n        onCollapse(collapsedGroupIds.filter(id_ => id_ !== id));\n      } else {\n        onCollapse([...collapsedGroupIds, id]);\n      }\n    }\n\n    function onShowNewGroup() {\n      setIsAddingGroup(true);\n    }\n\n    function onHideNewGroup() {\n      setIsAddingGroup(false);\n    }\n\n    function _onSaveGroup(group) {\n      onSaveGroup?.(group);\n      if (group.id === 'new') {\n        onHideNewGroup();\n      }\n    }\n\n    function onShowNewCategory(groupId) {\n      onCollapse(collapsedGroupIds.filter(c => c !== groupId));\n      setNewCategoryForGroup(groupId);\n    }\n\n    function onHideNewCategory() {\n      setNewCategoryForGroup(null);\n    }\n\n    function _onSaveCategory(category) {\n      onSaveCategory?.(category);\n      if (category.id === 'new') {\n        onHideNewCategory();\n      }\n    }\n\n    return (\n      <View\n        style={{\n          marginBottom: 10,\n          backgroundColor: theme.tableBackground,\n          overflow: 'hidden',\n          boxShadow: styles.cardShadow,\n          borderRadius: '0 0 4px 4px',\n          flex: 1,\n        }}\n      >\n        {items.map((item, idx) => {\n          let content;\n          switch (item.type) {\n            case 'new-group':\n              content = (\n                <Row\n                  style={{ backgroundColor: theme.tableRowHeaderBackground }}\n                >\n                  <SidebarGroup\n                    group={{ id: 'new', name: '' }}\n                    editing={true}\n                    onSave={_onSaveGroup}\n                    onHideNewGroup={onHideNewGroup}\n                    onEdit={onEditName}\n                  />\n                </Row>\n              );\n              break;\n            case 'new-category':\n              content = (\n                <Row>\n                  <SidebarCategory\n                    category={{\n                      name: '',\n                      cat_group: newCategoryForGroup,\n                      is_income:\n                        newCategoryForGroup ===\n                        categoryGroups.find(g => g.is_income).id,\n                      id: 'new',\n                    }}\n                    editing={true}\n                    onSave={_onSaveCategory}\n                    onHideNewCategory={onHideNewCategory}\n                    onEditName={onEditName}\n                  />\n                </Row>\n              );\n              break;\n\n            case 'expense-group':\n              content = (\n                <ExpenseGroup\n                  group={item.value}\n                  editingCell={editingCell}\n                  collapsed={collapsedGroupIds.includes(item.value.id)}\n                  MonthComponent={dataComponents.ExpenseGroupComponent}\n                  dragState={dragState}\n                  onEditName={onEditName}\n                  onSave={_onSaveGroup}\n                  onDelete={onDeleteGroup}\n                  onDragChange={onDragChange}\n                  onReorderGroup={onReorderGroup}\n                  onReorderCategory={onReorderCategory}\n                  onToggleCollapse={onToggleCollapse}\n                  onShowNewCategory={onShowNewCategory}\n                />\n              );\n              break;\n            case 'expense-category':\n              content = (\n                <ExpenseCategory\n                  cat={item.value}\n                  categoryGroup={item.group}\n                  editingCell={editingCell}\n                  MonthComponent={dataComponents.ExpenseCategoryComponent}\n                  dragState={dragState}\n                  onEditName={onEditName}\n                  onEditMonth={onEditMonth}\n                  onSave={_onSaveCategory}\n                  onDelete={onDeleteCategory}\n                  onDragChange={onDragChange}\n                  onReorder={onReorderCategory}\n                  onBudgetAction={onBudgetAction}\n                  onShowActivity={onShowActivity}\n                />\n              );\n              break;\n            case 'income-separator':\n              content = (\n                <View\n                  style={{\n                    height: styles.incomeHeaderHeight,\n                    backgroundColor: theme.tableBackground,\n                  }}\n                >\n                  <IncomeHeader\n                    MonthComponent={dataComponents.IncomeHeaderComponent}\n                    onShowNewGroup={onShowNewGroup}\n                  />\n                </View>\n              );\n              break;\n            case 'income-group':\n              content = (\n                <IncomeGroup\n                  group={item.value}\n                  editingCell={editingCell}\n                  MonthComponent={dataComponents.IncomeGroupComponent}\n                  collapsed={collapsedGroupIds.includes(item.value.id)}\n                  onEditName={onEditName}\n                  onSave={_onSaveGroup}\n                  onToggleCollapse={onToggleCollapse}\n                  onShowNewCategory={onShowNewCategory}\n                />\n              );\n              break;\n            case 'income-category':\n              content = (\n                <IncomeCategory\n                  cat={item.value}\n                  editingCell={editingCell}\n                  isLast={idx === items.length - 1}\n                  MonthComponent={dataComponents.IncomeCategoryComponent}\n                  onEditName={onEditName}\n                  onEditMonth={onEditMonth}\n                  onSave={_onSaveCategory}\n                  onDelete={onDeleteCategory}\n                  onDragChange={onDragChange}\n                  onReorder={onReorderCategory}\n                  onBudgetAction={onBudgetAction}\n                  onShowActivity={onShowActivity}\n                />\n              );\n              break;\n            default:\n              throw new Error('Unknown item type: ' + item.type);\n          }\n\n          const pos =\n            idx === 0 ? 'first' : idx === items.length - 1 ? 'last' : null;\n\n          return (\n            <DropHighlightPosContext.Provider\n              key={\n                item.value\n                  ? item.value.id\n                  : item.type === 'income-separator'\n                    ? 'separator'\n                    : idx\n              }\n              value={pos}\n            >\n              <View\n                style={\n                  !dragState && {\n                    ':hover': { backgroundColor: theme.tableBackground },\n                  }\n                }\n              >\n                {content}\n              </View>\n            </DropHighlightPosContext.Provider>\n          );\n        })}\n      </View>\n    );\n  },\n);\n\nBudgetCategories.displayName = 'BudgetCategories';\n","import React, {\n  useContext,\n  useState,\n  useRef,\n  useCallback,\n  useLayoutEffect,\n} from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nimport { css } from 'glamor';\n\nimport { addMonths, subMonths } from 'loot-core/src/shared/months';\n\nimport { useResizeObserver } from '../../hooks/useResizeObserver';\nimport { View } from '../common/View';\n\nimport { MonthsContext } from './MonthsContext';\nimport { type BudgetSummary as ReportBudgetSummary } from './report/budgetsummary/BudgetSummary';\nimport { type BudgetSummary as RolloverBudgetSummary } from './rollover/budgetsummary/BudgetSummary';\n\ntype BudgetSummariesProps = {\n  SummaryComponent: typeof ReportBudgetSummary | typeof RolloverBudgetSummary;\n};\n\nexport function BudgetSummaries({ SummaryComponent }: BudgetSummariesProps) {\n  const { months } = useContext(MonthsContext);\n\n  const [widthState, setWidthState] = useState(0);\n  const [styles, spring] = useSpring(() => ({\n    x: 0,\n    config: { mass: 3, tension: 600, friction: 80 },\n  }));\n\n  const containerRef = useResizeObserver(\n    useCallback(rect => {\n      setWidthState(rect.width);\n    }, []),\n  );\n\n  const prevMonth0 = useRef(months[0]);\n  const allMonths = [...months];\n  allMonths.unshift(subMonths(months[0], 1));\n  allMonths.push(addMonths(months[months.length - 1], 1));\n  const monthWidth = widthState / months.length;\n\n  useLayoutEffect(() => {\n    const prevMonth = prevMonth0.current;\n    const reversed = prevMonth > months[0];\n    const offsetX = monthWidth;\n    let from = reversed ? -offsetX * 2 : 0;\n\n    if (prevMonth !== allMonths[0] && prevMonth !== allMonths[2]) {\n      from = -offsetX;\n    }\n\n    const to = -offsetX;\n    spring.start({ from: { x: from }, x: to });\n  }, [months[0]]);\n\n  useLayoutEffect(() => {\n    prevMonth0.current = months[0];\n  }, [months[0]]);\n\n  useLayoutEffect(() => {\n    spring.start({ from: { x: -monthWidth }, to: { x: -monthWidth } });\n  }, [monthWidth]);\n\n  return (\n    <div\n      className={`${css([\n        { flex: 1, overflow: 'hidden' },\n        months.length === 1 && {\n          marginLeft: -4,\n          marginRight: -4,\n        },\n      ])}`}\n      ref={containerRef}\n    >\n      <animated.div\n        className=\"view\"\n        style={{\n          flexDirection: 'row',\n          width: widthState,\n          willChange: 'transform',\n          transform: styles.x.to(x => `translateX(${x}px)`),\n        }}\n      >\n        {allMonths.map(month => {\n          return (\n            <View\n              key={month}\n              style={{\n                flex: `0 0 ${monthWidth}px`,\n                paddingLeft: 4,\n                paddingRight: 4,\n              }}\n            >\n              <SummaryComponent month={month} />\n            </View>\n          );\n        })}\n      </animated.div>\n    </div>\n  );\n}\n","import React, { type ComponentProps, memo, useRef, useState } from 'react';\n\nimport { SvgDotsHorizontalTriple } from '../../icons/v1';\nimport { theme, styles } from '../../style';\nimport { Button } from '../common/Button';\nimport { Menu } from '../common/Menu';\nimport { Popover } from '../common/Popover';\nimport { View } from '../common/View';\n\nimport { RenderMonths } from './RenderMonths';\nimport { getScrollbarWidth } from './util';\n\ntype BudgetTotalsProps = {\n  MonthComponent: ComponentProps<typeof RenderMonths>['component'];\n  toggleHiddenCategories: () => void;\n  expandAllCategories: () => void;\n  collapseAllCategories: () => void;\n};\n\nexport const BudgetTotals = memo(function BudgetTotals({\n  MonthComponent,\n  toggleHiddenCategories,\n  expandAllCategories,\n  collapseAllCategories,\n}: BudgetTotalsProps) {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const triggerRef = useRef(null);\n\n  return (\n    <View\n      data-testid=\"budget-totals\"\n      style={{\n        backgroundColor: theme.tableBackground,\n        flexDirection: 'row',\n        flexShrink: 0,\n        boxShadow: styles.cardShadow,\n        marginLeft: 5,\n        marginRight: 5 + getScrollbarWidth(),\n        borderRadius: '4px 4px 0 0',\n        borderBottom: '1px solid ' + theme.tableBorder,\n      }}\n    >\n      <View\n        style={{\n          width: 200,\n          color: theme.pageTextLight,\n          justifyContent: 'center',\n          paddingLeft: 15,\n          paddingRight: 5,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          userSelect: 'none',\n          WebkitUserSelect: 'none',\n        }}\n      >\n        <View style={{ flexGrow: '1' }}>Category</View>\n        <Button\n          ref={triggerRef}\n          type=\"bare\"\n          aria-label=\"Menu\"\n          onClick={() => {\n            setMenuOpen(true);\n          }}\n          style={{ color: 'currentColor', padding: 3 }}\n        >\n          <SvgDotsHorizontalTriple\n            width={15}\n            height={15}\n            style={{ color: theme.pageTextLight }}\n          />\n        </Button>\n\n        <Popover\n          triggerRef={triggerRef}\n          isOpen={menuOpen}\n          onOpenChange={() => setMenuOpen(false)}\n          style={{ width: 200 }}\n        >\n          <Menu\n            onMenuSelect={type => {\n              if (type === 'toggle-visibility') {\n                toggleHiddenCategories();\n              } else if (type === 'expandAllCategories') {\n                expandAllCategories();\n              } else if (type === 'collapseAllCategories') {\n                collapseAllCategories();\n              }\n              setMenuOpen(false);\n            }}\n            items={[\n              {\n                name: 'toggle-visibility',\n                text: 'Toggle hidden categories',\n              },\n              {\n                name: 'expandAllCategories',\n                text: 'Expand all',\n              },\n              {\n                name: 'collapseAllCategories',\n                text: 'Collapse all',\n              },\n            ]}\n          />\n        </Popover>\n      </View>\n      <RenderMonths component={MonthComponent} />\n    </View>\n  );\n});\n","import React, { useState } from 'react';\n\nimport { useCategories } from '../../hooks/useCategories';\nimport { useLocalPref } from '../../hooks/useLocalPref';\nimport { theme, styles } from '../../style';\nimport { View } from '../common/View';\n\nimport { BudgetCategories } from './BudgetCategories';\nimport { BudgetSummaries } from './BudgetSummaries';\nimport { BudgetTotals } from './BudgetTotals';\nimport { MonthsProvider } from './MonthsContext';\nimport { findSortDown, findSortUp, getScrollbarWidth } from './util';\n\nexport function BudgetTable(props) {\n  const {\n    type,\n    prewarmStartMonth,\n    startMonth,\n    numMonths,\n    monthBounds,\n    dataComponents,\n    onSaveCategory,\n    onDeleteCategory,\n    onSaveGroup,\n    onDeleteGroup,\n    onReorderCategory,\n    onReorderGroup,\n    onShowActivity,\n    onBudgetAction,\n  } = props;\n\n  const { grouped: categoryGroups } = useCategories();\n  const [collapsedGroupIds = [], setCollapsedGroupIdsPref] =\n    useLocalPref('budget.collapsed');\n  const [showHiddenCategories, setShowHiddenCategoriesPef] = useLocalPref(\n    'budget.showHiddenCategories',\n  );\n  const [editing, setEditing] = useState(null);\n\n  const onEditMonth = (id, month) => {\n    setEditing(id ? { id, cell: month } : null);\n  };\n\n  const onEditName = id => {\n    setEditing(id ? { id, cell: 'name' } : null);\n  };\n\n  const _onReorderCategory = (id, dropPos, targetId) => {\n    const isGroup = !!categoryGroups.find(g => g.id === targetId);\n\n    if (isGroup) {\n      const { targetId: groupId } = findSortUp(\n        categoryGroups,\n        dropPos,\n        targetId,\n      );\n      const group = categoryGroups.find(g => g.id === groupId);\n\n      if (group) {\n        const { categories } = group;\n        onReorderCategory({\n          id,\n          groupId: group.id,\n          targetId:\n            categories.length === 0 || dropPos === 'top'\n              ? null\n              : categories[0].id,\n        });\n      }\n    } else {\n      let targetGroup;\n\n      for (const group of categoryGroups) {\n        if (group.categories.find(cat => cat.id === targetId)) {\n          targetGroup = group;\n          break;\n        }\n      }\n\n      onReorderCategory({\n        id,\n        groupId: targetGroup.id,\n        ...findSortDown(targetGroup.categories, dropPos, targetId),\n      });\n    }\n  };\n\n  const _onReorderGroup = (id, dropPos, targetId) => {\n    onReorderGroup({\n      id,\n      ...findSortDown(categoryGroups, dropPos, targetId),\n    });\n  };\n\n  const moveVertically = dir => {\n    const flattened = categoryGroups.reduce((all, group) => {\n      if (collapsedGroupIds.includes(group.id)) {\n        return all.concat({ id: group.id, isGroup: true });\n      }\n      return all.concat([{ id: group.id, isGroup: true }, ...group.categories]);\n    }, []);\n\n    if (editing) {\n      const idx = flattened.findIndex(item => item.id === editing.id);\n      let nextIdx = idx + dir;\n\n      while (nextIdx >= 0 && nextIdx < flattened.length) {\n        const next = flattened[nextIdx];\n\n        if (next.isGroup) {\n          nextIdx += dir;\n          continue;\n        } else if (type === 'report' || !next.is_income) {\n          onEditMonth(next.id, editing.cell);\n          return;\n        } else {\n          break;\n        }\n      }\n    }\n  };\n\n  const onKeyDown = e => {\n    if (!editing) {\n      return null;\n    }\n\n    if (e.key === 'Enter' || e.key === 'Tab') {\n      e.preventDefault();\n      moveVertically(e.shiftKey ? -1 : 1);\n    }\n  };\n\n  const onCollapse = collapsedIds => {\n    setCollapsedGroupIdsPref(collapsedIds);\n  };\n\n  const onToggleHiddenCategories = () => {\n    setShowHiddenCategoriesPef(!showHiddenCategories);\n  };\n\n  const toggleHiddenCategories = () => {\n    onToggleHiddenCategories();\n  };\n\n  const expandAllCategories = () => {\n    onCollapse([]);\n  };\n\n  const collapseAllCategories = () => {\n    onCollapse(categoryGroups.map(g => g.id));\n  };\n\n  return (\n    <View\n      data-testid=\"budget-table\"\n      style={{\n        flex: 1,\n        ...(styles.lightScrollbar && {\n          '& ::-webkit-scrollbar': {\n            backgroundColor: 'transparent',\n          },\n          '& ::-webkit-scrollbar-thumb:vertical': {\n            backgroundColor: theme.tableHeaderBackground,\n          },\n        }),\n      }}\n    >\n      <View\n        style={{\n          flexDirection: 'row',\n          overflow: 'hidden',\n          flexShrink: 0,\n          // This is necessary to align with the table because the\n          // table has this padding to allow the shadow to show\n          paddingLeft: 5,\n          paddingRight: 5 + getScrollbarWidth(),\n        }}\n      >\n        <View style={{ width: 200 }} />\n        <MonthsProvider\n          startMonth={prewarmStartMonth}\n          numMonths={numMonths}\n          monthBounds={monthBounds}\n          type={type}\n        >\n          <BudgetSummaries SummaryComponent={dataComponents.SummaryComponent} />\n        </MonthsProvider>\n      </View>\n\n      <MonthsProvider\n        startMonth={startMonth}\n        numMonths={numMonths}\n        monthBounds={monthBounds}\n        type={type}\n      >\n        <BudgetTotals\n          MonthComponent={dataComponents.BudgetTotalsComponent}\n          toggleHiddenCategories={toggleHiddenCategories}\n          expandAllCategories={expandAllCategories}\n          collapseAllCategories={collapseAllCategories}\n        />\n        <View\n          style={{\n            overflowY: 'scroll',\n            overflowAnchor: 'none',\n            flex: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n          }}\n        >\n          <View\n            style={{\n              flexShrink: 0,\n            }}\n            onKeyDown={onKeyDown}\n          >\n            <BudgetCategories\n              categoryGroups={categoryGroups}\n              editingCell={editing}\n              dataComponents={dataComponents}\n              onEditMonth={onEditMonth}\n              onEditName={onEditName}\n              onSaveCategory={onSaveCategory}\n              onSaveGroup={onSaveGroup}\n              onDeleteCategory={onDeleteCategory}\n              onDeleteGroup={onDeleteGroup}\n              onReorderCategory={_onReorderCategory}\n              onReorderGroup={_onReorderGroup}\n              onBudgetAction={onBudgetAction}\n              onShowActivity={onShowActivity}\n            />\n          </View>\n        </View>\n      </MonthsProvider>\n    </View>\n  );\n}\n\nBudgetTable.displayName = 'BudgetTable';\n","// @ts-strict-ignore\nimport React, { useEffect, type ComponentProps } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport * as monthUtils from 'loot-core/src/shared/months';\n\nimport { View } from '../common/View';\n\nimport { useBudgetMonthCount } from './BudgetMonthCountContext';\nimport { BudgetPageHeader } from './BudgetPageHeader';\nimport { BudgetTable } from './BudgetTable';\n\nfunction getNumPossibleMonths(width: number) {\n  const estimatedTableWidth = width - 200;\n\n  if (estimatedTableWidth < 500) {\n    return 1;\n  } else if (estimatedTableWidth < 750) {\n    return 2;\n  } else if (estimatedTableWidth < 1000) {\n    return 3;\n  } else if (estimatedTableWidth < 1250) {\n    return 4;\n  } else if (estimatedTableWidth < 1500) {\n    return 5;\n  }\n\n  return 6;\n}\n\ntype DynamicBudgetTableInnerProps = {\n  width: number;\n  height: number;\n} & DynamicBudgetTableProps;\n\nconst DynamicBudgetTableInner = ({\n  type,\n  width,\n  height,\n  prewarmStartMonth,\n  startMonth,\n  maxMonths = 3,\n  monthBounds,\n  onMonthSelect,\n  ...props\n}: DynamicBudgetTableInnerProps) => {\n  const { setDisplayMax } = useBudgetMonthCount();\n\n  const numPossible = getNumPossibleMonths(width);\n  const numMonths = Math.min(numPossible, maxMonths);\n  const maxWidth = 200 + 500 * numMonths;\n\n  useEffect(() => {\n    setDisplayMax(numPossible);\n  }, [numPossible]);\n\n  function getValidMonth(month) {\n    const start = monthBounds.start;\n    const end = monthUtils.subMonths(monthBounds.end, numMonths - 1);\n\n    if (month < start) {\n      return start;\n    } else if (month > end) {\n      return end;\n    }\n    return month;\n  }\n\n  function _onMonthSelect(month) {\n    onMonthSelect(getValidMonth(month), numMonths);\n  }\n\n  useHotkeys(\n    'left',\n    () => {\n      _onMonthSelect(monthUtils.prevMonth(startMonth));\n    },\n    {\n      preventDefault: true,\n      scopes: ['app'],\n    },\n    [_onMonthSelect, startMonth],\n  );\n  useHotkeys(\n    'right',\n    () => {\n      _onMonthSelect(monthUtils.nextMonth(startMonth));\n    },\n    {\n      preventDefault: true,\n      scopes: ['app'],\n    },\n    [_onMonthSelect, startMonth],\n  );\n  useHotkeys(\n    '0',\n    () => {\n      _onMonthSelect(\n        monthUtils.subMonths(\n          monthUtils.currentMonth(),\n          type === 'rollover'\n            ? Math.floor((numMonths - 1) / 2)\n            : numMonths === 2\n              ? 1\n              : Math.max(numMonths - 2, 0),\n        ),\n      );\n    },\n    {\n      preventDefault: true,\n      scopes: ['app'],\n    },\n    [_onMonthSelect, startMonth, numMonths],\n  );\n\n  return (\n    <View\n      style={{\n        width,\n        height,\n        alignItems: 'center',\n        opacity: width <= 0 || height <= 0 ? 0 : 1,\n      }}\n    >\n      <View style={{ width: '100%', maxWidth }}>\n        <BudgetPageHeader\n          startMonth={prewarmStartMonth}\n          numMonths={numMonths}\n          monthBounds={monthBounds}\n          onMonthSelect={_onMonthSelect}\n        />\n        <BudgetTable\n          prewarmStartMonth={prewarmStartMonth}\n          startMonth={startMonth}\n          numMonths={numMonths}\n          monthBounds={monthBounds}\n          {...props}\n        />\n      </View>\n    </View>\n  );\n};\n\nDynamicBudgetTableInner.displayName = 'DynamicBudgetTableInner';\n\ntype DynamicBudgetTableProps = ComponentProps<typeof BudgetTable>;\n\nexport const DynamicBudgetTable = (props: DynamicBudgetTableProps) => {\n  return (\n    <AutoSizer>\n      {({ width, height }) => (\n        <DynamicBudgetTableInner width={width} height={height} {...props} />\n      )}\n    </AutoSizer>\n  );\n};\n\nDynamicBudgetTable.displayName = 'DynamicBudgetTable';\n","// @ts-strict-ignore\nimport React, { type ReactNode, createContext, useContext } from 'react';\n\nimport * as monthUtils from 'loot-core/src/shared/months';\n\nconst Context = createContext(null);\n\ntype ReportProviderProps = {\n  summaryCollapsed: boolean;\n  onBudgetAction: (month: string, action: string, arg: unknown) => void;\n  onToggleSummaryCollapse: () => void;\n  children: ReactNode;\n};\nexport function ReportProvider({\n  summaryCollapsed,\n  onBudgetAction,\n  onToggleSummaryCollapse,\n  children,\n}: ReportProviderProps) {\n  const currentMonth = monthUtils.currentMonth();\n\n  return (\n    <Context.Provider\n      value={{\n        currentMonth,\n        summaryCollapsed,\n        onBudgetAction,\n        onToggleSummaryCollapse,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport function useReport() {\n  return useContext(Context);\n}\n","// @ts-strict-ignore\nimport React, { useRef, useState } from 'react';\n\nimport { css } from 'glamor';\n\nimport * as monthUtils from 'loot-core/src/shared/months';\n\nimport { SvgDotsHorizontalTriple } from '../../../../icons/v1';\nimport { SvgArrowButtonDown1, SvgArrowButtonUp1 } from '../../../../icons/v2';\nimport { theme, styles } from '../../../../style';\nimport { Button } from '../../../common/Button';\nimport { Popover } from '../../../common/Popover';\nimport { Stack } from '../../../common/Stack';\nimport { View } from '../../../common/View';\nimport { NotesButton } from '../../../NotesButton';\nimport { NamespaceContext } from '../../../spreadsheet/NamespaceContext';\nimport { useReport } from '../ReportContext';\n\nimport { BudgetMonthMenu } from './BudgetMonthMenu';\nimport { ExpenseTotal } from './ExpenseTotal';\nimport { IncomeTotal } from './IncomeTotal';\nimport { Saved } from './Saved';\n\ntype BudgetSummaryProps = {\n  month?: string;\n};\nexport function BudgetSummary({ month }: BudgetSummaryProps) {\n  const {\n    currentMonth,\n    summaryCollapsed: collapsed,\n    onBudgetAction,\n    onToggleSummaryCollapse,\n  } = useReport();\n\n  const [menuOpen, setMenuOpen] = useState(false);\n  const triggerRef = useRef(null);\n\n  function onMenuOpen() {\n    setMenuOpen(true);\n  }\n\n  function onMenuClose() {\n    setMenuOpen(false);\n  }\n\n  const ExpandOrCollapseIcon = collapsed\n    ? SvgArrowButtonDown1\n    : SvgArrowButtonUp1;\n\n  return (\n    <View\n      style={{\n        backgroundColor: theme.tableBackground,\n        boxShadow: styles.cardShadow,\n        borderRadius: 6,\n        marginLeft: 0,\n        marginRight: 0,\n        marginTop: 5,\n        flex: 1,\n        cursor: 'default',\n        marginBottom: 5,\n        overflow: 'hidden',\n        '& .hover-visible': {\n          opacity: 0,\n          transition: 'opacity .25s',\n        },\n        '&:hover .hover-visible': {\n          opacity: 1,\n        },\n      }}\n    >\n      <NamespaceContext.Provider value={monthUtils.sheetForMonth(month)}>\n        <View\n          style={{\n            padding: '0 13px',\n            ...(collapsed ? { margin: '10px 0' } : { marginTop: 16 }),\n          }}\n        >\n          <View\n            style={{\n              position: 'absolute',\n              left: 10,\n              top: 0,\n            }}\n          >\n            <Button\n              type=\"bare\"\n              aria-label={`${collapsed ? 'Expand' : 'Collapse'} month summary`}\n              className=\"hover-visible\"\n              onClick={onToggleSummaryCollapse}\n            >\n              <ExpandOrCollapseIcon\n                width={13}\n                height={13}\n                // The margin is to make it the exact same size as the dots button\n                style={{ color: theme.pageTextSubdued, margin: 1 }}\n              />\n            </Button>\n          </View>\n\n          <div\n            className={`${css([\n              {\n                textAlign: 'center',\n                marginTop: 3,\n                fontSize: 18,\n                fontWeight: 500,\n                textDecorationSkip: 'ink',\n              },\n            ])}`}\n          >\n            {monthUtils.format(month, 'MMMM')}\n          </div>\n\n          <View\n            style={{\n              position: 'absolute',\n              right: 10,\n              top: 0,\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}\n          >\n            <View>\n              <NotesButton\n                id={`budget-${month}`}\n                width={15}\n                height={15}\n                tooltipPosition=\"bottom right\"\n                defaultColor={theme.pageTextLight}\n              />\n            </View>\n            <View style={{ userSelect: 'none' }}>\n              <Button\n                ref={triggerRef}\n                type=\"bare\"\n                aria-label=\"Menu\"\n                onClick={onMenuOpen}\n              >\n                <SvgDotsHorizontalTriple\n                  width={15}\n                  height={15}\n                  style={{ color: theme.pageTextLight }}\n                />\n              </Button>\n\n              <Popover\n                triggerRef={triggerRef}\n                isOpen={menuOpen}\n                onOpenChange={onMenuClose}\n              >\n                <BudgetMonthMenu\n                  onCopyLastMonthBudget={() => {\n                    onBudgetAction(month, 'copy-last');\n                    onMenuClose();\n                  }}\n                  onSetBudgetsToZero={() => {\n                    onBudgetAction(month, 'set-zero');\n                    onMenuClose();\n                  }}\n                  onSetMonthsAverage={numberOfMonths => {\n                    onBudgetAction(month, `set-${numberOfMonths}-avg`);\n                    onMenuClose();\n                  }}\n                  onCheckTemplates={() => {\n                    onBudgetAction(month, 'check-templates');\n                    onMenuClose();\n                  }}\n                  onApplyBudgetTemplates={() => {\n                    onBudgetAction(month, 'apply-goal-template');\n                    onMenuClose();\n                  }}\n                  onOverwriteWithBudgetTemplates={() => {\n                    onBudgetAction(month, 'overwrite-goal-template');\n                    onMenuClose();\n                  }}\n                />\n              </Popover>\n            </View>\n          </View>\n        </View>\n\n        {!collapsed && (\n          <Stack\n            spacing={2}\n            style={{\n              alignSelf: 'center',\n              backgroundColor: theme.tableRowHeaderBackground,\n              borderRadius: 4,\n              padding: '10px 15px',\n              marginTop: 13,\n            }}\n          >\n            <IncomeTotal />\n            <ExpenseTotal />\n          </Stack>\n        )}\n\n        {collapsed ? (\n          <View\n            style={{\n              alignItems: 'center',\n              padding: '10px 20px',\n              justifyContent: 'space-between',\n              backgroundColor: theme.tableRowHeaderBackground,\n              borderTop: '1px solid ' + theme.tableBorder,\n            }}\n          >\n            <Saved projected={month >= currentMonth} />\n          </View>\n        ) : (\n          <Saved\n            projected={month >= currentMonth}\n            style={{ marginTop: 13, marginBottom: 20 }}\n          />\n        )}\n      </NamespaceContext.Provider>\n    </View>\n  );\n}\n","// @ts-strict-ignore\nimport React, { memo, useRef, useState } from 'react';\n\nimport { reportBudget } from 'loot-core/src/client/queries';\nimport { evalArithmetic } from 'loot-core/src/shared/arithmetic';\nimport { integerToCurrency, amountToInteger } from 'loot-core/src/shared/util';\n\nimport { SvgCheveronDown } from '../../../icons/v1';\nimport { styles, theme, type CSSProperties } from '../../../style';\nimport { Button } from '../../common/Button';\nimport { Popover } from '../../common/Popover';\nimport { Text } from '../../common/Text';\nimport { View } from '../../common/View';\nimport { CellValue } from '../../spreadsheet/CellValue';\nimport { useFormat } from '../../spreadsheet/useFormat';\nimport { Field, SheetCell } from '../../table';\nimport { BalanceWithCarryover } from '../BalanceWithCarryover';\nimport { makeAmountGrey } from '../util';\n\nimport { BalanceMenu } from './BalanceMenu';\nimport { BudgetMenu } from './BudgetMenu';\n\nconst headerLabelStyle: CSSProperties = {\n  flex: 1,\n  padding: '0 5px',\n  textAlign: 'right',\n};\nexport const BudgetTotalsMonth = memo(function BudgetTotalsMonth() {\n  const format = useFormat();\n  return (\n    <View\n      style={{\n        flex: 1,\n        flexDirection: 'row',\n        marginRight: styles.monthRightPadding,\n        paddingTop: 10,\n        paddingBottom: 10,\n      }}\n    >\n      <View style={headerLabelStyle}>\n        <Text style={{ color: theme.pageTextLight }}>Budgeted</Text>\n        <CellValue\n          binding={reportBudget.totalBudgetedExpense}\n          type=\"financial\"\n          style={{ color: theme.pageTextLight, fontWeight: 600 }}\n          formatter={value => {\n            return format(parseFloat(value || '0'), 'financial');\n          }}\n        />\n      </View>\n      <View style={headerLabelStyle}>\n        <Text style={{ color: theme.pageTextLight }}>Spent</Text>\n        <CellValue\n          binding={reportBudget.totalSpent}\n          type=\"financial\"\n          style={{ color: theme.pageTextLight, fontWeight: 600 }}\n        />\n      </View>\n      <View style={headerLabelStyle}>\n        <Text style={{ color: theme.pageTextLight }}>Balance</Text>\n        <CellValue\n          binding={reportBudget.totalLeftover}\n          type=\"financial\"\n          style={{ color: theme.pageTextLight, fontWeight: 600 }}\n        />\n      </View>\n    </View>\n  );\n});\n\nexport function IncomeHeaderMonth() {\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        marginRight: styles.monthRightPadding,\n        paddingBottom: 5,\n      }}\n    >\n      <View style={headerLabelStyle}>\n        <Text style={{ color: theme.pageTextLight }}>Budgeted</Text>\n      </View>\n      <View style={headerLabelStyle}>\n        <Text style={{ color: theme.pageTextLight }}>Received</Text>\n      </View>\n    </View>\n  );\n}\n\ntype GroupMonthProps = {\n  group: { id: string; is_income: boolean };\n};\nexport const GroupMonth = memo(function GroupMonth({ group }: GroupMonthProps) {\n  const { id } = group;\n\n  return (\n    <View style={{ flex: 1, flexDirection: 'row' }}>\n      <SheetCell\n        name=\"budgeted\"\n        width=\"flex\"\n        textAlign=\"right\"\n        style={{ fontWeight: 600, ...styles.tnum }}\n        valueProps={{\n          binding: reportBudget.groupBudgeted(id),\n          type: 'financial',\n        }}\n      />\n      <SheetCell\n        name=\"spent\"\n        width=\"flex\"\n        textAlign=\"right\"\n        style={{ fontWeight: 600, ...styles.tnum }}\n        valueProps={{\n          binding: reportBudget.groupSumAmount(id),\n          type: 'financial',\n        }}\n      />\n      {!group.is_income && (\n        <SheetCell\n          name=\"balance\"\n          width=\"flex\"\n          textAlign=\"right\"\n          style={{\n            fontWeight: 600,\n            paddingRight: styles.monthRightPadding,\n            ...styles.tnum,\n          }}\n          valueProps={{\n            binding: reportBudget.groupBalance(id),\n            type: 'financial',\n            privacyFilter: {\n              style: {\n                paddingRight: styles.monthRightPadding,\n              },\n            },\n          }}\n        />\n      )}\n    </View>\n  );\n});\n\ntype CategoryMonthProps = {\n  month: string;\n  category: { id: string; name: string; is_income: boolean };\n  editing: boolean;\n  onEdit: (id: string | null, month?: string) => void;\n  onBudgetAction: (month: string, action: string, arg: unknown) => void;\n  onShowActivity: (id: string, month: string) => void;\n};\nexport const CategoryMonth = memo(function CategoryMonth({\n  month,\n  category,\n  editing,\n  onEdit,\n  onBudgetAction,\n  onShowActivity,\n}: CategoryMonthProps) {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [hover, setHover] = useState(false);\n  const triggerRef = useRef(null);\n\n  const [balanceMenuOpen, setBalanceMenuOpen] = useState(false);\n  const triggerBalanceMenuRef = useRef(null);\n\n  const onMenuAction = (...args: Parameters<typeof onBudgetAction>) => {\n    onBudgetAction(...args);\n    setBalanceMenuOpen(false);\n    setMenuOpen(false);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        flexDirection: 'row',\n        '& .hover-visible': {\n          opacity: 0,\n          transition: 'opacity .25s',\n        },\n        '&:hover .hover-visible': {\n          opacity: 1,\n        },\n      }}\n    >\n      <View\n        style={{\n          flex: 1,\n          flexDirection: 'row',\n        }}\n        onMouseOverCapture={() => setHover(true)}\n        onMouseLeave={() => {\n          setHover(false);\n        }}\n      >\n        {!editing && (hover || menuOpen) && (\n          <View\n            style={{\n              flexShrink: 0,\n              paddingLeft: 3,\n              justifyContent: 'center',\n              borderTopWidth: 1,\n              borderBottomWidth: 1,\n              borderColor: theme.tableBorder,\n            }}\n          >\n            <Button\n              ref={triggerRef}\n              type=\"bare\"\n              onClick={e => {\n                e.stopPropagation();\n                setMenuOpen(true);\n              }}\n              style={{\n                padding: 3,\n              }}\n            >\n              <SvgCheveronDown\n                width={14}\n                height={14}\n                className=\"hover-visible\"\n                style={menuOpen && { opacity: 1 }}\n              />\n            </Button>\n\n            <Popover\n              triggerRef={triggerRef}\n              isOpen={menuOpen}\n              onOpenChange={() => setMenuOpen(false)}\n              placement=\"bottom start\"\n            >\n              <BudgetMenu\n                onCopyLastMonthAverage={() => {\n                  onMenuAction(month, 'copy-single-last', {\n                    category: category.id,\n                  });\n                }}\n                onSetMonthsAverage={numberOfMonths => {\n                  if (\n                    numberOfMonths !== 3 &&\n                    numberOfMonths !== 6 &&\n                    numberOfMonths !== 12\n                  ) {\n                    return;\n                  }\n\n                  onMenuAction(month, `set-single-${numberOfMonths}-avg`, {\n                    category: category.id,\n                  });\n                }}\n                onApplyBudgetTemplate={() => {\n                  onMenuAction(month, 'apply-single-category-template', {\n                    category: category.id,\n                  });\n                }}\n              />\n            </Popover>\n          </View>\n        )}\n        <SheetCell\n          name=\"budget\"\n          exposed={editing}\n          focused={editing}\n          width=\"flex\"\n          onExpose={() => onEdit(category.id, month)}\n          style={{ ...(editing && { zIndex: 100 }), ...styles.tnum }}\n          textAlign=\"right\"\n          valueStyle={{\n            cursor: 'default',\n            margin: 1,\n            padding: '0 4px',\n            borderRadius: 4,\n            ':hover': {\n              boxShadow: 'inset 0 0 0 1px ' + theme.mobileAccountShadow,\n              backgroundColor: theme.tableBackground,\n            },\n          }}\n          valueProps={{\n            binding: reportBudget.catBudgeted(category.id),\n            type: 'financial',\n            getValueStyle: makeAmountGrey,\n            formatExpr: expr => {\n              return integerToCurrency(expr);\n            },\n            unformatExpr: expr => {\n              return amountToInteger(evalArithmetic(expr, 0));\n            },\n          }}\n          inputProps={{\n            onBlur: () => {\n              onEdit(null);\n            },\n            style: {\n              backgroundColor: theme.tableBackground,\n            },\n          }}\n          onSave={amount => {\n            onBudgetAction(month, 'budget-amount', {\n              category: category.id,\n              amount,\n            });\n          }}\n        />\n      </View>\n      <Field name=\"spent\" width=\"flex\" style={{ textAlign: 'right' }}>\n        <span\n          data-testid=\"category-month-spent\"\n          onClick={() => onShowActivity(category.id, month)}\n        >\n          <CellValue\n            binding={reportBudget.catSumAmount(category.id)}\n            type=\"financial\"\n            getStyle={makeAmountGrey}\n            style={{\n              cursor: 'pointer',\n              ':hover': {\n                textDecoration: 'underline',\n              },\n            }}\n          />\n        </span>\n      </Field>\n\n      {!category.is_income && (\n        <Field\n          name=\"balance\"\n          width=\"flex\"\n          style={{ paddingRight: styles.monthRightPadding, textAlign: 'right' }}\n        >\n          <span\n            ref={triggerBalanceMenuRef}\n            {...(category.is_income\n              ? {}\n              : { onClick: () => setBalanceMenuOpen(true) })}\n          >\n            <BalanceWithCarryover\n              disabled={category.is_income}\n              carryover={reportBudget.catCarryover(category.id)}\n              balance={reportBudget.catBalance(category.id)}\n              goal={reportBudget.catGoal(category.id)}\n              budgeted={reportBudget.catBudgeted(category.id)}\n              longGoal={reportBudget.catLongGoal(category.id)}\n              style={{\n                ':hover': { textDecoration: 'underline' },\n              }}\n            />\n          </span>\n\n          <Popover\n            triggerRef={triggerBalanceMenuRef}\n            isOpen={balanceMenuOpen}\n            onOpenChange={() => setBalanceMenuOpen(false)}\n            placement=\"bottom end\"\n          >\n            <BalanceMenu\n              categoryId={category.id}\n              onCarryover={carryover => {\n                onMenuAction(month, 'carryover', {\n                  category: category.id,\n                  flag: carryover,\n                });\n              }}\n            />\n          </Popover>\n        </Field>\n      )}\n    </View>\n  );\n});\n\nexport { BudgetSummary } from './budgetsummary/BudgetSummary';\n\nexport const ExpenseGroupMonth = GroupMonth;\nexport const ExpenseCategoryMonth = CategoryMonth;\n\nexport const IncomeGroupMonth = GroupMonth;\nexport const IncomeCategoryMonth = CategoryMonth;\n","import React, { useState } from 'react';\n\nimport { useCategories } from '../../../hooks/useCategories';\nimport { CategoryAutocomplete } from '../../autocomplete/CategoryAutocomplete';\nimport { Button } from '../../common/Button';\nimport { InitialFocus } from '../../common/InitialFocus';\nimport { View } from '../../common/View';\nimport { addToBeBudgetedGroup } from '../util';\n\ntype CoverMenuProps = {\n  showToBeBudgeted?: boolean;\n  onSubmit: (categoryId: string) => void;\n  onClose: () => void;\n};\n\nexport function CoverMenu({\n  showToBeBudgeted = true,\n  onSubmit,\n  onClose,\n}: CoverMenuProps) {\n  const { grouped: originalCategoryGroups } = useCategories();\n  let categoryGroups = originalCategoryGroups.filter(g => !g.is_income);\n  categoryGroups = showToBeBudgeted\n    ? addToBeBudgetedGroup(categoryGroups)\n    : categoryGroups;\n  const [categoryId, setCategoryId] = useState<string | null>(null);\n\n  function submit() {\n    if (categoryId) {\n      onSubmit(categoryId);\n    }\n    onClose();\n  }\n  return (\n    <View style={{ padding: 10 }}>\n      <View style={{ marginBottom: 5 }}>Cover from category:</View>\n\n      <InitialFocus>\n        {node => (\n          <CategoryAutocomplete\n            categoryGroups={categoryGroups}\n            value={categoryGroups.find(g => g.id === categoryId)}\n            openOnFocus={true}\n            onSelect={(id: string | undefined) => setCategoryId(id || null)}\n            inputProps={{\n              inputRef: node,\n              onEnter: event => !event.defaultPrevented && submit(),\n              placeholder: '(none)',\n            }}\n            showHiddenCategories={false}\n          />\n        )}\n      </InitialFocus>\n\n      <View\n        style={{\n          alignItems: 'flex-end',\n          marginTop: 10,\n        }}\n      >\n        <Button\n          type=\"primary\"\n          style={{\n            fontSize: 12,\n            paddingTop: 3,\n          }}\n          onClick={submit}\n        >\n          Transfer\n        </Button>\n      </View>\n    </View>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { evalArithmetic } from 'loot-core/src/shared/arithmetic';\nimport { integerToCurrency, amountToInteger } from 'loot-core/src/shared/util';\n\nimport { useCategories } from '../../../hooks/useCategories';\nimport { CategoryAutocomplete } from '../../autocomplete/CategoryAutocomplete';\nimport { Button } from '../../common/Button';\nimport { InitialFocus } from '../../common/InitialFocus';\nimport { Input } from '../../common/Input';\nimport { View } from '../../common/View';\nimport { addToBeBudgetedGroup } from '../util';\n\ntype TransferMenuProps = {\n  initialAmount?: number;\n  showToBeBudgeted?: boolean;\n  onSubmit: (amount: number, categoryId: string) => void;\n  onClose: () => void;\n};\n\nexport function TransferMenu({\n  initialAmount = 0,\n  showToBeBudgeted,\n  onSubmit,\n  onClose,\n}: TransferMenuProps) {\n  const { grouped: originalCategoryGroups } = useCategories();\n  let categoryGroups = originalCategoryGroups.filter(g => !g.is_income);\n  if (showToBeBudgeted) {\n    categoryGroups = addToBeBudgetedGroup(categoryGroups);\n  }\n\n  const _initialAmount = integerToCurrency(Math.max(initialAmount, 0));\n  const [amount, setAmount] = useState<string | null>(null);\n  const [categoryId, setCategoryId] = useState<string | null>(null);\n\n  const _onSubmit = (newAmount: string | null, categoryId: string | null) => {\n    const parsedAmount = evalArithmetic(newAmount || '');\n    if (parsedAmount && categoryId) {\n      onSubmit?.(amountToInteger(parsedAmount), categoryId);\n    }\n\n    onClose();\n  };\n\n  return (\n    <View style={{ padding: 10 }}>\n      <View style={{ marginBottom: 5 }}>Transfer this amount:</View>\n      <View>\n        <InitialFocus>\n          <Input\n            defaultValue={_initialAmount}\n            onUpdate={value => setAmount(value)}\n            onEnter={() => _onSubmit(amount, categoryId)}\n          />\n        </InitialFocus>\n      </View>\n      <View style={{ margin: '10px 0 5px 0' }}>To:</View>\n\n      <CategoryAutocomplete\n        categoryGroups={categoryGroups}\n        value={categoryGroups.find(g => g.id === categoryId)}\n        openOnFocus={true}\n        onSelect={(id: string | undefined) => setCategoryId(id || null)}\n        inputProps={{\n          onEnter: event =>\n            !event.defaultPrevented && _onSubmit(amount, categoryId),\n          placeholder: '(none)',\n        }}\n        showHiddenCategories={true}\n      />\n\n      <View\n        style={{\n          alignItems: 'flex-end',\n          marginTop: 10,\n        }}\n      >\n        <Button\n          type=\"primary\"\n          style={{\n            fontSize: 12,\n            paddingTop: 3,\n            paddingBottom: 3,\n          }}\n          onClick={() => _onSubmit(amount, categoryId)}\n        >\n          Transfer\n        </Button>\n      </View>\n    </View>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { rolloverBudget } from 'loot-core/src/client/queries';\n\nimport { useSheetValue } from '../../spreadsheet/useSheetValue';\n\nimport { BalanceMenu } from './BalanceMenu';\nimport { CoverMenu } from './CoverMenu';\nimport { TransferMenu } from './TransferMenu';\n\ntype BalanceMovementMenuProps = {\n  categoryId: string;\n  month: string;\n  onBudgetAction: (month: string, action: string, arg?: unknown) => void;\n  onClose?: () => void;\n};\n\nexport function BalanceMovementMenu({\n  categoryId,\n  month,\n  onBudgetAction,\n  onClose = () => {},\n}: BalanceMovementMenuProps) {\n  const catBalance = useSheetValue(rolloverBudget.catBalance(categoryId));\n  const [menu, setMenu] = useState('menu');\n\n  return (\n    <>\n      {menu === 'menu' && (\n        <BalanceMenu\n          categoryId={categoryId}\n          onCarryover={carryover => {\n            onBudgetAction(month, 'carryover', {\n              category: categoryId,\n              flag: carryover,\n            });\n            onClose();\n          }}\n          onTransfer={() => setMenu('transfer')}\n          onCover={() => setMenu('cover')}\n        />\n      )}\n\n      {menu === 'transfer' && (\n        <TransferMenu\n          initialAmount={catBalance}\n          showToBeBudgeted={true}\n          onClose={onClose}\n          onSubmit={(amount, toCategoryId) => {\n            onBudgetAction(month, 'transfer-category', {\n              amount,\n              from: categoryId,\n              to: toCategoryId,\n            });\n          }}\n        />\n      )}\n\n      {menu === 'cover' && (\n        <CoverMenu\n          onClose={onClose}\n          onSubmit={fromCategoryId => {\n            onBudgetAction(month, 'cover-overspending', {\n              to: categoryId,\n              from: fromCategoryId,\n            });\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import React, { type ReactNode, createContext, useContext } from 'react';\n\nimport * as monthUtils from 'loot-core/src/shared/months';\n\ntype RolloverContextDefinition = {\n  summaryCollapsed: boolean;\n  onBudgetAction: (month: string, action: string, arg?: unknown) => void;\n  onToggleSummaryCollapse: () => void;\n  currentMonth: string;\n};\n\nconst RolloverContext = createContext<RolloverContextDefinition>({\n  summaryCollapsed: false,\n  onBudgetAction: () => {\n    throw new Error('Unitialised context method called: onBudgetAction');\n  },\n  onToggleSummaryCollapse: () => {\n    throw new Error(\n      'Unitialised context method called: onToggleSummaryCollapse',\n    );\n  },\n  currentMonth: 'unknown',\n});\n\ntype RolloverProviderProps = Omit<RolloverContextDefinition, 'currentMonth'> & {\n  children: ReactNode;\n};\nexport function RolloverProvider({\n  summaryCollapsed,\n  onBudgetAction,\n  onToggleSummaryCollapse,\n  children,\n}: RolloverProviderProps) {\n  const currentMonth = monthUtils.currentMonth();\n\n  return (\n    <RolloverContext.Provider\n      value={{\n        currentMonth,\n        summaryCollapsed,\n        onBudgetAction,\n        onToggleSummaryCollapse,\n      }}\n    >\n      {children}\n    </RolloverContext.Provider>\n  );\n}\n\nexport function useRollover() {\n  return useContext(RolloverContext);\n}\n","import React, {\n  useState,\n  useContext,\n  useEffect,\n  type ChangeEvent,\n} from 'react';\n\nimport { useSpreadsheet } from 'loot-core/src/client/SpreadsheetProvider';\nimport { evalArithmetic } from 'loot-core/src/shared/arithmetic';\nimport { integerToCurrency, amountToInteger } from 'loot-core/src/shared/util';\n\nimport { Button } from '../../common/Button';\nimport { InitialFocus } from '../../common/InitialFocus';\nimport { Input } from '../../common/Input';\nimport { View } from '../../common/View';\nimport { NamespaceContext } from '../../spreadsheet/NamespaceContext';\n\ntype HoldMenuProps = {\n  onSubmit: (amount: number) => void;\n  onClose: () => void;\n};\nexport function HoldMenu({ onSubmit, onClose }: HoldMenuProps) {\n  const spreadsheet = useSpreadsheet();\n  const sheetName = useContext(NamespaceContext);\n\n  const [amount, setAmount] = useState<string | null>(null);\n\n  useEffect(() => {\n    (async () => {\n      const node = await spreadsheet.get(sheetName, 'to-budget');\n      setAmount(integerToCurrency(Math.max(node.value as number, 0)));\n    })();\n  }, []);\n\n  function submit(newAmount: string) {\n    const parsedAmount = evalArithmetic(newAmount);\n    if (parsedAmount) {\n      onSubmit(amountToInteger(parsedAmount));\n    }\n    onClose();\n  }\n\n  if (amount === null) {\n    // See `TransferMenu` for more info about this\n    return null;\n  }\n\n  return (\n    <View style={{ padding: 10 }}>\n      <View style={{ marginBottom: 5 }}>Hold this amount:</View>\n      <View>\n        <InitialFocus>\n          <Input\n            value={amount}\n            onChange={(e: ChangeEvent<HTMLInputElement>) =>\n              setAmount(e.target.value)\n            }\n            onEnter={() => submit(amount)}\n          />\n        </InitialFocus>\n      </View>\n      <View\n        style={{\n          alignItems: 'flex-end',\n          marginTop: 10,\n        }}\n      >\n        <Button\n          type=\"primary\"\n          style={{\n            fontSize: 12,\n            paddingTop: 3,\n            paddingBottom: 3,\n          }}\n          onClick={() => submit(amount)}\n        >\n          Hold\n        </Button>\n      </View>\n    </View>\n  );\n}\n","import React, { useRef, useState } from 'react';\n\nimport { rolloverBudget } from 'loot-core/src/client/queries';\n\nimport { type CSSProperties } from '../../../../style';\nimport { Popover } from '../../../common/Popover';\nimport { View } from '../../../common/View';\nimport { useSheetValue } from '../../../spreadsheet/useSheetValue';\nimport { CoverMenu } from '../CoverMenu';\nimport { HoldMenu } from '../HoldMenu';\nimport { TransferMenu } from '../TransferMenu';\n\nimport { ToBudgetAmount } from './ToBudgetAmount';\nimport { ToBudgetMenu } from './ToBudgetMenu';\n\ntype ToBudgetProps = {\n  month: string;\n  onBudgetAction: (month: string, action: string, arg?: unknown) => void;\n  prevMonthName: string;\n  style?: CSSProperties;\n  amountStyle?: CSSProperties;\n  isCollapsed?: boolean;\n};\nexport function ToBudget({\n  month,\n  prevMonthName,\n  onBudgetAction,\n  style,\n  amountStyle,\n  isCollapsed = false,\n}: ToBudgetProps) {\n  const [menuOpen, setMenuOpen] = useState<string | null>(null);\n  const triggerRef = useRef(null);\n  const sheetValue = useSheetValue({\n    name: rolloverBudget.toBudget,\n    value: 0,\n  });\n  const availableValue = parseInt(sheetValue);\n  const isMenuOpen = Boolean(menuOpen);\n\n  return (\n    <>\n      <View ref={triggerRef}>\n        <ToBudgetAmount\n          onClick={() => setMenuOpen('actions')}\n          prevMonthName={prevMonthName}\n          style={style}\n          amountStyle={amountStyle}\n          isTotalsListTooltipDisabled={!isCollapsed || isMenuOpen}\n        />\n      </View>\n\n      <Popover\n        triggerRef={triggerRef}\n        placement=\"bottom\"\n        isOpen={isMenuOpen}\n        onOpenChange={() => setMenuOpen(null)}\n        style={{ width: 200 }}\n      >\n        {menuOpen === 'actions' && (\n          <ToBudgetMenu\n            onTransfer={() => setMenuOpen('transfer')}\n            onCover={() => setMenuOpen('cover')}\n            onHoldBuffer={() => setMenuOpen('buffer')}\n            onResetHoldBuffer={() => {\n              onBudgetAction(month, 'reset-hold');\n              setMenuOpen(null);\n            }}\n          />\n        )}\n        {menuOpen === 'buffer' && (\n          <HoldMenu\n            onClose={() => setMenuOpen(null)}\n            onSubmit={amount => {\n              onBudgetAction(month, 'hold', { amount });\n            }}\n          />\n        )}\n        {menuOpen === 'transfer' && (\n          <TransferMenu\n            initialAmount={availableValue}\n            onClose={() => setMenuOpen(null)}\n            onSubmit={(amount, categoryId) => {\n              onBudgetAction(month, 'transfer-available', {\n                amount,\n                category: categoryId,\n              });\n            }}\n          />\n        )}\n        {menuOpen === 'cover' && (\n          <CoverMenu\n            showToBeBudgeted={false}\n            onClose={() => setMenuOpen(null)}\n            onSubmit={categoryId => {\n              onBudgetAction(month, 'cover-overbudgeted', {\n                category: categoryId,\n              });\n            }}\n          />\n        )}\n      </Popover>\n    </>\n  );\n}\n","import React, { useRef, useState } from 'react';\n\nimport { css } from 'glamor';\n\nimport * as monthUtils from 'loot-core/src/shared/months';\n\nimport { SvgDotsHorizontalTriple } from '../../../../icons/v1';\nimport { SvgArrowButtonDown1, SvgArrowButtonUp1 } from '../../../../icons/v2';\nimport { theme, styles } from '../../../../style';\nimport { Button } from '../../../common/Button';\nimport { Popover } from '../../../common/Popover';\nimport { View } from '../../../common/View';\nimport { NotesButton } from '../../../NotesButton';\nimport { NamespaceContext } from '../../../spreadsheet/NamespaceContext';\nimport { useRollover } from '../RolloverContext';\n\nimport { BudgetMonthMenu } from './BudgetMonthMenu';\nimport { ToBudget } from './ToBudget';\nimport { TotalsList } from './TotalsList';\n\ntype BudgetSummaryProps = {\n  month: string;\n  isGoalTemplatesEnabled?: boolean;\n};\nexport function BudgetSummary({ month }: BudgetSummaryProps) {\n  const {\n    currentMonth,\n    summaryCollapsed: collapsed,\n    onBudgetAction,\n    onToggleSummaryCollapse,\n  } = useRollover();\n\n  const [menuOpen, setMenuOpen] = useState(false);\n  const triggerRef = useRef(null);\n\n  function onMenuOpen() {\n    setMenuOpen(true);\n  }\n\n  function onMenuClose() {\n    setMenuOpen(false);\n  }\n\n  const prevMonthName = monthUtils.format(monthUtils.prevMonth(month), 'MMM');\n\n  const ExpandOrCollapseIcon = collapsed\n    ? SvgArrowButtonDown1\n    : SvgArrowButtonUp1;\n\n  return (\n    <View\n      data-testid=\"budget-summary\"\n      style={{\n        backgroundColor: theme.tableBackground,\n        boxShadow: styles.cardShadow,\n        borderRadius: 6,\n        marginLeft: 0,\n        marginRight: 0,\n        marginTop: 5,\n        flex: 1,\n        cursor: 'default',\n        marginBottom: 5,\n        overflow: 'hidden',\n        '& .hover-visible': {\n          opacity: 0,\n          transition: 'opacity .25s',\n        },\n        '&:hover .hover-visible': {\n          opacity: 1,\n        },\n      }}\n    >\n      <NamespaceContext.Provider value={monthUtils.sheetForMonth(month)}>\n        <View\n          style={{\n            padding: '0 13px',\n            ...(collapsed ? { margin: '10px 0' } : { marginTop: 16 }),\n          }}\n        >\n          <View\n            style={{\n              position: 'absolute',\n              left: 10,\n              top: 0,\n            }}\n          >\n            <Button\n              type=\"bare\"\n              aria-label={`${collapsed ? 'Expand' : 'Collapse'} month summary`}\n              className=\"hover-visible\"\n              onClick={onToggleSummaryCollapse}\n            >\n              <ExpandOrCollapseIcon\n                width={13}\n                height={13}\n                // The margin is to make it the exact same size as the dots button\n                style={{ color: theme.tableTextLight, margin: 1 }}\n              />\n            </Button>\n          </View>\n\n          <div\n            className={`${css([\n              {\n                textAlign: 'center',\n                marginTop: 3,\n                fontSize: 18,\n                fontWeight: 500,\n                textDecorationSkip: 'ink',\n              },\n              currentMonth === month && { fontWeight: 'bold' },\n            ])}`}\n          >\n            {monthUtils.format(month, 'MMMM')}\n          </div>\n\n          <View\n            style={{\n              position: 'absolute',\n              right: 10,\n              top: 0,\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}\n          >\n            <View>\n              <NotesButton\n                id={`budget-${month}`}\n                width={15}\n                height={15}\n                tooltipPosition=\"bottom right\"\n                defaultColor={theme.tableTextLight}\n              />\n            </View>\n            <View style={{ userSelect: 'none', marginLeft: 2 }}>\n              <Button\n                ref={triggerRef}\n                type=\"bare\"\n                aria-label=\"Menu\"\n                onClick={onMenuOpen}\n              >\n                <SvgDotsHorizontalTriple\n                  width={15}\n                  height={15}\n                  style={{ color: theme.pageTextLight }}\n                />\n              </Button>\n\n              <Popover\n                triggerRef={triggerRef}\n                isOpen={menuOpen}\n                onOpenChange={onMenuClose}\n              >\n                <BudgetMonthMenu\n                  onCopyLastMonthBudget={() => {\n                    onBudgetAction(month, 'copy-last');\n                    onMenuClose();\n                  }}\n                  onSetBudgetsToZero={() => {\n                    onBudgetAction(month, 'set-zero');\n                    onMenuClose();\n                  }}\n                  onSetMonthsAverage={numberOfMonths => {\n                    onBudgetAction(month, `set-${numberOfMonths}-avg`);\n                    onMenuClose();\n                  }}\n                  onCheckTemplates={() => {\n                    onBudgetAction(month, 'check-templates');\n                    onMenuClose();\n                  }}\n                  onApplyBudgetTemplates={() => {\n                    onBudgetAction(month, 'apply-goal-template');\n                    onMenuClose();\n                  }}\n                  onOverwriteWithBudgetTemplates={() => {\n                    onBudgetAction(month, 'overwrite-goal-template');\n                    onMenuClose();\n                  }}\n                  onEndOfMonthCleanup={() => {\n                    onBudgetAction(month, 'cleanup-goal-template');\n                    onMenuClose();\n                  }}\n                />\n              </Popover>\n            </View>\n          </View>\n        </View>\n\n        {collapsed ? (\n          <View\n            style={{\n              alignItems: 'center',\n              padding: '10px 20px',\n              justifyContent: 'space-between',\n              backgroundColor: theme.tableBackground,\n              borderTop: '1px solid ' + theme.tableBorder,\n            }}\n          >\n            <ToBudget\n              prevMonthName={prevMonthName}\n              month={month}\n              onBudgetAction={onBudgetAction}\n              isCollapsed\n            />\n          </View>\n        ) : (\n          <>\n            <TotalsList\n              prevMonthName={prevMonthName}\n              style={{\n                padding: '5px 0',\n                marginTop: 17,\n                backgroundColor: theme.tableRowHeaderBackground,\n                borderTopWidth: 1,\n                borderBottomWidth: 1,\n                borderColor: theme.tableBorder,\n              }}\n            />\n            <View style={{ margin: '23px 0' }}>\n              <ToBudget\n                prevMonthName={prevMonthName}\n                month={month}\n                onBudgetAction={onBudgetAction}\n              />\n            </View>\n          </>\n        )}\n      </NamespaceContext.Provider>\n    </View>\n  );\n}\n","import type React from 'react';\nimport { memo, useRef, useState } from 'react';\n\nimport { rolloverBudget } from 'loot-core/src/client/queries';\nimport { evalArithmetic } from 'loot-core/src/shared/arithmetic';\nimport { integerToCurrency, amountToInteger } from 'loot-core/src/shared/util';\n\nimport { SvgCheveronDown } from '../../../icons/v1';\nimport { styles, theme, type CSSProperties } from '../../../style';\nimport { Button } from '../../common/Button';\nimport { Popover } from '../../common/Popover';\nimport { Text } from '../../common/Text';\nimport { View } from '../../common/View';\nimport { CellValue } from '../../spreadsheet/CellValue';\nimport { useFormat } from '../../spreadsheet/useFormat';\nimport { Row, Field, SheetCell } from '../../table';\nimport { BalanceWithCarryover } from '../BalanceWithCarryover';\nimport { makeAmountGrey } from '../util';\n\nimport { BalanceMovementMenu } from './BalanceMovementMenu';\nimport { BudgetMenu } from './BudgetMenu';\n\nconst headerLabelStyle: CSSProperties = {\n  flex: 1,\n  padding: '0 5px',\n  textAlign: 'right',\n};\n\nexport const BudgetTotalsMonth = memo(function BudgetTotalsMonth() {\n  const format = useFormat();\n  return (\n    <View\n      style={{\n        flex: 1,\n        flexDirection: 'row',\n        marginRight: styles.monthRightPadding,\n        paddingTop: 10,\n        paddingBottom: 10,\n      }}\n    >\n      <View style={headerLabelStyle}>\n        <Text style={{ color: theme.tableHeaderText }}>Budgeted</Text>\n        <CellValue\n          binding={rolloverBudget.totalBudgeted}\n          type=\"financial\"\n          style={{ color: theme.tableHeaderText, fontWeight: 600 }}\n          formatter={value => {\n            return format(-parseFloat(value || '0'), 'financial');\n          }}\n        />\n      </View>\n      <View style={headerLabelStyle}>\n        <Text style={{ color: theme.tableHeaderText }}>Spent</Text>\n        <CellValue\n          binding={rolloverBudget.totalSpent}\n          type=\"financial\"\n          style={{ color: theme.tableHeaderText, fontWeight: 600 }}\n        />\n      </View>\n      <View style={headerLabelStyle}>\n        <Text style={{ color: theme.tableHeaderText }}>Balance</Text>\n        <CellValue\n          binding={rolloverBudget.totalBalance}\n          type=\"financial\"\n          style={{ color: theme.tableHeaderText, fontWeight: 600 }}\n        />\n      </View>\n    </View>\n  );\n});\n\nexport function IncomeHeaderMonth() {\n  return (\n    <Row\n      style={{\n        color: theme.tableHeaderText,\n        alignItems: 'center',\n        paddingRight: 10,\n      }}\n    >\n      <View style={{ flex: 1, textAlign: 'right' }}>Received</View>\n    </Row>\n  );\n}\n\ntype ExpenseGroupMonthProps = {\n  group: { id: string };\n};\nexport const ExpenseGroupMonth = memo(function ExpenseGroupMonth({\n  group,\n}: ExpenseGroupMonthProps) {\n  const { id } = group;\n\n  return (\n    <View style={{ flex: 1, flexDirection: 'row' }}>\n      <SheetCell\n        name=\"budgeted\"\n        width=\"flex\"\n        textAlign=\"right\"\n        style={{ fontWeight: 600, ...styles.tnum }}\n        valueProps={{\n          binding: rolloverBudget.groupBudgeted(id),\n          type: 'financial',\n        }}\n      />\n      <SheetCell\n        name=\"spent\"\n        width=\"flex\"\n        textAlign=\"right\"\n        style={{ fontWeight: 600, ...styles.tnum }}\n        valueProps={{\n          binding: rolloverBudget.groupSumAmount(id),\n          type: 'financial',\n        }}\n      />\n      <SheetCell\n        name=\"balance\"\n        width=\"flex\"\n        textAlign=\"right\"\n        style={{\n          fontWeight: 600,\n          paddingRight: styles.monthRightPadding,\n          ...styles.tnum,\n        }}\n        valueProps={{\n          binding: rolloverBudget.groupBalance(id),\n          type: 'financial',\n          privacyFilter: {\n            style: {\n              paddingRight: styles.monthRightPadding,\n            },\n          },\n        }}\n      />\n    </View>\n  );\n});\n\ntype ExpenseCategoryMonthProps = {\n  month: string;\n  category: { id: string; name: string; is_income: boolean };\n  editing: boolean;\n  onEdit: (id: string | null, month?: string) => void;\n  onBudgetAction: (month: string, action: string, arg?: unknown) => void;\n  onShowActivity: (id: string, month: string) => void;\n};\nexport const ExpenseCategoryMonth = memo(function ExpenseCategoryMonth({\n  month,\n  category,\n  editing,\n  onEdit,\n  onBudgetAction,\n  onShowActivity,\n}: ExpenseCategoryMonthProps) {\n  const budgetMenuTriggerRef = useRef(null);\n  const balanceMenuTriggerRef = useRef(null);\n  const [budgetMenuOpen, setBudgetMenuOpen] = useState(false);\n  const [balanceMenuOpen, setBalanceMenuOpen] = useState(false);\n  const [hover, setHover] = useState(false);\n\n  const onMenuAction = (...args: Parameters<typeof onBudgetAction>) => {\n    onBudgetAction(...args);\n    setBudgetMenuOpen(false);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        flexDirection: 'row',\n        '& .hover-visible': {\n          opacity: 0,\n          transition: 'opacity .25s',\n        },\n        '&:hover .hover-visible': {\n          opacity: 1,\n        },\n      }}\n    >\n      <View\n        style={{\n          flex: 1,\n          flexDirection: 'row',\n        }}\n        onMouseOverCapture={() => setHover(true)}\n        onMouseLeave={() => {\n          setHover(false);\n        }}\n      >\n        {!editing && (hover || budgetMenuOpen) ? (\n          <View\n            style={{\n              flexShrink: 1,\n              paddingLeft: 3,\n              justifyContent: 'center',\n              borderTopWidth: 1,\n              borderBottomWidth: 1,\n              borderColor: theme.tableBorder,\n            }}\n          >\n            <Button\n              ref={budgetMenuTriggerRef}\n              type=\"bare\"\n              onClick={e => {\n                e.stopPropagation();\n                setBudgetMenuOpen(true);\n              }}\n              style={{\n                padding: 3,\n              }}\n            >\n              <SvgCheveronDown\n                width={14}\n                height={14}\n                className=\"hover-visible\"\n                style={budgetMenuOpen ? { opacity: 1 } : {}}\n              />\n            </Button>\n\n            <Popover\n              triggerRef={budgetMenuTriggerRef}\n              placement=\"bottom start\"\n              isOpen={budgetMenuOpen}\n              onOpenChange={() => setBudgetMenuOpen(false)}\n              style={{ width: 200 }}\n            >\n              <BudgetMenu\n                onCopyLastMonthAverage={() => {\n                  onMenuAction(month, 'copy-single-last', {\n                    category: category.id,\n                  });\n                }}\n                onSetMonthsAverage={numberOfMonths => {\n                  if (\n                    numberOfMonths !== 3 &&\n                    numberOfMonths !== 6 &&\n                    numberOfMonths !== 12\n                  ) {\n                    return;\n                  }\n\n                  onMenuAction(month, `set-single-${numberOfMonths}-avg`, {\n                    category: category.id,\n                  });\n                }}\n                onApplyBudgetTemplate={() => {\n                  onMenuAction(month, 'apply-single-category-template', {\n                    category: category.id,\n                  });\n                }}\n              />\n            </Popover>\n          </View>\n        ) : null}\n        <SheetCell\n          name=\"budget\"\n          exposed={editing}\n          focused={editing}\n          width=\"flex\"\n          onExpose={() => onEdit(category.id, month)}\n          style={{ ...(editing && { zIndex: 100 }), ...styles.tnum }}\n          textAlign=\"right\"\n          valueStyle={{\n            cursor: 'default',\n            margin: 1,\n            padding: '0 4px',\n            borderRadius: 4,\n            ':hover': {\n              boxShadow: 'inset 0 0 0 1px ' + theme.mobileAccountShadow,\n              backgroundColor: theme.tableBackground,\n            },\n          }}\n          valueProps={{\n            binding: rolloverBudget.catBudgeted(category.id),\n            type: 'financial',\n            getValueStyle: makeAmountGrey,\n            formatExpr: expr => {\n              return integerToCurrency(expr);\n            },\n            unformatExpr: expr => {\n              return amountToInteger(evalArithmetic(expr, 0));\n            },\n          }}\n          inputProps={{\n            onBlur: () => {\n              onEdit(null);\n            },\n            style: {\n              backgroundColor: theme.tableBackground,\n            },\n          }}\n          onSave={amount => {\n            onBudgetAction(month, 'budget-amount', {\n              category: category.id,\n              amount,\n            });\n          }}\n        />\n      </View>\n      <Field name=\"spent\" width=\"flex\" style={{ textAlign: 'right' }}>\n        <span\n          data-testid=\"category-month-spent\"\n          onClick={() => onShowActivity(category.id, month)}\n        >\n          <CellValue\n            binding={rolloverBudget.catSumAmount(category.id)}\n            type=\"financial\"\n            getStyle={makeAmountGrey}\n            style={{\n              cursor: 'pointer',\n              ':hover': { textDecoration: 'underline' },\n            }}\n          />\n        </span>\n      </Field>\n      <Field\n        name=\"balance\"\n        width=\"flex\"\n        style={{ paddingRight: styles.monthRightPadding, textAlign: 'right' }}\n      >\n        <span\n          ref={balanceMenuTriggerRef}\n          onClick={() => setBalanceMenuOpen(true)}\n        >\n          <BalanceWithCarryover\n            carryover={rolloverBudget.catCarryover(category.id)}\n            balance={rolloverBudget.catBalance(category.id)}\n            goal={rolloverBudget.catGoal(category.id)}\n            budgeted={rolloverBudget.catBudgeted(category.id)}\n            longGoal={rolloverBudget.catLongGoal(category.id)}\n            style={{\n              ':hover': { textDecoration: 'underline' },\n            }}\n          />\n        </span>\n\n        <Popover\n          triggerRef={balanceMenuTriggerRef}\n          placement=\"bottom end\"\n          isOpen={balanceMenuOpen}\n          onOpenChange={() => setBalanceMenuOpen(false)}\n          style={{ width: 200 }}\n        >\n          <BalanceMovementMenu\n            categoryId={category.id}\n            month={month}\n            onBudgetAction={onBudgetAction}\n            onClose={() => setBalanceMenuOpen(false)}\n          />\n        </Popover>\n      </Field>\n    </View>\n  );\n});\n\nexport function IncomeGroupMonth() {\n  return (\n    <View style={{ flex: 1 }}>\n      <SheetCell\n        name=\"received\"\n        width=\"flex\"\n        textAlign=\"right\"\n        style={{\n          fontWeight: 600,\n          paddingRight: styles.monthRightPadding,\n          ...styles.tnum,\n        }}\n        valueProps={{\n          binding: rolloverBudget.groupIncomeReceived,\n          type: 'financial',\n          privacyFilter: {\n            style: {\n              paddingRight: styles.monthRightPadding,\n            },\n          },\n        }}\n      />\n    </View>\n  );\n}\n\ntype IncomeCategoryMonthProps = {\n  category: { id: string; name: string };\n  isLast: boolean;\n  month: string;\n  onShowActivity: (id: string, month: string) => void;\n};\nexport function IncomeCategoryMonth({\n  category,\n  isLast,\n  month,\n  onShowActivity,\n}: IncomeCategoryMonthProps) {\n  return (\n    <View style={{ flex: 1 }}>\n      <Field\n        name=\"received\"\n        width=\"flex\"\n        style={{\n          paddingRight: styles.monthRightPadding,\n          textAlign: 'right',\n          ...(isLast && { borderBottomWidth: 0 }),\n        }}\n      >\n        <span onClick={() => onShowActivity(category.id, month)}>\n          <CellValue\n            binding={rolloverBudget.catSumAmount(category.id)}\n            type=\"financial\"\n            style={{\n              cursor: 'pointer',\n              ':hover': { textDecoration: 'underline' },\n            }}\n          />\n        </span>\n      </Field>\n    </View>\n  );\n}\n\nexport { BudgetSummary } from './budgetsummary/BudgetSummary';\n","// @ts-strict-ignore\nimport React, { memo, useMemo, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  addNotification,\n  applyBudgetAction,\n  createCategory,\n  createGroup,\n  deleteCategory,\n  deleteGroup,\n  getCategories,\n  moveCategory,\n  moveCategoryGroup,\n  pushModal,\n  updateCategory,\n  updateGroup,\n} from 'loot-core/src/client/actions';\nimport { useSpreadsheet } from 'loot-core/src/client/SpreadsheetProvider';\nimport { send, listen } from 'loot-core/src/platform/client/fetch';\nimport * as monthUtils from 'loot-core/src/shared/months';\n\nimport { useCategories } from '../../hooks/useCategories';\nimport { useGlobalPref } from '../../hooks/useGlobalPref';\nimport { useLocalPref } from '../../hooks/useLocalPref';\nimport { useNavigate } from '../../hooks/useNavigate';\nimport { styles } from '../../style';\nimport { View } from '../common/View';\nimport { NamespaceContext } from '../spreadsheet/NamespaceContext';\n\nimport { DynamicBudgetTable } from './DynamicBudgetTable';\nimport * as report from './report/ReportComponents';\nimport { ReportProvider } from './report/ReportContext';\nimport * as rollover from './rollover/RolloverComponents';\nimport { RolloverProvider } from './rollover/RolloverContext';\nimport { prewarmAllMonths, prewarmMonth } from './util';\n\ntype ReportComponents = {\n  SummaryComponent: typeof report.BudgetSummary;\n  ExpenseCategoryComponent: typeof report.ExpenseCategoryMonth;\n  ExpenseGroupComponent: typeof report.ExpenseGroupMonth;\n  IncomeCategoryComponent: typeof report.IncomeCategoryMonth;\n  IncomeGroupComponent: typeof report.IncomeGroupMonth;\n  BudgetTotalsComponent: typeof report.BudgetTotalsMonth;\n  IncomeHeaderComponent: typeof report.IncomeHeaderMonth;\n};\n\ntype RolloverComponents = {\n  SummaryComponent: typeof RolloverBudgetSummary;\n  ExpenseCategoryComponent: typeof rollover.ExpenseCategoryMonth;\n  ExpenseGroupComponent: typeof rollover.ExpenseGroupMonth;\n  IncomeCategoryComponent: typeof rollover.IncomeCategoryMonth;\n  IncomeGroupComponent: typeof rollover.IncomeGroupMonth;\n  BudgetTotalsComponent: typeof rollover.BudgetTotalsMonth;\n  IncomeHeaderComponent: typeof rollover.IncomeHeaderMonth;\n};\n\ntype BudgetInnerProps = {\n  accountId?: string;\n  reportComponents: ReportComponents;\n  rolloverComponents: RolloverComponents;\n};\n\nfunction BudgetInner(props: BudgetInnerProps) {\n  const currentMonth = monthUtils.currentMonth();\n  const spreadsheet = useSpreadsheet();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [summaryCollapsed, setSummaryCollapsedPref] = useLocalPref(\n    'budget.summaryCollapsed',\n  );\n  const [startMonthPref, setStartMonthPref] = useLocalPref('budget.startMonth');\n  const startMonth = startMonthPref || currentMonth;\n  const [bounds, setBounds] = useState({\n    start: startMonth,\n    end: startMonth,\n  });\n  const [budgetTypePref] = useLocalPref('budgetType');\n  const budgetType = budgetTypePref || 'rollover';\n  const [maxMonthsPref] = useGlobalPref('maxMonths');\n  const maxMonths = maxMonthsPref || 1;\n  const [initialized, setInitialized] = useState(false);\n  const { grouped: categoryGroups } = useCategories();\n\n  function loadCategories() {\n    dispatch(getCategories());\n  }\n\n  useEffect(() => {\n    async function run() {\n      loadCategories();\n\n      const { start, end } = await send('get-budget-bounds');\n      setBounds({ start, end });\n\n      await prewarmAllMonths(\n        budgetType,\n        spreadsheet,\n        { start, end },\n        startMonth,\n      );\n\n      setInitialized(true);\n    }\n\n    run();\n\n    const unlistens = [\n      listen('sync-event', ({ type, tables }) => {\n        if (\n          type === 'success' &&\n          (tables.includes('categories') ||\n            tables.includes('category_mapping') ||\n            tables.includes('category_groups'))\n        ) {\n          loadCategories();\n        }\n      }),\n\n      listen('undo-event', ({ tables }) => {\n        if (tables.includes('categories')) {\n          loadCategories();\n        }\n      }),\n    ];\n\n    return () => {\n      unlistens.forEach(unlisten => unlisten());\n    };\n  }, []);\n\n  useEffect(() => {\n    send('get-budget-bounds').then(({ start, end }) => {\n      if (bounds.start !== start || bounds.end !== end) {\n        setBounds({ start, end });\n      }\n    });\n  }, [props.accountId]);\n\n  const onMonthSelect = async (month, numDisplayed) => {\n    setStartMonthPref(month);\n\n    const warmingMonth = month;\n\n    // We could be smarter about this, but this is a good start. We\n    // optimize for the case where users press the left/right button\n    // to move between months. This loads the month data all at once\n    // and \"prewarms\" the spreadsheet cache. This uses a simple\n    // heuristic that will fail if the user clicks an arbitrary month,\n    // but it will just load in some unnecessary data.\n    if (month < startMonth) {\n      // pre-warm prev month\n      await prewarmMonth(\n        budgetType,\n        spreadsheet,\n        monthUtils.subMonths(month, 1),\n      );\n    } else if (month > startMonth) {\n      // pre-warm next month\n      await prewarmMonth(\n        budgetType,\n        spreadsheet,\n        monthUtils.addMonths(month, numDisplayed),\n      );\n    }\n\n    if (warmingMonth === month) {\n      setStartMonthPref(month);\n    }\n  };\n\n  const categoryNameAlreadyExistsNotification = name => {\n    dispatch(\n      addNotification({\n        type: 'error',\n        message: `Category ‘${name}’ already exists in group (May be Hidden)`,\n      }),\n    );\n  };\n\n  const onSaveCategory = async category => {\n    const cats = await send('get-categories');\n    const exists =\n      cats.grouped\n        .filter(g => g.id === category.cat_group)[0]\n        .categories.filter(\n          c => c.name.toUpperCase() === category.name.toUpperCase(),\n        )\n        .filter(c => (category.id === 'new' ? true : c.id !== category.id))\n        .length > 0;\n\n    if (exists) {\n      categoryNameAlreadyExistsNotification(category.name);\n      return;\n    }\n\n    if (category.id === 'new') {\n      dispatch(\n        createCategory(\n          category.name,\n          category.cat_group,\n          category.is_income,\n          category.hidden,\n        ),\n      );\n    } else {\n      dispatch(updateCategory(category));\n    }\n  };\n\n  const onDeleteCategory = async id => {\n    const mustTransfer = await send('must-category-transfer', { id });\n\n    if (mustTransfer) {\n      dispatch(\n        pushModal('confirm-category-delete', {\n          category: id,\n          onDelete: transferCategory => {\n            if (id !== transferCategory) {\n              dispatch(deleteCategory(id, transferCategory));\n            }\n          },\n        }),\n      );\n    } else {\n      dispatch(deleteCategory(id));\n    }\n  };\n\n  const onSaveGroup = group => {\n    if (group.id === 'new') {\n      dispatch(createGroup(group.name));\n    } else {\n      dispatch(updateGroup(group));\n    }\n  };\n\n  const onDeleteGroup = async id => {\n    const group = categoryGroups.find(g => g.id === id);\n\n    let mustTransfer = false;\n    for (const category of group.categories) {\n      if (await send('must-category-transfer', { id: category.id })) {\n        mustTransfer = true;\n        break;\n      }\n    }\n\n    if (mustTransfer) {\n      dispatch(\n        pushModal('confirm-category-delete', {\n          group: id,\n          onDelete: transferCategory => {\n            dispatch(deleteGroup(id, transferCategory));\n          },\n        }),\n      );\n    } else {\n      dispatch(deleteGroup(id));\n    }\n  };\n\n  const onBudgetAction = (month, type, args) => {\n    dispatch(applyBudgetAction(month, type, args));\n  };\n\n  const onShowActivity = (categoryId, month) => {\n    const filterConditions = [\n      { field: 'category', op: 'is', value: categoryId, type: 'id' },\n      {\n        field: 'date',\n        op: 'is',\n        value: month,\n        options: { month: true },\n        type: 'date',\n      },\n    ];\n    navigate('/accounts', {\n      state: {\n        goBack: true,\n        filterConditions,\n        categoryId,\n      },\n    });\n  };\n\n  const onReorderCategory = async sortInfo => {\n    const cats = await send('get-categories');\n    const moveCandidate = cats.list.filter(c => c.id === sortInfo.id)[0];\n    const exists =\n      cats.grouped\n        .filter(g => g.id === sortInfo.groupId)[0]\n        .categories.filter(\n          c => c.name.toUpperCase() === moveCandidate.name.toUpperCase(),\n        )\n        .filter(c => c.id !== moveCandidate.id).length > 0;\n\n    if (exists) {\n      categoryNameAlreadyExistsNotification(moveCandidate.name);\n      return;\n    }\n\n    dispatch(moveCategory(sortInfo.id, sortInfo.groupId, sortInfo.targetId));\n  };\n\n  const onReorderGroup = async sortInfo => {\n    dispatch(moveCategoryGroup(sortInfo.id, sortInfo.targetId));\n  };\n\n  const onToggleCollapse = () => {\n    setSummaryCollapsedPref(!summaryCollapsed);\n  };\n\n  const { reportComponents, rolloverComponents } = props;\n\n  if (!initialized || !categoryGroups) {\n    return null;\n  }\n\n  let table;\n  if (budgetType === 'report') {\n    table = (\n      <ReportProvider\n        summaryCollapsed={summaryCollapsed}\n        onBudgetAction={onBudgetAction}\n        onToggleSummaryCollapse={onToggleCollapse}\n      >\n        <DynamicBudgetTable\n          type={budgetType}\n          prewarmStartMonth={startMonth}\n          startMonth={startMonth}\n          monthBounds={bounds}\n          maxMonths={maxMonths}\n          dataComponents={reportComponents}\n          onMonthSelect={onMonthSelect}\n          onDeleteCategory={onDeleteCategory}\n          onDeleteGroup={onDeleteGroup}\n          onSaveCategory={onSaveCategory}\n          onSaveGroup={onSaveGroup}\n          onBudgetAction={onBudgetAction}\n          onShowActivity={onShowActivity}\n          onReorderCategory={onReorderCategory}\n          onReorderGroup={onReorderGroup}\n        />\n      </ReportProvider>\n    );\n  } else {\n    table = (\n      <RolloverProvider\n        summaryCollapsed={summaryCollapsed}\n        onBudgetAction={onBudgetAction}\n        onToggleSummaryCollapse={onToggleCollapse}\n      >\n        <DynamicBudgetTable\n          type={budgetType}\n          prewarmStartMonth={startMonth}\n          startMonth={startMonth}\n          monthBounds={bounds}\n          maxMonths={maxMonths}\n          dataComponents={rolloverComponents}\n          onMonthSelect={onMonthSelect}\n          onDeleteCategory={onDeleteCategory}\n          onDeleteGroup={onDeleteGroup}\n          onSaveCategory={onSaveCategory}\n          onSaveGroup={onSaveGroup}\n          onBudgetAction={onBudgetAction}\n          onShowActivity={onShowActivity}\n          onReorderCategory={onReorderCategory}\n          onReorderGroup={onReorderGroup}\n        />\n      </RolloverProvider>\n    );\n  }\n\n  return (\n    <NamespaceContext.Provider value={monthUtils.sheetForMonth(startMonth)}>\n      <View style={{ flex: 1 }}>{table}</View>\n    </NamespaceContext.Provider>\n  );\n}\n\nconst RolloverBudgetSummary = memo<{ month: string }>(props => {\n  return <rollover.BudgetSummary {...props} />;\n});\n\nRolloverBudgetSummary.displayName = 'RolloverBudgetSummary';\n\nexport function Budget() {\n  const reportComponents = useMemo<ReportComponents>(\n    () => ({\n      SummaryComponent: report.BudgetSummary,\n      ExpenseCategoryComponent: report.ExpenseCategoryMonth,\n      ExpenseGroupComponent: report.ExpenseGroupMonth,\n      IncomeCategoryComponent: report.IncomeCategoryMonth,\n      IncomeGroupComponent: report.IncomeGroupMonth,\n      BudgetTotalsComponent: report.BudgetTotalsMonth,\n      IncomeHeaderComponent: report.IncomeHeaderMonth,\n    }),\n    [report],\n  );\n\n  const rolloverComponents = useMemo<RolloverComponents>(\n    () => ({\n      SummaryComponent: RolloverBudgetSummary,\n      ExpenseCategoryComponent: rollover.ExpenseCategoryMonth,\n      ExpenseGroupComponent: rollover.ExpenseGroupMonth,\n      IncomeCategoryComponent: rollover.IncomeCategoryMonth,\n      IncomeGroupComponent: rollover.IncomeGroupMonth,\n      BudgetTotalsComponent: rollover.BudgetTotalsMonth,\n      IncomeHeaderComponent: rollover.IncomeHeaderMonth,\n    }),\n    [rollover],\n  );\n\n  // In a previous iteration, the wrapper needs `overflow: hidden` for\n  // some reason. Without it at certain dimensions the width/height\n  // that autosizer gives us is slightly wrong, causing scrollbars to\n  // appear. We might not need it anymore?\n  return (\n    <View\n      style={{\n        ...styles.page,\n        paddingLeft: 8,\n        paddingRight: 8,\n        overflow: 'hidden',\n      }}\n    >\n      <BudgetInner\n        reportComponents={reportComponents}\n        rolloverComponents={rolloverComponents}\n      />\n    </View>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { useSchedules } from 'loot-core/src/client/data-hooks/schedules';\nimport { send } from 'loot-core/src/platform/client/fetch';\nimport { type ScheduleEntity } from 'loot-core/src/types/models';\n\nimport { useActions } from '../../hooks/useActions';\nimport { theme } from '../../style';\nimport { Button } from '../common/Button2';\nimport { Search } from '../common/Search';\nimport { View } from '../common/View';\nimport { Page } from '../Page';\n\nimport { SchedulesTable, type ScheduleItemAction } from './SchedulesTable';\n\nexport function Schedules() {\n  const { pushModal } = useActions();\n  const [filter, setFilter] = useState('');\n\n  const scheduleData = useSchedules();\n\n  if (scheduleData == null) {\n    return null;\n  }\n\n  const { schedules, statuses } = scheduleData;\n\n  function onEdit(id: ScheduleEntity['id']) {\n    pushModal('schedule-edit', { id });\n  }\n\n  function onAdd() {\n    pushModal('schedule-edit');\n  }\n\n  function onDiscover() {\n    pushModal('schedules-discover');\n  }\n\n  async function onAction(name: ScheduleItemAction, id: ScheduleEntity['id']) {\n    switch (name) {\n      case 'post-transaction':\n        await send('schedule/post-transaction', { id });\n        break;\n      case 'skip':\n        await send('schedule/skip-next-date', { id });\n        break;\n      case 'complete':\n        await send('schedule/update', {\n          schedule: { id, completed: true },\n        });\n        break;\n      case 'restart':\n        await send('schedule/update', {\n          schedule: { id, completed: false },\n          resetNextDate: true,\n        });\n        break;\n      case 'delete':\n        await send('schedule/delete', { id });\n        break;\n      default:\n    }\n  }\n\n  return (\n    <Page header=\"Schedules\">\n      <View\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          padding: '0 0 15px',\n        }}\n      >\n        <View\n          style={{\n            flex: 1,\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <Search\n            placeholder=\"Filter schedules…\"\n            value={filter}\n            onChange={setFilter}\n          />\n        </View>\n      </View>\n\n      <SchedulesTable\n        schedules={schedules}\n        filter={filter}\n        statuses={statuses}\n        allowCompleted={true}\n        onSelect={onEdit}\n        onAction={onAction}\n        style={{ backgroundColor: theme.tableBackground }}\n      />\n\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          margin: '20px 0',\n          flexShrink: 0,\n        }}\n      >\n        <Button onPress={onDiscover}>Find schedules</Button>\n        <Button variant=\"primary\" onPress={onAdd}>\n          Add new schedule\n        </Button>\n      </View>\n    </Page>\n  );\n}\n","import React from 'react';\n\nimport { Modal } from '../common/Modal';\nimport { Paragraph } from '../common/Paragraph';\nimport { View } from '../common/View';\n\nexport function GoCardlessLink() {\n  window.close();\n\n  return (\n    <Modal isCurrent title=\"Account sync\">\n      {() => (\n        <View style={{ maxWidth: 500 }}>\n          <Paragraph>Please wait...</Paragraph>\n          <Paragraph>\n            The window should close automatically. If nothing happened you can\n            close this window or tab.\n          </Paragraph>\n        </View>\n      )}\n    </Modal>\n  );\n}\n","import type { TransactionEntity } from '../types/models';\n\nexport function validForTransfer(\n  fromTransaction: TransactionEntity,\n  toTransaction: TransactionEntity,\n) {\n  if (\n    // no subtransactions\n    // not already a transfer\n    [fromTransaction, toTransaction].every(tran => {\n      return tran.transfer_id == null && tran.is_child === false;\n    }) &&\n    fromTransaction.account !== toTransaction.account && // belong to different accounts\n    fromTransaction.amount + toTransaction.amount === 0 // amount must zero each other out\n  ) {\n    return true;\n  }\n  return false;\n}\n","import React, {\n  createContext,\n  useMemo,\n  useEffect,\n  useContext,\n  useReducer,\n} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst SplitsExpandedContext = createContext(null);\n\nexport function useSplitsExpanded() {\n  const data = useContext(SplitsExpandedContext);\n\n  return useMemo(\n    () => ({\n      ...data,\n      expanded: id =>\n        data.state.mode === 'collapse'\n          ? !data.state.ids.has(id)\n          : data.state.ids.has(id),\n    }),\n    [data],\n  );\n}\n\nexport function SplitsExpandedProvider({ children, initialMode = 'expand' }) {\n  const cachedState = useSelector(state => state.app.lastSplitState);\n  const reduxDispatch = useDispatch();\n\n  const [state, dispatch] = useReducer(\n    (state, action) => {\n      switch (action.type) {\n        case 'toggle-split': {\n          const ids = new Set([...state.ids]);\n          const { id } = action;\n          if (ids.has(id)) {\n            ids.delete(id);\n          } else {\n            ids.add(id);\n          }\n          return { ...state, ids };\n        }\n        case 'open-split': {\n          const ids = new Set([...state.ids]);\n          const { id } = action;\n          if (state.mode === 'collapse') {\n            ids.delete(id);\n          } else {\n            ids.add(id);\n          }\n          return { ...state, ids };\n        }\n        case 'set-mode': {\n          return {\n            ...state,\n            mode: action.mode,\n            ids: new Set(),\n            transitionId: null,\n          };\n        }\n        case 'switch-mode':\n          if (state.transitionId != null) {\n            // You can only transition once at a time\n            return state;\n          }\n\n          return {\n            ...state,\n            mode: state.mode === 'expand' ? 'collapse' : 'expand',\n            transitionId: action.id,\n            ids: new Set(),\n          };\n        case 'finish-switch-mode':\n          return { ...state, transitionId: null };\n        default:\n          throw new Error('Unknown action type: ' + action.type);\n      }\n    },\n    cachedState.current || { ids: new Set(), mode: initialMode },\n  );\n\n  useEffect(() => {\n    if (state.transitionId != null) {\n      // This timeout allows animations to finish\n      setTimeout(() => {\n        dispatch({ type: 'finish-switch-mode' });\n      }, 250);\n    }\n  }, [state.transitionId]);\n\n  useEffect(() => {\n    // In a finished state, cache the state\n    if (state.transitionId == null) {\n      reduxDispatch({ type: 'SET_LAST_SPLIT_STATE', splitState: state });\n    }\n  }, [reduxDispatch, state]);\n\n  const value = useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n  return (\n    <SplitsExpandedContext.Provider value={value}>\n      {children}\n    </SplitsExpandedContext.Provider>\n  );\n}\n","var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n","import React, {\n  createElement,\n  createRef,\n  forwardRef,\n  memo,\n  useState,\n  useRef,\n  useMemo,\n  useCallback,\n  useLayoutEffect,\n  useEffect,\n} from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  format as formatDate,\n  parseISO,\n  isValid as isDateValid,\n} from 'date-fns';\n\nimport { pushModal } from 'loot-core/client/actions';\nimport { useCachedSchedules } from 'loot-core/src/client/data-hooks/schedules';\nimport {\n  getAccountsById,\n  getPayeesById,\n  getCategoriesById,\n} from 'loot-core/src/client/reducers/queries';\nimport { evalArithmetic } from 'loot-core/src/shared/arithmetic';\nimport { currentDay } from 'loot-core/src/shared/months';\nimport * as monthUtils from 'loot-core/src/shared/months';\nimport { getScheduledAmount } from 'loot-core/src/shared/schedules';\nimport {\n  splitTransaction,\n  updateTransaction,\n  deleteTransaction,\n  addSplitTransaction,\n  groupTransaction,\n  ungroupTransactions,\n  isTemporaryId,\n  isPreviewId,\n} from 'loot-core/src/shared/transactions';\nimport {\n  integerToCurrency,\n  amountToInteger,\n  titleFirst,\n} from 'loot-core/src/shared/util';\n\nimport { useMergedRefs } from '../../hooks/useMergedRefs';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useSelectedDispatch, useSelectedItems } from '../../hooks/useSelected';\nimport { useSplitsExpanded } from '../../hooks/useSplitsExpanded';\nimport { SvgLeftArrow2, SvgRightArrow2, SvgSplit } from '../../icons/v0';\nimport { SvgArrowDown, SvgArrowUp, SvgCheveronDown } from '../../icons/v1';\nimport {\n  SvgArrowsSynchronize,\n  SvgCalendar,\n  SvgHyperlink2,\n} from '../../icons/v2';\nimport { styles, theme } from '../../style';\nimport { AccountAutocomplete } from '../autocomplete/AccountAutocomplete';\nimport { CategoryAutocomplete } from '../autocomplete/CategoryAutocomplete';\nimport { PayeeAutocomplete } from '../autocomplete/PayeeAutocomplete';\nimport { Button } from '../common/Button';\nimport { Popover } from '../common/Popover';\nimport { Text } from '../common/Text';\nimport { View } from '../common/View';\nimport { getStatusProps } from '../schedules/StatusBadge';\nimport { DateSelect } from '../select/DateSelect';\nimport { NamespaceContext } from '../spreadsheet/NamespaceContext';\nimport {\n  Cell,\n  Field,\n  Row,\n  InputCell,\n  SelectCell,\n  DeleteCell,\n  CustomCell,\n  CellButton,\n  useTableNavigator,\n  Table,\n  UnexposedCellContent,\n} from '../table';\n\nfunction getDisplayValue(obj, name) {\n  return obj ? obj[name] : '';\n}\n\nfunction serializeTransaction(transaction, showZeroInDeposit) {\n  let { amount, date } = transaction;\n\n  if (isPreviewId(transaction.id)) {\n    amount = (transaction._inverse ? -1 : 1) * getScheduledAmount(amount);\n  }\n\n  let debit = amount < 0 ? -amount : null;\n  let credit = amount > 0 ? amount : null;\n\n  if (amount === 0) {\n    if (showZeroInDeposit) {\n      credit = 0;\n    } else {\n      debit = 0;\n    }\n  }\n\n  // Validate the date format\n  if (!isDateValid(parseISO(date))) {\n    // Be a little forgiving if the date isn't valid. This at least\n    // stops the UI from crashing, but this is a serious problem with\n    // the data. This allows the user to go through and see empty\n    // dates and manually fix them.\n    date = null;\n  }\n\n  return {\n    ...transaction,\n    date,\n    debit: debit != null ? integerToCurrency(debit) : '',\n    credit: credit != null ? integerToCurrency(credit) : '',\n  };\n}\n\nfunction deserializeTransaction(transaction, originalTransaction) {\n  const { debit, credit, date: originalDate, ...realTransaction } = transaction;\n\n  let amount;\n  if (debit !== '') {\n    const parsed = evalArithmetic(debit, null);\n    amount = parsed != null ? -parsed : null;\n  } else {\n    amount = evalArithmetic(credit, null);\n  }\n\n  amount =\n    amount != null ? amountToInteger(amount) : originalTransaction.amount;\n\n  let date = originalDate;\n  if (date == null) {\n    date = originalTransaction.date || currentDay();\n  }\n\n  return { ...realTransaction, date, amount };\n}\n\nfunction isLastChild(transactions, index) {\n  const trans = transactions[index];\n  return (\n    trans &&\n    trans.is_child &&\n    (transactions[index + 1] == null ||\n      transactions[index + 1].parent_id !== trans.parent_id)\n  );\n}\n\nfunction selectAscDesc(field, ascDesc, clicked, defaultAscDesc = 'asc') {\n  return field === clicked\n    ? ascDesc === 'asc'\n      ? 'desc'\n      : 'asc'\n    : defaultAscDesc;\n}\n\nconst TransactionHeader = memo(\n  ({\n    hasSelected,\n    showAccount,\n    showCategory,\n    showBalance,\n    showCleared,\n    scrollWidth,\n    onSort,\n    ascDesc,\n    field,\n  }) => {\n    const dispatchSelected = useSelectedDispatch();\n\n    useHotkeys(\n      'ctrl+a, cmd+a, meta+a',\n      e => dispatchSelected({ type: 'select-all', event: e }),\n      {\n        preventDefault: true,\n        scopes: ['app'],\n      },\n      [dispatchSelected],\n    );\n\n    return (\n      <Row\n        style={{\n          fontWeight: 300,\n          zIndex: 200,\n          color: theme.tableHeaderText,\n          backgroundColor: theme.tableBackground,\n          paddingRight: `${5 + (scrollWidth ?? 0)}px`,\n          borderTopWidth: 1,\n          borderBottomWidth: 1,\n          borderColor: theme.tableBorder,\n        }}\n      >\n        <SelectCell\n          exposed={true}\n          focused={false}\n          selected={hasSelected}\n          width={20}\n          style={{\n            borderTopWidth: 0,\n            borderBottomWidth: 0,\n          }}\n          onSelect={e => dispatchSelected({ type: 'select-all', event: e })}\n        />\n        <HeaderCell\n          value=\"Date\"\n          width={110}\n          alignItems=\"flex\"\n          marginLeft={-5}\n          id=\"date\"\n          icon={field === 'date' ? ascDesc : 'clickable'}\n          onClick={() =>\n            onSort('date', selectAscDesc(field, ascDesc, 'date', 'desc'))\n          }\n        />\n        {showAccount && (\n          <HeaderCell\n            value=\"Account\"\n            width=\"flex\"\n            alignItems=\"flex\"\n            marginLeft={-5}\n            id=\"account\"\n            icon={field === 'account' ? ascDesc : 'clickable'}\n            onClick={() =>\n              onSort('account', selectAscDesc(field, ascDesc, 'account', 'asc'))\n            }\n          />\n        )}\n        <HeaderCell\n          value=\"Payee\"\n          width=\"flex\"\n          alignItems=\"flex\"\n          marginLeft={-5}\n          id=\"payee\"\n          icon={field === 'payee' ? ascDesc : 'clickable'}\n          onClick={() =>\n            onSort('payee', selectAscDesc(field, ascDesc, 'payee', 'asc'))\n          }\n        />\n        <HeaderCell\n          value=\"Notes\"\n          width=\"flex\"\n          alignItems=\"flex\"\n          marginLeft={-5}\n          id=\"notes\"\n          icon={field === 'notes' ? ascDesc : 'clickable'}\n          onClick={() =>\n            onSort('notes', selectAscDesc(field, ascDesc, 'notes', 'asc'))\n          }\n        />\n        {showCategory && (\n          <HeaderCell\n            value=\"Category\"\n            width=\"flex\"\n            alignItems=\"flex\"\n            marginLeft={-5}\n            id=\"category\"\n            icon={field === 'category' ? ascDesc : 'clickable'}\n            onClick={() =>\n              onSort(\n                'category',\n                selectAscDesc(field, ascDesc, 'category', 'asc'),\n              )\n            }\n          />\n        )}\n        <HeaderCell\n          value=\"Payment\"\n          width={100}\n          alignItems=\"flex-end\"\n          marginRight={-5}\n          id=\"payment\"\n          icon={field === 'payment' ? ascDesc : 'clickable'}\n          onClick={() =>\n            onSort('payment', selectAscDesc(field, ascDesc, 'payment', 'asc'))\n          }\n        />\n        <HeaderCell\n          value=\"Deposit\"\n          width={100}\n          alignItems=\"flex-end\"\n          marginRight={-5}\n          id=\"deposit\"\n          icon={field === 'deposit' ? ascDesc : 'clickable'}\n          onClick={() =>\n            onSort('deposit', selectAscDesc(field, ascDesc, 'deposit', 'desc'))\n          }\n        />\n        {showBalance && (\n          <HeaderCell\n            value=\"Balance\"\n            width={103}\n            alignItems=\"flex-end\"\n            marginRight={-5}\n            id=\"balance\"\n          />\n        )}\n        {showCleared && (\n          <HeaderCell\n            value=\"✓\"\n            width={38}\n            alignItems=\"center\"\n            id=\"cleared\"\n            icon={field === 'cleared' ? ascDesc : 'clickable'}\n            onClick={() => {\n              onSort(\n                'cleared',\n                selectAscDesc(field, ascDesc, 'cleared', 'asc'),\n              );\n            }}\n          />\n        )}\n      </Row>\n    );\n  },\n);\n\nTransactionHeader.displayName = 'TransactionHeader';\n\nfunction getPayeePretty(transaction, payee, transferAcct, numHiddenPayees = 0) {\n  const formatPayeeName = payeeName =>\n    numHiddenPayees > 0 ? `${payeeName} (+${numHiddenPayees} more)` : payeeName;\n\n  const { payee: payeeId } = transaction;\n\n  if (transferAcct) {\n    return (\n      <View\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          style={{\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {formatPayeeName(transferAcct.name)}\n        </div>\n      </View>\n    );\n  } else if (payee) {\n    return formatPayeeName(payee.name);\n  } else if (payeeId && payeeId.startsWith('new:')) {\n    return formatPayeeName(payeeId.slice('new:'.length));\n  }\n\n  return '';\n}\n\nfunction StatusCell({\n  id,\n  focused,\n  selected,\n  status,\n  isChild,\n  isPreview,\n  onEdit,\n  onUpdate,\n}) {\n  const isClearedField =\n    status === 'cleared' || status === 'reconciled' || status == null;\n  const statusProps = getStatusProps(status);\n\n  const statusColor =\n    status === 'cleared'\n      ? theme.noticeTextLight\n      : status === 'reconciled'\n        ? theme.noticeTextLight\n        : status === 'missed'\n          ? theme.errorText\n          : status === 'due'\n            ? theme.warningText\n            : selected\n              ? theme.pageTextLinkLight\n              : theme.pageTextSubdued;\n\n  function onSelect() {\n    if (isClearedField) {\n      onUpdate('cleared', !(status === 'cleared'));\n    }\n  }\n\n  return (\n    <Cell\n      name=\"cleared\"\n      width={38}\n      alignItems=\"center\"\n      focused={focused}\n      style={{ padding: 1 }}\n      plain\n    >\n      <CellButton\n        style={{\n          padding: 3,\n          backgroundColor: 'transparent',\n          border: '1px solid transparent',\n          borderRadius: 50,\n          ':focus': {\n            ...(isPreview\n              ? {\n                  boxShadow: 'none',\n                }\n              : {\n                  border: '1px solid ' + theme.formInputBorderSelected,\n                  boxShadow: '0 1px 2px ' + theme.formInputBorderSelected,\n                }),\n          },\n          cursor: isClearedField ? 'pointer' : 'default',\n          ...(isChild && { visibility: 'hidden' }),\n        }}\n        disabled={isPreview || isChild}\n        onEdit={() => onEdit(id, 'cleared')}\n        onSelect={onSelect}\n      >\n        {createElement(statusProps.Icon, {\n          style: {\n            width: 13,\n            height: 13,\n            color: statusColor,\n            marginTop: status === 'due' ? -1 : 0,\n          },\n        })}\n      </CellButton>\n    </Cell>\n  );\n}\n\nfunction HeaderCell({\n  value,\n  id,\n  width,\n  alignItems,\n  marginLeft,\n  marginRight,\n  icon,\n  onClick,\n}) {\n  const style = {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    color: theme.tableHeaderText,\n    fontWeight: 300,\n    marginLeft,\n    marginRight,\n  };\n\n  return (\n    <CustomCell\n      width={width}\n      name={id}\n      alignItems={alignItems}\n      value={value}\n      style={{\n        borderTopWidth: 0,\n        borderBottomWidth: 0,\n      }}\n      unexposedContent={({ value: cellValue }) =>\n        onClick ? (\n          <Button type=\"bare\" onClick={onClick} style={style}>\n            <UnexposedCellContent value={cellValue} />\n            {icon === 'asc' && (\n              <SvgArrowDown width={10} height={10} style={{ marginLeft: 5 }} />\n            )}\n            {icon === 'desc' && (\n              <SvgArrowUp width={10} height={10} style={{ marginLeft: 5 }} />\n            )}\n          </Button>\n        ) : (\n          <Text style={style}>{cellValue}</Text>\n        )\n      }\n    />\n  );\n}\n\nconst useParentPayee = (\n  payees,\n  subtransactions,\n  transferAccountsByTransaction,\n) =>\n  useMemo(() => {\n    if (!subtransactions) {\n      return null;\n    }\n\n    const { counts, mostCommonPayeeTransaction } =\n      subtransactions?.reduce(\n        ({ counts, ...result }, sub) => {\n          if (sub.payee) {\n            counts[sub.payee] = (counts[sub.payee] || 0) + 1;\n            if (counts[sub.payee] > result.maxCount) {\n              return {\n                counts,\n                maxCount: counts[sub.payee],\n                mostCommonPayeeTransaction: sub,\n              };\n            }\n          }\n          return { counts, ...result };\n        },\n        { counts: {}, maxCount: 0, mostCommonPayeeTransaction: null },\n      ) || {};\n\n    if (!mostCommonPayeeTransaction) {\n      return 'Split (no payee)';\n    }\n\n    const mostCommonPayee =\n      getPayeesById(payees)[mostCommonPayeeTransaction.payee];\n    const numDistinctPayees = Object.keys(counts).length;\n    return getPayeePretty(\n      mostCommonPayeeTransaction,\n      mostCommonPayee,\n      transferAccountsByTransaction[mostCommonPayeeTransaction.id],\n      numDistinctPayees - 1,\n    );\n  }, [subtransactions, payees, transferAccountsByTransaction]);\n\nfunction PayeeCell({\n  id,\n  payee,\n  focused,\n  payees,\n  accounts,\n  transferAccountsByTransaction,\n  valueStyle,\n  transaction,\n  subtransactions,\n  isPreview,\n  onEdit,\n  onUpdate,\n  onCreatePayee,\n  onManagePayees,\n  onNavigateToTransferAccount,\n  onNavigateToSchedule,\n}) {\n  const isCreatingPayee = useRef(false);\n\n  const dispatch = useDispatch();\n\n  const parentPayee = useParentPayee(\n    payees,\n    subtransactions,\n    transferAccountsByTransaction,\n  );\n\n  const transferAccount = transferAccountsByTransaction[transaction.id];\n\n  return transaction.is_parent ? (\n    <Cell\n      name=\"payee\"\n      width=\"flex\"\n      focused={focused}\n      style={{ padding: 0 }}\n      plain\n    >\n      <CellButton\n        bare\n        style={{\n          alignSelf: 'flex-start',\n          borderRadius: 4,\n          border: '1px solid transparent', // so it doesn't shift on hover\n          ':hover': {\n            border: '1px solid ' + theme.buttonNormalBorder,\n          },\n        }}\n        disabled={isPreview}\n        onSelect={() =>\n          dispatch(\n            pushModal('payee-autocomplete', {\n              onSelect: payeeId => {\n                onUpdate('payee', payeeId);\n              },\n            }),\n          )\n        }\n      >\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            alignSelf: 'stretch',\n            borderRadius: 4,\n            flex: 1,\n            padding: 4,\n            color: theme.pageTextSubdued,\n          }}\n        >\n          <SvgSplit\n            style={{\n              color: 'inherit',\n              width: 14,\n              height: 14,\n              marginRight: 5,\n            }}\n          />\n          <Text\n            style={{\n              fontStyle: 'italic',\n              fontWeight: 300,\n              userSelect: 'none',\n            }}\n          >\n            {parentPayee}\n          </Text>\n        </View>\n      </CellButton>\n    </Cell>\n  ) : (\n    <CustomCell\n      width=\"flex\"\n      name=\"payee\"\n      textAlign=\"flex\"\n      value={payee?.id}\n      valueStyle={valueStyle}\n      exposed={focused}\n      onExpose={name => !isPreview && onEdit(id, name)}\n      onUpdate={async value => {\n        onUpdate('payee', value);\n\n        if (value && value.startsWith('new:') && !isCreatingPayee.current) {\n          isCreatingPayee.current = true;\n          const id = await onCreatePayee(value.slice('new:'.length));\n          onUpdate('payee', id);\n          isCreatingPayee.current = false;\n        }\n      }}\n      formatter={() => getPayeePretty(transaction, payee, transferAccount)}\n      unexposedContent={props => (\n        <>\n          <PayeeIcons\n            transaction={transaction}\n            transferAccount={transferAccount}\n            onNavigateToTransferAccount={onNavigateToTransferAccount}\n            onNavigateToSchedule={onNavigateToSchedule}\n          />\n          <UnexposedCellContent {...props} />\n        </>\n      )}\n    >\n      {({\n        onBlur,\n        onKeyDown,\n        onUpdate,\n        onSave,\n        shouldSaveFromKey,\n        inputStyle,\n      }) => {\n        return (\n          <PayeeAutocomplete\n            payees={payees}\n            accounts={accounts}\n            value={payee?.id}\n            shouldSaveFromKey={shouldSaveFromKey}\n            inputProps={{\n              onBlur,\n              onKeyDown,\n              style: inputStyle,\n            }}\n            showManagePayees={true}\n            clearOnBlur={false}\n            focused={true}\n            onUpdate={(id, value) => onUpdate?.(value)}\n            onSelect={onSave}\n            onManagePayees={() => onManagePayees(payee?.id)}\n            menuPortalTarget={undefined}\n          />\n        );\n      }}\n    </CustomCell>\n  );\n}\n\nfunction PayeeIcons({\n  transaction,\n  transferAccount,\n  onNavigateToTransferAccount,\n  onNavigateToSchedule,\n}) {\n  const scheduleId = transaction.schedule;\n  const scheduleData = useCachedSchedules();\n  const schedule =\n    scheduleId && scheduleData\n      ? scheduleData.schedules.find(s => s.id === scheduleId)\n      : null;\n\n  if (schedule == null && transferAccount == null) {\n    // Neither a valid scheduled transaction nor a transfer.\n    return null;\n  }\n\n  const buttonStyle = {\n    marginLeft: -5,\n    marginRight: 2,\n    width: 23,\n    height: 23,\n    color: 'inherit',\n  };\n\n  const scheduleIconStyle = { width: 13, height: 13 };\n\n  const transferIconStyle = { width: 10, height: 10 };\n\n  const recurring = schedule && schedule._date && !!schedule._date.frequency;\n\n  return (\n    <>\n      {schedule && (\n        <Button\n          type=\"bare\"\n          style={buttonStyle}\n          onClick={e => {\n            e.stopPropagation();\n            onNavigateToSchedule(scheduleId);\n          }}\n        >\n          {recurring ? (\n            <SvgArrowsSynchronize style={scheduleIconStyle} />\n          ) : (\n            <SvgCalendar style={scheduleIconStyle} />\n          )}\n        </Button>\n      )}\n      {transferAccount && (\n        <Button\n          type=\"bare\"\n          aria-label=\"Transfer\"\n          style={buttonStyle}\n          onClick={e => {\n            e.stopPropagation();\n            if (!isTemporaryId(transaction.id)) {\n              onNavigateToTransferAccount(transferAccount.id);\n            }\n          }}\n        >\n          {(transaction._inverse ? -1 : 1) * transaction.amount > 0 ? (\n            <SvgLeftArrow2 style={transferIconStyle} />\n          ) : (\n            <SvgRightArrow2 style={transferIconStyle} />\n          )}\n        </Button>\n      )}\n    </>\n  );\n}\n\nconst Transaction = memo(function Transaction({\n  allTransactions,\n  transaction: originalTransaction,\n  subtransactions,\n  transferAccountsByTransaction,\n  editing,\n  showAccount,\n  showBalance,\n  showCleared,\n  showZeroInDeposit,\n  style,\n  selected,\n  highlighted,\n  added,\n  matched,\n  expanded,\n  focusedField,\n  categoryGroups,\n  payees,\n  accounts,\n  balance,\n  dateFormat = 'MM/dd/yyyy',\n  hideFraction,\n  onSave,\n  onEdit,\n  onDelete,\n  onSplit,\n  onManagePayees,\n  onCreatePayee,\n  onToggleSplit,\n  onNavigateToTransferAccount,\n  onNavigateToSchedule,\n  onNotesTagClick,\n  splitError,\n  listContainerRef,\n}) {\n  const dispatch = useDispatch();\n  const dispatchSelected = useSelectedDispatch();\n  const triggerRef = useRef(null);\n\n  const [prevShowZero, setPrevShowZero] = useState(showZeroInDeposit);\n  const [prevTransaction, setPrevTransaction] = useState(originalTransaction);\n  const [transaction, setTransaction] = useState(() =>\n    serializeTransaction(originalTransaction, showZeroInDeposit),\n  );\n  const isPreview = isPreviewId(transaction.id);\n\n  if (\n    originalTransaction !== prevTransaction ||\n    showZeroInDeposit !== prevShowZero\n  ) {\n    setTransaction(\n      serializeTransaction(originalTransaction, showZeroInDeposit),\n    );\n    setPrevTransaction(originalTransaction);\n    setPrevShowZero(showZeroInDeposit);\n  }\n\n  const [showReconciliationWarning, setShowReconciliationWarning] =\n    useState(false);\n\n  function onUpdate(name, value) {\n    // Had some issues with this is called twice which is a problem now that we are showing a warning\n    // modal if the transaction is locked. I added a boolean to guard against showing the modal twice.\n    // I'm still not completely happy with how the cells update pre/post modal. Sometimes you have to\n    // click off of the cell manually after confirming your change post modal for example. The last\n    // row seems to have more issues than others but the combination of tab, return, and clicking out\n    // of the cell all have different implications as well.\n\n    if (transaction[name] !== value) {\n      if (\n        transaction.reconciled === true &&\n        (name === 'credit' ||\n          name === 'debit' ||\n          name === 'payee' ||\n          name === 'account' ||\n          name === 'date')\n      ) {\n        if (showReconciliationWarning === false) {\n          setShowReconciliationWarning(true);\n          dispatch(\n            pushModal('confirm-transaction-edit', {\n              onCancel: () => {\n                setShowReconciliationWarning(false);\n              },\n              onConfirm: () => {\n                setShowReconciliationWarning(false);\n                onUpdateAfterConfirm(name, value);\n              },\n              confirmReason: 'editReconciled',\n            }),\n          );\n        }\n      } else {\n        onUpdateAfterConfirm(name, value);\n      }\n    }\n\n    // Allow un-reconciling (unlocking) transactions\n    if (name === 'cleared' && transaction.reconciled) {\n      dispatch(\n        pushModal('confirm-transaction-edit', {\n          onConfirm: () => {\n            onUpdateAfterConfirm('reconciled', false);\n          },\n          confirmReason: 'unlockReconciled',\n        }),\n      );\n    }\n  }\n\n  function onUpdateAfterConfirm(name, value) {\n    const newTransaction = { ...transaction, [name]: value };\n\n    // Don't change the note to an empty string if it's null (since they are both rendered the same)\n    if (name === 'note' && value === '' && transaction.note == null) {\n      return;\n    }\n\n    if (\n      name === 'account' &&\n      value &&\n      getAccountsById(accounts)[value].offbudget\n    ) {\n      newTransaction.category = null;\n    }\n\n    // If entering an amount in either of the credit/debit fields, we\n    // need to clear out the other one so it's always properly\n    // translated into the desired amount (see\n    // `deserializeTransaction`)\n    if (name === 'credit') {\n      newTransaction['debit'] = '';\n    } else if (name === 'debit') {\n      newTransaction['credit'] = '';\n    }\n\n    if (name === 'account' && transaction.account !== value) {\n      newTransaction.reconciled = false;\n    }\n\n    // Don't save a temporary value (a new payee) which will be\n    // filled in with a real id later\n    if (name === 'payee' && value && value.startsWith('new:')) {\n      setTransaction(newTransaction);\n    } else {\n      const deserialized = deserializeTransaction(\n        newTransaction,\n        originalTransaction,\n      );\n      // Run the transaction through the formatting so that we know\n      // it's always showing the formatted result\n      setTransaction(serializeTransaction(deserialized, showZeroInDeposit));\n\n      const deserializedName = ['credit', 'debit'].includes(name)\n        ? 'amount'\n        : name;\n      onSave(deserialized, subtransactions, deserializedName);\n    }\n  }\n\n  const {\n    id,\n    amount,\n    debit,\n    credit,\n    payee: payeeId,\n    imported_payee: importedPayee,\n    notes,\n    date,\n    account: accountId,\n    category: categoryId,\n    cleared,\n    reconciled,\n    is_parent: isParent,\n    _unmatched = false,\n    _inverse = false,\n  } = transaction;\n\n  // Join in some data\n  const payee = payees && payeeId && getPayeesById(payees)[payeeId];\n  const account = accounts && accountId && getAccountsById(accounts)[accountId];\n\n  const isChild = transaction.is_child;\n  const transferAcct = transferAccountsByTransaction[id];\n  const isBudgetTransfer = transferAcct && transferAcct.offbudget === 0;\n  const isOffBudget = account && account.offbudget === 1;\n\n  const valueStyle = added ? { fontWeight: 600 } : null;\n  const backgroundFocus = focusedField === 'select';\n  const amountStyle = hideFraction ? { letterSpacing: -0.5 } : null;\n\n  const runningBalance = !isTemporaryId(id)\n    ? balance\n    : balance + (_inverse ? -1 : 1) * amount;\n\n  // Ok this entire logic is a dirty, dirty hack.. but let me explain.\n  // Problem: the split-error Popover (which has the buttons to distribute/add split)\n  // renders before schedules are added to the table. After schedules finally load\n  // the entire table gets pushed down. But the Popover does not re-calculate\n  // its positioning. This is because there is nothing in react-aria that would be\n  // watching for the position of the trigger element.\n  // Solution: when transactions (this includes schedules) change - we increment\n  // a variable (with a small delay in order for the next render cycle to pick up\n  // the change instead of the current). We pass the integer to the Popover which\n  // causes it to re-calculate the positioning. Thus fixing the problem.\n  const [updateId, setUpdateId] = useState(1);\n  useEffect(() => {\n    // The hack applies to only transactions with split errors\n    if (!splitError) {\n      return;\n    }\n\n    setTimeout(() => {\n      setUpdateId(state => state + 1);\n    }, 1);\n  }, [splitError, allTransactions]);\n\n  return (\n    <Row\n      ref={triggerRef}\n      style={{\n        backgroundColor: selected\n          ? theme.tableRowBackgroundHighlight\n          : backgroundFocus\n            ? theme.tableRowBackgroundHover\n            : theme.tableBackground,\n        ':hover': !(backgroundFocus || selected) && {\n          backgroundColor: theme.tableRowBackgroundHover,\n        },\n        '& .hover-visible': {\n          opacity: 0,\n        },\n        ':hover .hover-visible': {\n          opacity: 1,\n        },\n        ...(highlighted || selected\n          ? { color: theme.tableRowBackgroundHighlightText }\n          : { color: theme.tableText }),\n        ...style,\n        ...(isPreview && {\n          color: theme.tableTextInactive,\n          fontStyle: 'italic',\n        }),\n        ...(_unmatched && { opacity: 0.5 }),\n      }}\n    >\n      {splitError && listContainerRef.current && (\n        <Popover\n          arrowSize={updateId}\n          triggerRef={triggerRef}\n          isOpen\n          isNonModal\n          style={{ width: 375, padding: 5, maxHeight: '38px !important' }}\n          shouldFlip={false}\n          placement=\"bottom end\"\n          UNSTABLE_portalContainer={listContainerRef.current}\n        >\n          {splitError}\n        </Popover>\n      )}\n\n      {isChild && (\n        <Field\n          /* Checkmark blank placeholder for Child transaction */\n          width={110}\n          style={{\n            width: 110,\n            backgroundColor: theme.tableRowBackgroundHover,\n            border: 0, // known z-order issue, bottom border for parent transaction hidden\n          }}\n        />\n      )}\n\n      {isChild && showAccount && (\n        <Field\n          /* Account blank placeholder for Child transaction */\n          style={{\n            flex: 1,\n            backgroundColor: theme.tableRowBackgroundHover,\n            border: 0,\n          }}\n        />\n      )}\n\n      {/* Checkmark - for Child transaction\n      between normal Date and Payee or Account and Payee if needed */}\n      {isTemporaryId(transaction.id) ? (\n        isChild ? (\n          <DeleteCell\n            onDelete={() => onDelete && onDelete(transaction.id)}\n            exposed={editing}\n            style={{ ...(isChild && { borderLeftWidth: 1 }), lineHeight: 0 }}\n          />\n        ) : (\n          <Cell width={20} />\n        )\n      ) : (\n        <SelectCell\n          /* Checkmark field for non-child transaction */\n          exposed\n          buttonProps={{\n            className: selected || editing ? null : 'hover-visible',\n          }}\n          focused={focusedField === 'select'}\n          onSelect={e => {\n            dispatchSelected({ type: 'select', id: transaction.id, event: e });\n          }}\n          onEdit={() => onEdit(id, 'select')}\n          selected={selected}\n          style={{ ...(isChild && { borderLeftWidth: 1 }) }}\n          value={\n            matched && (\n              <SvgHyperlink2\n                style={{ width: 13, height: 13, color: 'inherit' }}\n              />\n            )\n          }\n        />\n      )}\n      {!isChild && (\n        <CustomCell\n          /* Date field for non-child transaction */\n          name=\"date\"\n          width={110}\n          textAlign=\"flex\"\n          exposed={focusedField === 'date'}\n          value={date}\n          valueStyle={valueStyle}\n          formatter={date =>\n            date ? formatDate(parseISO(date), dateFormat) : ''\n          }\n          onExpose={name => !isPreview && onEdit(id, name)}\n          onUpdate={value => {\n            onUpdate('date', value);\n          }}\n        >\n          {({\n            onBlur,\n            onKeyDown,\n            onUpdate,\n            onSave,\n            shouldSaveFromKey,\n            inputStyle,\n          }) => (\n            <DateSelect\n              value={date || ''}\n              dateFormat={dateFormat}\n              inputProps={{ onBlur, onKeyDown, style: inputStyle }}\n              shouldSaveFromKey={shouldSaveFromKey}\n              clearOnBlur={true}\n              onUpdate={onUpdate}\n              onSelect={onSave}\n            />\n          )}\n        </CustomCell>\n      )}\n\n      {!isChild && showAccount && (\n        <CustomCell\n          /* Account field for non-child transaction */\n          name=\"account\"\n          width=\"flex\"\n          textAlign=\"flex\"\n          value={accountId}\n          formatter={acctId => {\n            const acct = acctId && getAccountsById(accounts)[acctId];\n            if (acct) {\n              return acct.name;\n            }\n            return '';\n          }}\n          valueStyle={valueStyle}\n          exposed={focusedField === 'account'}\n          onExpose={name => !isPreview && onEdit(id, name)}\n          onUpdate={async value => {\n            // Only ever allow non-null values\n            if (value) {\n              onUpdate('account', value);\n            }\n          }}\n        >\n          {({\n            onBlur,\n            onKeyDown,\n            onUpdate,\n            onSave,\n            shouldSaveFromKey,\n            inputStyle,\n          }) => (\n            <AccountAutocomplete\n              includeClosedAccounts={false}\n              value={accountId}\n              accounts={accounts}\n              shouldSaveFromKey={shouldSaveFromKey}\n              clearOnBlur={false}\n              focused={true}\n              inputProps={{ onBlur, onKeyDown, style: inputStyle }}\n              onUpdate={onUpdate}\n              onSelect={onSave}\n              menuPortalTarget={undefined}\n            />\n          )}\n        </CustomCell>\n      )}\n      {(() => (\n        <PayeeCell\n          /* Payee field for all transactions */\n          id={id}\n          payee={payee}\n          focused={focusedField === 'payee'}\n          /* Filter out the account we're currently in as it is not a valid transfer */\n          accounts={accounts.filter(account => account.id !== accountId)}\n          payees={payees.filter(payee => payee.transfer_acct !== accountId)}\n          valueStyle={valueStyle}\n          transaction={transaction}\n          subtransactions={subtransactions}\n          transferAccountsByTransaction={transferAccountsByTransaction}\n          importedPayee={importedPayee}\n          isPreview={isPreview}\n          onEdit={onEdit}\n          onUpdate={onUpdate}\n          onCreatePayee={onCreatePayee}\n          onManagePayees={onManagePayees}\n          onNavigateToTransferAccount={onNavigateToTransferAccount}\n          onNavigateToSchedule={onNavigateToSchedule}\n        />\n      ))()}\n\n      {isPreview ? (\n        /* Notes field for all transactions */\n        <Cell name=\"notes\" width=\"flex\" />\n      ) : (\n        <InputCell\n          width=\"flex\"\n          name=\"notes\"\n          textAlign=\"flex\"\n          exposed={focusedField === 'notes'}\n          focused={focusedField === 'notes'}\n          value={notes || ''}\n          valueStyle={valueStyle}\n          formatter={value => notesTagFormatter(value, onNotesTagClick)}\n          onExpose={name => !isPreview && onEdit(id, name)}\n          inputProps={{\n            value: notes || '',\n            onUpdate: onUpdate.bind(null, 'notes'),\n          }}\n        />\n      )}\n\n      {isPreview ? (\n        // Category field for preview transactions\n        <Cell width=\"flex\" style={{ alignItems: 'flex-start' }} exposed={true}>\n          {() => (\n            <View\n              style={{\n                color:\n                  notes === 'missed'\n                    ? theme.errorText\n                    : notes === 'due'\n                      ? theme.warningText\n                      : selected\n                        ? theme.formLabelText\n                        : theme.upcomingText,\n                backgroundColor:\n                  notes === 'missed'\n                    ? theme.errorBackground\n                    : notes === 'due'\n                      ? theme.warningBackground\n                      : selected\n                        ? theme.formLabelBackground\n                        : theme.upcomingBackground,\n                margin: '0 5px',\n                padding: '3px 7px',\n                borderRadius: 4,\n              }}\n            >\n              {titleFirst(notes)}\n            </View>\n          )}\n        </Cell>\n      ) : isParent ? (\n        <Cell\n          /* Category field (Split button) for parent transactions */\n          name=\"category\"\n          width=\"flex\"\n          focused={focusedField === 'category'}\n          style={{ padding: 0 }}\n          plain\n        >\n          <CellButton\n            bare\n            style={{\n              alignSelf: 'flex-start',\n              borderRadius: 4,\n              border: '1px solid transparent', // so it doesn't shift on hover\n              ':hover': {\n                border: '1px solid ' + theme.buttonNormalBorder,\n              },\n            }}\n            disabled={isTemporaryId(transaction.id)}\n            onEdit={() => onEdit(id, 'category')}\n            onSelect={() => onToggleSplit(id)}\n          >\n            <View\n              style={{\n                flexDirection: 'row',\n                alignItems: 'center',\n                alignSelf: 'stretch',\n                borderRadius: 4,\n                flex: 1,\n                padding: 4,\n                color: theme.pageTextSubdued,\n              }}\n            >\n              {isParent && (\n                <SvgCheveronDown\n                  style={{\n                    color: 'inherit',\n                    width: 14,\n                    height: 14,\n                    transition: 'transform .08s',\n                    transform: expanded ? 'rotateZ(0)' : 'rotateZ(-90deg)',\n                  }}\n                />\n              )}\n              <Text\n                style={{\n                  fontStyle: 'italic',\n                  fontWeight: 300,\n                  userSelect: 'none',\n                }}\n              >\n                Split\n              </Text>\n            </View>\n          </CellButton>\n        </Cell>\n      ) : isBudgetTransfer || isOffBudget || isPreview ? (\n        <InputCell\n          /* Category field for transfer and off-budget transactions\n     (NOT preview, it is covered first) */\n          name=\"category\"\n          width=\"flex\"\n          exposed={focusedField === 'category'}\n          focused={focusedField === 'category'}\n          onExpose={name => !isPreview && onEdit(id, name)}\n          value={\n            isParent\n              ? 'Split'\n              : isOffBudget\n                ? 'Off Budget'\n                : isBudgetTransfer\n                  ? 'Transfer'\n                  : ''\n          }\n          valueStyle={valueStyle}\n          style={{\n            fontStyle: 'italic',\n            color: theme.pageTextSubdued,\n            fontWeight: 300,\n          }}\n          inputProps={{\n            readOnly: true,\n            style: { fontStyle: 'italic' },\n          }}\n        />\n      ) : (\n        <CustomCell\n          /* Category field for normal and child transactions */\n          name=\"category\"\n          width=\"flex\"\n          textAlign=\"flex\"\n          value={categoryId}\n          formatter={value =>\n            value\n              ? getDisplayValue(\n                  getCategoriesById(categoryGroups)[value],\n                  'name',\n                )\n              : transaction.id\n                ? 'Categorize'\n                : ''\n          }\n          exposed={focusedField === 'category'}\n          onExpose={name => onEdit(id, name)}\n          valueStyle={\n            !categoryId\n              ? {\n                  // uncategorized transaction\n                  fontStyle: 'italic',\n                  fontWeight: 300,\n                  color: theme.formInputTextHighlight,\n                }\n              : valueStyle\n          }\n          onUpdate={async value => {\n            if (value === 'split') {\n              onSplit(transaction.id);\n            } else {\n              onUpdate('category', value);\n            }\n          }}\n        >\n          {({\n            onBlur,\n            onKeyDown,\n            onUpdate,\n            onSave,\n            shouldSaveFromKey,\n            inputStyle,\n          }) => (\n            <NamespaceContext.Provider\n              value={monthUtils.sheetForMonth(\n                monthUtils.monthFromDate(transaction.date),\n              )}\n            >\n              <CategoryAutocomplete\n                categoryGroups={categoryGroups}\n                value={categoryId}\n                focused={true}\n                clearOnBlur={false}\n                showSplitOption={!isChild && !isParent}\n                shouldSaveFromKey={shouldSaveFromKey}\n                inputProps={{ onBlur, onKeyDown, style: inputStyle }}\n                onUpdate={onUpdate}\n                onSelect={onSave}\n                menuPortalTarget={undefined}\n                showHiddenCategories={false}\n              />\n            </NamespaceContext.Provider>\n          )}\n        </CustomCell>\n      )}\n\n      <InputCell\n        /* Debit field for all transactions */\n        type=\"input\"\n        width={100}\n        name=\"debit\"\n        exposed={focusedField === 'debit'}\n        focused={focusedField === 'debit'}\n        value={debit === '' && credit === '' ? '0.00' : debit}\n        valueStyle={valueStyle}\n        textAlign=\"right\"\n        title={debit}\n        onExpose={name => !isPreview && onEdit(id, name)}\n        style={{\n          ...(isParent && { fontStyle: 'italic' }),\n          ...styles.tnum,\n          ...amountStyle,\n        }}\n        inputProps={{\n          value: debit === '' && credit === '' ? '0.00' : debit,\n          onUpdate: onUpdate.bind(null, 'debit'),\n        }}\n        privacyFilter={{\n          activationFilters: [!isTemporaryId(transaction.id)],\n        }}\n      />\n\n      <InputCell\n        /* Credit field for all transactions */\n        type=\"input\"\n        width={100}\n        name=\"credit\"\n        exposed={focusedField === 'credit'}\n        focused={focusedField === 'credit'}\n        value={credit}\n        valueStyle={valueStyle}\n        textAlign=\"right\"\n        title={credit}\n        onExpose={name => !isPreview && onEdit(id, name)}\n        style={{\n          ...(isParent && { fontStyle: 'italic' }),\n          ...styles.tnum,\n          ...amountStyle,\n        }}\n        inputProps={{\n          value: credit,\n          onUpdate: onUpdate.bind(null, 'credit'),\n        }}\n        privacyFilter={{\n          activationFilters: [!isTemporaryId(transaction.id)],\n        }}\n      />\n\n      {showBalance && (\n        <Cell\n          /* Balance field for all transactions */\n          name=\"balance\"\n          value={\n            runningBalance == null || isChild\n              ? ''\n              : integerToCurrency(runningBalance)\n          }\n          valueStyle={{\n            color: runningBalance < 0 ? theme.errorText : theme.noticeTextLight,\n          }}\n          style={{ ...styles.tnum, ...amountStyle }}\n          width={103}\n          textAlign=\"right\"\n          privacyFilter\n        />\n      )}\n\n      {showCleared && (\n        <StatusCell\n          /* Icon field for all transactions */\n          id={id}\n          focused={focusedField === 'cleared'}\n          selected={selected}\n          isPreview={isPreview}\n          status={\n            isPreview\n              ? notes\n              : reconciled\n                ? 'reconciled'\n                : cleared\n                  ? 'cleared'\n                  : null\n          }\n          isChild={isChild}\n          onEdit={onEdit}\n          onUpdate={onUpdate}\n        />\n      )}\n\n      <Cell width={5} />\n    </Row>\n  );\n});\n\nfunction TransactionError({\n  error,\n  isDeposit,\n  onAddSplit,\n  onDistributeRemainder,\n  style,\n  canDistributeRemainder,\n}) {\n  switch (error.type) {\n    case 'SplitTransactionError':\n      if (error.version === 1) {\n        return (\n          <View\n            style={{\n              flexDirection: 'row',\n              alignItems: 'center',\n              padding: '0 5px',\n              ...style,\n            }}\n            data-testid=\"transaction-error\"\n          >\n            <Text>\n              Amount left:{' '}\n              <Text style={{ fontWeight: 500 }}>\n                {integerToCurrency(\n                  isDeposit ? error.difference : -error.difference,\n                )}\n              </Text>\n            </Text>\n            <View style={{ flex: 1 }} />\n            <Button\n              type=\"normal\"\n              style={{ marginLeft: 15 }}\n              onClick={onDistributeRemainder}\n              data-testid=\"distribute-split-button\"\n              disabled={!canDistributeRemainder}\n            >\n              Distribute\n            </Button>\n            <Button\n              type=\"primary\"\n              style={{ marginLeft: 10, padding: '4px 10px' }}\n              onClick={onAddSplit}\n              data-testid=\"add-split-button\"\n            >\n              Add Split\n            </Button>\n          </View>\n        );\n      }\n      break;\n    default:\n      return null;\n  }\n}\n\nfunction makeTemporaryTransactions(\n  currentAccountId,\n  currentCategoryId,\n  lastDate,\n) {\n  return [\n    {\n      id: 'temp',\n      date: lastDate || currentDay(),\n      account: currentAccountId || null,\n      category: currentCategoryId || null,\n      cleared: false,\n      amount: null,\n    },\n  ];\n}\n\nfunction NewTransaction({\n  transactions,\n  accounts,\n  categoryGroups,\n  payees,\n  transferAccountsByTransaction,\n  editingTransaction,\n  focusedField,\n  showAccount,\n  showCategory,\n  showBalance,\n  showCleared,\n  dateFormat,\n  hideFraction,\n  onClose,\n  onSplit,\n  onEdit,\n  onDelete,\n  onSave,\n  onAdd,\n  onAddSplit,\n  onDistributeRemainder,\n  onManagePayees,\n  onCreatePayee,\n  onNavigateToTransferAccount,\n  onNavigateToSchedule,\n  onNotesTagClick,\n  balance,\n}) {\n  const error = transactions[0].error;\n  const isDeposit = transactions[0].amount > 0;\n\n  const childTransactions = transactions.filter(\n    t => t.parent_id === transactions[0].id,\n  );\n  const emptyChildTransactions = childTransactions.filter(t => t.amount === 0);\n\n  return (\n    <View\n      style={{\n        borderBottom: '1px solid ' + theme.tableBorderHover,\n        paddingBottom: 6,\n        backgroundColor: theme.tableBackground,\n      }}\n      data-testid=\"new-transaction\"\n      onKeyDown={e => {\n        if (e.key === 'Escape') {\n          onClose();\n        }\n      }}\n    >\n      {transactions.map(transaction => (\n        <Transaction\n          isNew\n          key={transaction.id}\n          editing={editingTransaction === transaction.id}\n          transaction={transaction}\n          subtransactions={transaction.is_parent ? childTransactions : null}\n          transferAccountsByTransaction={transferAccountsByTransaction}\n          showAccount={showAccount}\n          showCategory={showCategory}\n          showBalance={showBalance}\n          showCleared={showCleared}\n          focusedField={editingTransaction === transaction.id && focusedField}\n          showZeroInDeposit={isDeposit}\n          accounts={accounts}\n          categoryGroups={categoryGroups}\n          payees={payees}\n          dateFormat={dateFormat}\n          hideFraction={hideFraction}\n          expanded={true}\n          onEdit={onEdit}\n          onSave={onSave}\n          onSplit={onSplit}\n          onDelete={onDelete}\n          onAdd={onAdd}\n          onManagePayees={onManagePayees}\n          onCreatePayee={onCreatePayee}\n          style={{ marginTop: -1 }}\n          onNavigateToTransferAccount={onNavigateToTransferAccount}\n          onNavigateToSchedule={onNavigateToSchedule}\n          onNotesTagClick={onNotesTagClick}\n          balance={balance}\n        />\n      ))}\n      <View\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n          marginTop: 6,\n          marginRight: 20,\n        }}\n      >\n        <Button\n          style={{ marginRight: 10, padding: '4px 10px' }}\n          onClick={() => onClose()}\n          data-testid=\"cancel-button\"\n        >\n          Cancel\n        </Button>\n        {error ? (\n          <TransactionError\n            error={error}\n            isDeposit={isDeposit}\n            onAddSplit={() => onAddSplit(transactions[0].id)}\n            onDistributeRemainder={() =>\n              onDistributeRemainder(transactions[0].id)\n            }\n            canDistributeRemainder={emptyChildTransactions.length > 0}\n          />\n        ) : (\n          <Button\n            type=\"primary\"\n            style={{ padding: '4px 10px' }}\n            onClick={onAdd}\n            data-testid=\"add-button\"\n          >\n            Add\n          </Button>\n        )}\n      </View>\n    </View>\n  );\n}\n\nfunction TransactionTableInner({\n  tableNavigator,\n  tableRef,\n  listContainerRef,\n  dateFormat = 'MM/dd/yyyy',\n  newNavigator,\n  renderEmpty,\n  onScroll,\n  ...props\n}) {\n  const containerRef = createRef();\n  const isAddingPrev = usePrevious(props.isAdding);\n  const [scrollWidth, setScrollWidth] = useState(0);\n\n  function saveScrollWidth(parent, child) {\n    const width = parent > 0 && child > 0 && parent - child;\n\n    setScrollWidth(!width ? 0 : width);\n  }\n\n  const onNavigateToTransferAccount = useCallback(\n    accountId => {\n      props.onCloseAddTransaction();\n      props.onNavigateToTransferAccount(accountId);\n    },\n    [props.onCloseAddTransaction, props.onNavigateToTransferAccount],\n  );\n\n  const onNavigateToSchedule = useCallback(\n    scheduleId => {\n      props.onCloseAddTransaction();\n      props.onNavigateToSchedule(scheduleId);\n    },\n    [props.onCloseAddTransaction, props.onNavigateToSchedule],\n  );\n\n  const onNotesTagClick = useCallback(\n    noteTag => {\n      props.onCloseAddTransaction();\n      props.onNotesTagClick(noteTag);\n    },\n    [props.onCloseAddTransaction, props.onNotesTagClick],\n  );\n\n  useEffect(() => {\n    if (!isAddingPrev && props.isAdding) {\n      newNavigator.onEdit('temp', 'date');\n    }\n  }, [isAddingPrev, props.isAdding, newNavigator]);\n\n  const renderRow = ({ item, index, editing }) => {\n    const {\n      transactions,\n      selectedItems,\n      accounts,\n      categoryGroups,\n      payees,\n      showCleared,\n      showAccount,\n      showCategory,\n      showBalances,\n      balances,\n      hideFraction,\n      isNew,\n      isMatched,\n      isExpanded,\n    } = props;\n\n    const trans = item;\n    const selected = selectedItems.has(trans.id);\n\n    const parent = props.transactionMap.get(trans.parent_id);\n    const isChildDeposit = parent && parent.amount > 0;\n    const expanded = isExpanded && isExpanded((parent || trans).id);\n\n    // For backwards compatibility, read the error of the transaction\n    // since in previous versions we stored it there. In the future we\n    // can simplify this to just the parent\n    const error = expanded\n      ? (parent && parent.error) || trans.error\n      : trans.error;\n\n    const hasSplitError =\n      (!expanded || isLastChild(transactions, index)) &&\n      error &&\n      error.type === 'SplitTransactionError';\n\n    const childTransactions = trans.is_parent\n      ? props.transactionsByParent[trans.id]\n      : null;\n    const emptyChildTransactions = props.transactionsByParent[\n      trans.is_parent ? trans.id : trans.parent_id\n    ]?.filter(t => t.amount === 0);\n\n    return (\n      <Transaction\n        allTransactions={props.transactions}\n        editing={editing}\n        transaction={trans}\n        transferAccountsByTransaction={props.transferAccountsByTransaction}\n        subtransactions={childTransactions}\n        showAccount={showAccount}\n        showCategory={showCategory}\n        showBalance={showBalances}\n        showCleared={showCleared}\n        selected={selected}\n        highlighted={false}\n        added={isNew?.(trans.id)}\n        expanded={isExpanded?.(trans.id)}\n        matched={isMatched?.(trans.id)}\n        showZeroInDeposit={isChildDeposit}\n        balance={balances?.[trans.id]?.balance}\n        focusedField={editing && tableNavigator.focusedField}\n        accounts={accounts}\n        categoryGroups={categoryGroups}\n        payees={payees}\n        dateFormat={dateFormat}\n        hideFraction={hideFraction}\n        onEdit={tableNavigator.onEdit}\n        onSave={props.onSave}\n        onDelete={props.onDelete}\n        onSplit={props.onSplit}\n        onManagePayees={props.onManagePayees}\n        onCreatePayee={props.onCreatePayee}\n        onToggleSplit={props.onToggleSplit}\n        onNavigateToTransferAccount={onNavigateToTransferAccount}\n        onNavigateToSchedule={onNavigateToSchedule}\n        onNotesTagClick={onNotesTagClick}\n        splitError={\n          hasSplitError && (\n            <TransactionError\n              error={error}\n              isDeposit={isChildDeposit}\n              onAddSplit={() => props.onAddSplit(trans.id)}\n              onDistributeRemainder={() =>\n                props.onDistributeRemainder(trans.id)\n              }\n              canDistributeRemainder={emptyChildTransactions.length > 0}\n            />\n          )\n        }\n        listContainerRef={listContainerRef}\n      />\n    );\n  };\n\n  return (\n    <View\n      innerRef={containerRef}\n      style={{\n        flex: 1,\n        cursor: 'default',\n        ...props.style,\n      }}\n    >\n      <View>\n        <TransactionHeader\n          hasSelected={props.selectedItems.size > 0}\n          showAccount={props.showAccount}\n          showCategory={props.showCategory}\n          showBalance={props.showBalances}\n          showCleared={props.showCleared}\n          scrollWidth={scrollWidth}\n          onSort={props.onSort}\n          ascDesc={props.ascDesc}\n          field={props.sortField}\n        />\n\n        {props.isAdding && (\n          <View\n            {...newNavigator.getNavigatorProps({\n              onKeyDown: e => props.onCheckNewEnter(e),\n            })}\n          >\n            <NewTransaction\n              transactions={props.newTransactions}\n              transferAccountsByTransaction={\n                props.transferAccountsByTransaction\n              }\n              editingTransaction={newNavigator.editingId}\n              focusedField={newNavigator.focusedField}\n              accounts={props.accounts}\n              categoryGroups={props.categoryGroups}\n              payees={props.payees || []}\n              showAccount={props.showAccount}\n              showCategory={props.showCategory}\n              showBalance={props.showBalances}\n              showCleared={props.showCleared}\n              dateFormat={dateFormat}\n              hideFraction={props.hideFraction}\n              onClose={props.onCloseAddTransaction}\n              onAdd={props.onAddTemporary}\n              onAddSplit={props.onAddSplit}\n              onSplit={props.onSplit}\n              onEdit={newNavigator.onEdit}\n              onSave={props.onSave}\n              onDelete={props.onDelete}\n              onManagePayees={props.onManagePayees}\n              onCreatePayee={props.onCreatePayee}\n              onNavigateToTransferAccount={onNavigateToTransferAccount}\n              onNavigateToSchedule={onNavigateToSchedule}\n              onNotesTagClick={onNotesTagClick}\n              onDistributeRemainder={props.onDistributeRemainder}\n              balance={\n                props.transactions?.length > 0\n                  ? props.balances?.[props.transactions[0]?.id]?.balance\n                  : 0\n              }\n            />\n          </View>\n        )}\n      </View>\n      {/*// * On Windows, makes the scrollbar always appear\n         //   the full height of the container ??? */}\n\n      <View\n        style={{ flex: 1, overflow: 'hidden' }}\n        data-testid=\"transaction-table\"\n      >\n        <Table\n          navigator={tableNavigator}\n          ref={tableRef}\n          listContainerRef={listContainerRef}\n          items={props.transactions}\n          renderItem={renderRow}\n          renderEmpty={renderEmpty}\n          loadMore={props.loadMoreTransactions}\n          isSelected={id => props.selectedItems.has(id)}\n          onKeyDown={e => props.onCheckEnter(e)}\n          onScroll={onScroll}\n          saveScrollWidth={saveScrollWidth}\n        />\n\n        {props.isAdding && (\n          <div\n            key=\"shadow\"\n            style={{\n              position: 'absolute',\n              top: -20,\n              left: 0,\n              right: 0,\n              height: 20,\n              backgroundColor: theme.errorText,\n              boxShadow: '0 0 6px rgba(0, 0, 0, .20)',\n            }}\n          />\n        )}\n      </View>\n    </View>\n  );\n}\n\nexport const TransactionTable = forwardRef((props, ref) => {\n  const [newTransactions, setNewTransactions] = useState(null);\n  const [prevIsAdding, setPrevIsAdding] = useState(false);\n  const splitsExpanded = useSplitsExpanded();\n  const prevSplitsExpanded = useRef(null);\n\n  const tableRef = useRef(null);\n  const listContainerRef = useRef(null);\n  const mergedRef = useMergedRefs(tableRef, ref);\n\n  const transactionsWithExpandedSplits = useMemo(() => {\n    let result;\n    if (splitsExpanded.state.transitionId != null) {\n      const index = props.transactions.findIndex(\n        t => t.id === splitsExpanded.state.transitionId,\n      );\n      result = props.transactions.filter((t, idx) => {\n        if (t.parent_id) {\n          if (idx >= index) {\n            return splitsExpanded.expanded(t.parent_id);\n          } else if (prevSplitsExpanded.current) {\n            return prevSplitsExpanded.current.expanded(t.parent_id);\n          }\n        }\n        return true;\n      });\n    } else {\n      if (\n        prevSplitsExpanded.current &&\n        prevSplitsExpanded.current.state.transitionId != null\n      ) {\n        tableRef.current.anchor();\n        tableRef.current.setRowAnimation(false);\n      }\n      prevSplitsExpanded.current = splitsExpanded;\n\n      result = props.transactions.filter(t => {\n        if (t.parent_id) {\n          return splitsExpanded.expanded(t.parent_id);\n        }\n        return true;\n      });\n    }\n\n    prevSplitsExpanded.current = splitsExpanded;\n    return result;\n  }, [props.transactions, splitsExpanded]);\n  const transactionMap = useMemo(() => {\n    return new Map(\n      transactionsWithExpandedSplits.map(trans => [trans.id, trans]),\n    );\n  }, [transactionsWithExpandedSplits]);\n  const transactionsByParent = useMemo(() => {\n    return props.transactions.reduce((acc, trans) => {\n      if (trans.is_child) {\n        acc[trans.parent_id] = [...(acc[trans.parent_id] ?? []), trans];\n      }\n      return acc;\n    }, {});\n  }, [props.transactions]);\n\n  const transferAccountsByTransaction = useMemo(() => {\n    if (!props.accounts) {\n      return {};\n    }\n    const accounts = getAccountsById(props.accounts);\n    const payees = getPayeesById(props.payees);\n\n    return Object.fromEntries(\n      props.transactions.map(t => {\n        if (!props.accounts) {\n          return [t.id, null];\n        }\n\n        const payee = t.payee && payees[t.payee];\n        let transferAccount;\n        if (t._inverse) {\n          transferAccount = t.account && accounts[t.account];\n        } else {\n          transferAccount =\n            payee?.transfer_acct && accounts[payee.transfer_acct];\n        }\n        return [t.id, transferAccount || null];\n      }),\n    );\n  }, [props.transactions, props.payees, props.accounts]);\n\n  useEffect(() => {\n    // If it's anchored that means we've also disabled animations. To\n    // reduce the chance for side effect collision, only do this if\n    // we've actually anchored it\n    if (tableRef.current.isAnchored()) {\n      tableRef.current.unanchor();\n      tableRef.current.setRowAnimation(true);\n    }\n  }, [prevSplitsExpanded.current]);\n\n  const newNavigator = useTableNavigator(newTransactions, getFields);\n  const tableNavigator = useTableNavigator(\n    transactionsWithExpandedSplits,\n    getFields,\n  );\n  const shouldAdd = useRef(false);\n  const latestState = useRef({ newTransactions, newNavigator, tableNavigator });\n  const savePending = useRef(false);\n  const afterSaveFunc = useRef(false);\n  const [_, forceRerender] = useState({});\n  const selectedItems = useSelectedItems();\n\n  useLayoutEffect(() => {\n    latestState.current = {\n      newTransactions,\n      newNavigator,\n      tableNavigator,\n      transactions: props.transactions,\n    };\n  });\n\n  // Derive new transactions from the `isAdding` prop\n  if (prevIsAdding !== props.isAdding) {\n    if (!prevIsAdding && props.isAdding) {\n      setNewTransactions(\n        makeTemporaryTransactions(\n          props.currentAccountId,\n          props.currentCategoryId,\n        ),\n      );\n    }\n    setPrevIsAdding(props.isAdding);\n  }\n\n  useEffect(() => {\n    if (shouldAdd.current) {\n      if (newTransactions[0].account == null) {\n        props.addNotification({\n          type: 'error',\n          message: 'Account is a required field',\n        });\n        newNavigator.onEdit('temp', 'account');\n      } else {\n        const transactions = latestState.current.newTransactions;\n        const lastDate = transactions.length > 0 ? transactions[0].date : null;\n        setNewTransactions(\n          makeTemporaryTransactions(\n            props.currentAccountId,\n            props.currentCategoryId,\n            lastDate,\n          ),\n        );\n        newNavigator.onEdit('temp', 'date');\n        props.onAdd(transactions);\n      }\n      shouldAdd.current = false;\n    }\n  });\n\n  useEffect(() => {\n    if (savePending.current && afterSaveFunc.current) {\n      afterSaveFunc.current(props);\n      afterSaveFunc.current = null;\n    }\n\n    savePending.current = false;\n  }, [newTransactions, props.transactions]);\n\n  function getFields(item) {\n    let fields = [\n      'select',\n      'date',\n      'account',\n      'payee',\n      'notes',\n      'category',\n      'debit',\n      'credit',\n      'cleared',\n    ];\n\n    fields = item.is_child\n      ? ['select', 'payee', 'notes', 'category', 'debit', 'credit']\n      : fields.filter(\n          f =>\n            (props.showAccount || f !== 'account') &&\n            (props.showCategory || f !== 'category'),\n        );\n\n    if (isPreviewId(item.id)) {\n      fields = ['select'];\n    }\n    if (isTemporaryId(item.id)) {\n      // You can't focus the select/delete button of temporary\n      // transactions\n      fields = fields.slice(1);\n    }\n\n    return fields;\n  }\n\n  function afterSave(func) {\n    if (savePending.current) {\n      afterSaveFunc.current = func;\n    } else {\n      func(props);\n    }\n  }\n\n  function onCheckNewEnter(e) {\n    if (e.key === 'Enter') {\n      if (e.metaKey) {\n        e.stopPropagation();\n        onAddTemporary();\n      } else if (!e.shiftKey) {\n        function getLastTransaction(state) {\n          const { newTransactions } = state.current;\n          return newTransactions[newTransactions.length - 1];\n        }\n\n        // Right now, the table navigator does some funky stuff with\n        // focus, so we want to stop it from handling this event. We\n        // still want enter to move up/down normally, so we only stop\n        // it if we are on the last transaction (where we are about to\n        // do some logic). I don't like this.\n        if (newNavigator.editingId === getLastTransaction(latestState).id) {\n          e.stopPropagation();\n        }\n\n        afterSave(() => {\n          const lastTransaction = getLastTransaction(latestState);\n          const isSplit =\n            lastTransaction.parent_id || lastTransaction.is_parent;\n\n          if (\n            latestState.current.newTransactions[0].error &&\n            newNavigator.editingId === lastTransaction.id\n          ) {\n            // add split\n            onAddSplit(lastTransaction.id);\n          } else if (\n            newNavigator.editingId === lastTransaction.id &&\n            (!isSplit || !lastTransaction.error)\n          ) {\n            onAddTemporary();\n          }\n        });\n      }\n    }\n  }\n\n  function onCheckEnter(e) {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      const { editingId: id, focusedField } = tableNavigator;\n\n      afterSave(() => {\n        const transactions = latestState.current.transactions;\n        const idx = transactions.findIndex(t => t.id === id);\n        const parent = transactions.find(\n          t => t.id === transactions[idx]?.parent_id,\n        );\n\n        if (\n          isLastChild(transactions, idx) &&\n          parent &&\n          parent.error &&\n          focusedField !== 'select'\n        ) {\n          e.stopPropagation();\n          onAddSplit(id);\n        }\n      });\n    }\n  }\n\n  const onAddTemporary = useCallback(() => {\n    shouldAdd.current = true;\n    // A little hacky - this forces a rerender which will cause the\n    // effect we want to run. We have to wait for all updates to be\n    // committed (the input could still be saving a value).\n    forceRerender({});\n  }, [props.onAdd, newNavigator.onEdit]);\n\n  const onSave = useCallback(\n    async (transaction, subtransactions = null, updatedFieldName = null) => {\n      savePending.current = true;\n\n      let groupedTransaction = subtransactions\n        ? groupTransaction([transaction, ...subtransactions])\n        : transaction;\n\n      if (isTemporaryId(transaction.id)) {\n        if (props.onApplyRules) {\n          groupedTransaction = await props.onApplyRules(\n            groupedTransaction,\n            updatedFieldName,\n          );\n        }\n\n        const newTrans = latestState.current.newTransactions;\n        // Future refactor: we shouldn't need to iterate through the entire\n        // transaction list to ungroup, just the new transactions.\n        setNewTransactions(\n          ungroupTransactions(\n            updateTransaction(newTrans, groupedTransaction).data,\n          ),\n        );\n      } else {\n        props.onSave(groupedTransaction);\n      }\n    },\n    [props.onSave],\n  );\n\n  const onDelete = useCallback(id => {\n    const temporary = isTemporaryId(id);\n\n    if (temporary) {\n      const newTrans = latestState.current.newTransactions;\n\n      if (id === newTrans[0].id) {\n        // You can never delete the parent new transaction\n        return;\n      }\n\n      setNewTransactions(deleteTransaction(newTrans, id).data);\n    }\n  }, []);\n\n  const onSplit = useMemo(() => {\n    return id => {\n      if (isTemporaryId(id)) {\n        const { newNavigator } = latestState.current;\n        const newTrans = latestState.current.newTransactions;\n        const { data, diff } = splitTransaction(newTrans, id);\n        setNewTransactions(data);\n\n        // Jump next to \"debit\" field if it is empty\n        // Otherwise jump to the same field as before, but downwards\n        // to the added split transaction\n        if (newTrans[0].amount === null) {\n          newNavigator.onEdit(newTrans[0].id, 'debit');\n        } else {\n          newNavigator.onEdit(\n            diff.added[0].id,\n            latestState.current.newNavigator.focusedField,\n          );\n        }\n      } else {\n        const trans = latestState.current.transactions.find(t => t.id === id);\n        const newId = props.onSplit(id);\n\n        splitsExpanded.dispatch({ type: 'open-split', id: trans.id });\n\n        const { tableNavigator } = latestState.current;\n        if (trans.amount === null) {\n          tableNavigator.onEdit(trans.id, 'debit');\n        } else {\n          tableNavigator.onEdit(newId, tableNavigator.focusedField);\n        }\n      }\n    };\n  }, [props.onSplit, splitsExpanded.dispatch]);\n\n  const onAddSplit = useCallback(\n    id => {\n      if (isTemporaryId(id)) {\n        const newTrans = latestState.current.newTransactions;\n        const { data, diff } = addSplitTransaction(newTrans, id);\n        setNewTransactions(data);\n        newNavigator.onEdit(\n          diff.added[0].id,\n          latestState.current.newNavigator.focusedField,\n        );\n      } else {\n        const newId = props.onAddSplit(id);\n        tableNavigator.onEdit(\n          newId,\n          latestState.current.tableNavigator.focusedField,\n        );\n      }\n    },\n    [props.onAddSplit],\n  );\n\n  const onDistributeRemainder = useCallback(\n    async id => {\n      const { transactions, tableNavigator, newTransactions } =\n        latestState.current;\n\n      const targetTransactions = isTemporaryId(id)\n        ? newTransactions\n        : transactions;\n      const transaction = targetTransactions.find(t => t.id === id);\n\n      const parentTransaction = transaction.is_parent\n        ? transaction\n        : targetTransactions.find(t => t.id === transaction.parent_id);\n\n      const siblingTransactions = targetTransactions.filter(\n        t =>\n          t.parent_id ===\n          (transaction.is_parent ? transaction.id : transaction.parent_id),\n      );\n\n      const emptyTransactions = siblingTransactions.filter(t => t.amount === 0);\n\n      const remainingAmount =\n        parentTransaction.amount -\n        siblingTransactions.reduce((acc, t) => acc + t.amount, 0);\n\n      const amountPerTransaction = Math.floor(\n        remainingAmount / emptyTransactions.length,\n      );\n      let remainingCents =\n        remainingAmount - amountPerTransaction * emptyTransactions.length;\n\n      const amounts = new Array(emptyTransactions.length).fill(\n        amountPerTransaction,\n      );\n\n      for (const amountIndex in amounts) {\n        if (remainingCents === 0) break;\n\n        amounts[amountIndex] += 1;\n        remainingCents--;\n      }\n\n      if (isTemporaryId(id)) {\n        newNavigator.onEdit(null);\n      } else {\n        tableNavigator.onEdit(null);\n      }\n\n      for (const transactionIndex in emptyTransactions) {\n        await onSave({\n          ...emptyTransactions[transactionIndex],\n          amount: amounts[transactionIndex],\n        });\n      }\n    },\n    [latestState],\n  );\n\n  function onCloseAddTransaction() {\n    setNewTransactions(\n      makeTemporaryTransactions(\n        props.currentAccountId,\n        props.currentCategoryId,\n      ),\n    );\n    props.onCloseAddTransaction();\n  }\n\n  const onToggleSplit = useCallback(\n    id => splitsExpanded.dispatch({ type: 'toggle-split', id }),\n    [splitsExpanded.dispatch],\n  );\n\n  return (\n    <TransactionTableInner\n      tableRef={mergedRef}\n      listContainerRef={listContainerRef}\n      {...props}\n      transactions={transactionsWithExpandedSplits}\n      transactionMap={transactionMap}\n      transactionsByParent={transactionsByParent}\n      transferAccountsByTransaction={transferAccountsByTransaction}\n      selectedItems={selectedItems}\n      isExpanded={splitsExpanded.expanded}\n      onSave={onSave}\n      onDelete={onDelete}\n      onSplit={onSplit}\n      onCheckNewEnter={onCheckNewEnter}\n      onCheckEnter={onCheckEnter}\n      onAddTemporary={onAddTemporary}\n      onAddSplit={onAddSplit}\n      onDistributeRemainder={onDistributeRemainder}\n      onCloseAddTransaction={onCloseAddTransaction}\n      onToggleSplit={onToggleSplit}\n      newTransactions={newTransactions}\n      tableNavigator={tableNavigator}\n      newNavigator={newNavigator}\n    />\n  );\n});\n\nTransactionTable.displayName = 'TransactionTable';\n\nfunction notesTagFormatter(notes, onNotesTagClick) {\n  const words = notes.split(' ');\n  return (\n    <>\n      {words.map((word, i, arr) => {\n        const separator = arr.length - 1 === i ? '' : ' ';\n        if (word.includes('#') && word.length > 1) {\n          // Treat tags in a single word as separate tags.\n          // #tag1#tag2 => (#tag1)(#tag2)\n          // not-a-tag#tag2#tag3 => not-a-tag(#tag2)(#tag3)\n          return word.split('#').map((tag, ti) => {\n            if (ti === 0) {\n              return tag;\n            }\n\n            if (!tag) {\n              return '#';\n            }\n\n            const validTag = `#${tag}`;\n            return (\n              <span key={`${validTag}${ti}`}>\n                <Button\n                  type=\"bare\"\n                  key={i}\n                  style={{\n                    display: 'inline-flex',\n                    padding: '3px 7px',\n                    borderRadius: 16,\n                    userSelect: 'none',\n                    backgroundColor: theme.noteTagBackground,\n                    color: theme.noteTagText,\n                    cursor: 'pointer',\n                  }}\n                  hoveredStyle={{\n                    backgroundColor: theme.noteTagBackgroundHover,\n                    color: theme.noteTagText,\n                  }}\n                  onClick={e => {\n                    e.stopPropagation();\n                    onNotesTagClick?.(validTag);\n                  }}\n                >\n                  {validTag}\n                </Button>\n                {separator}\n              </span>\n            );\n          });\n        }\n        return `${word}${separator}`;\n      })}\n    </>\n  );\n}\n","import React, { useRef, useCallback, useLayoutEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport escapeRegExp from 'lodash/escapeRegExp';\n\nimport { pushModal } from 'loot-core/client/actions';\nimport { send } from 'loot-core/src/platform/client/fetch';\nimport {\n  splitTransaction,\n  updateTransaction,\n  addSplitTransaction,\n  realizeTempTransactions,\n  applyTransactionDiff,\n} from 'loot-core/src/shared/transactions';\nimport { getChangedValues, applyChanges } from 'loot-core/src/shared/util';\n\nimport { useNavigate } from '../../hooks/useNavigate';\nimport { theme } from '../../style';\n\nimport { TransactionTable } from './TransactionsTable';\n\n// When data changes, there are two ways to update the UI:\n//\n// * Optimistic updates: we apply the needed updates to local data\n//   and rerender immediately, and send off the changes to the\n//   server. Currently, it assumes the server request is successful.\n//   If it fails the user will see a generic error which isn't\n//   great, but since the server is local a failure is very\n//   unlikely. Still, we should notify errors better.\n//\n// * A full refetch and rerender: this is needed when applying\n//   updates locally is too complex. Usually this happens when\n//   changing a field that data is sorted on: we're not going\n//   to resort the data in memory, we want to rely on the database\n//   for that. So we need to do a full refresh.\n//\n// When writing updates, it's up to you to decide which one to do.\n// Optimistic updates feel snappy, but they might show data\n// differently than a full refresh. It's up to you to decide which\n// one to use when doing updates.\n\nasync function saveDiff(diff) {\n  const remoteUpdates = await send('transactions-batch-update', {\n    ...diff,\n    learnCategories: true,\n  });\n  if (remoteUpdates.length > 0) {\n    return { updates: remoteUpdates };\n  }\n  return {};\n}\n\nasync function saveDiffAndApply(diff, changes, onChange) {\n  const remoteDiff = await saveDiff(diff);\n  onChange(\n    applyTransactionDiff(changes.newTransaction, remoteDiff),\n    applyChanges(remoteDiff, changes.data),\n  );\n}\n\nexport function TransactionList({\n  tableRef,\n  transactions,\n  allTransactions,\n  loadMoreTransactions,\n  account,\n  accounts,\n  category,\n  categoryGroups,\n  payees,\n  balances,\n  showBalances,\n  showCleared,\n  showAccount,\n  headerContent,\n  isAdding,\n  isNew,\n  isMatched,\n  isFiltered,\n  dateFormat,\n  hideFraction,\n  addNotification,\n  renderEmpty,\n  onSort,\n  sortField,\n  ascDesc,\n  onChange,\n  onRefetch,\n  onCloseAddTransaction,\n  onCreatePayee,\n  onApplyFilter,\n}) {\n  const dispatch = useDispatch();\n  const transactionsLatest = useRef();\n  const navigate = useNavigate();\n\n  useLayoutEffect(() => {\n    transactionsLatest.current = transactions;\n  }, [transactions]);\n\n  const onAdd = useCallback(async newTransactions => {\n    newTransactions = realizeTempTransactions(newTransactions);\n\n    await saveDiff({ added: newTransactions });\n    onRefetch();\n  }, []);\n\n  const onSave = useCallback(async transaction => {\n    const changes = updateTransaction(transactionsLatest.current, transaction);\n\n    if (changes.diff.updated.length > 0) {\n      const dateChanged = !!changes.diff.updated[0].date;\n      if (dateChanged) {\n        // Make sure it stays at the top of the list of transactions\n        // for that date\n        changes.diff.updated[0].sort_order = Date.now();\n        await saveDiff(changes.diff);\n        onRefetch();\n      } else {\n        onChange(changes.newTransaction, changes.data);\n        saveDiffAndApply(changes.diff, changes, onChange);\n      }\n    }\n  }, []);\n\n  const onAddSplit = useCallback(id => {\n    const changes = addSplitTransaction(transactionsLatest.current, id);\n    onChange(changes.newTransaction, changes.data);\n    saveDiffAndApply(changes.diff, changes, onChange);\n    return changes.diff.added[0].id;\n  }, []);\n\n  const onSplit = useCallback(id => {\n    const changes = splitTransaction(transactionsLatest.current, id);\n    onChange(changes.newTransaction, changes.data);\n    saveDiffAndApply(changes.diff, changes, onChange);\n    return changes.diff.added[0].id;\n  }, []);\n\n  const onApplyRules = useCallback(\n    async (transaction, updatedFieldName = null) => {\n      const afterRules = await send('rules-run', { transaction });\n      const diff = getChangedValues(transaction, afterRules);\n\n      const newTransaction = { ...transaction };\n      if (diff) {\n        Object.keys(diff).forEach(field => {\n          if (\n            newTransaction[field] == null ||\n            newTransaction[field] === '' ||\n            newTransaction[field] === 0 ||\n            newTransaction[field] === false\n          ) {\n            newTransaction[field] = diff[field];\n          }\n        });\n\n        // When a rule updates a parent transaction, overwrite all changes to the current field in subtransactions.\n        if (\n          transaction.is_parent &&\n          diff.subtransactions !== undefined &&\n          updatedFieldName !== null\n        ) {\n          newTransaction.subtransactions = diff.subtransactions.map(\n            (st, idx) => ({\n              ...(newTransaction.subtransactions[idx] || st),\n              ...(st[updatedFieldName] != null && {\n                [updatedFieldName]: st[updatedFieldName],\n              }),\n            }),\n          );\n        }\n      }\n      return newTransaction;\n    },\n    [],\n  );\n\n  const onManagePayees = useCallback(id => {\n    navigate('/payees', { state: { selectedPayee: id } });\n  });\n\n  const onNavigateToTransferAccount = useCallback(accountId => {\n    navigate(`/accounts/${accountId}`);\n  });\n\n  const onNavigateToSchedule = useCallback(scheduleId => {\n    dispatch(pushModal('schedule-edit', { id: scheduleId }));\n  });\n\n  const onNotesTagClick = useCallback(tag => {\n    onApplyFilter({\n      field: 'notes',\n      op: 'matches',\n      value: `(^|\\\\s|\\\\w|#)${escapeRegExp(tag)}($|\\\\s|#)`,\n      type: 'string',\n    });\n  });\n\n  return (\n    <TransactionTable\n      ref={tableRef}\n      transactions={allTransactions}\n      loadMoreTransactions={loadMoreTransactions}\n      accounts={accounts}\n      categoryGroups={categoryGroups}\n      payees={payees}\n      showBalances={showBalances}\n      balances={balances}\n      showCleared={showCleared}\n      showAccount={showAccount}\n      showCategory={true}\n      currentAccountId={account && account.id}\n      currentCategoryId={category && category.id}\n      isAdding={isAdding}\n      isNew={isNew}\n      isMatched={isMatched}\n      isFiltered={isFiltered}\n      dateFormat={dateFormat}\n      hideFraction={hideFraction}\n      addNotification={addNotification}\n      headerContent={headerContent}\n      renderEmpty={renderEmpty}\n      onSave={onSave}\n      onApplyRules={onApplyRules}\n      onSplit={onSplit}\n      onCloseAddTransaction={onCloseAddTransaction}\n      onAdd={onAdd}\n      onAddSplit={onAddSplit}\n      onManagePayees={onManagePayees}\n      onCreatePayee={onCreatePayee}\n      style={{ backgroundColor: theme.tableBackground }}\n      onNavigateToTransferAccount={onNavigateToTransferAccount}\n      onNavigateToSchedule={onNavigateToSchedule}\n      onNotesTagClick={onNotesTagClick}\n      onSort={onSort}\n      sortField={sortField}\n      ascDesc={ascDesc}\n    />\n  );\n}\n","import React from 'react';\n\nimport { Menu } from '../common/Menu';\n\nimport { type SavedFilter } from './SavedFilterMenuButton';\n\nexport function FilterMenu({\n  filterId,\n  onFilterMenuSelect,\n}: {\n  filterId: SavedFilter;\n  onFilterMenuSelect: (item: string) => void;\n}) {\n  return (\n    <Menu\n      onMenuSelect={item => {\n        onFilterMenuSelect(item);\n      }}\n      items={\n        !filterId.id\n          ? [\n              { name: 'save-filter', text: 'Save new filter' },\n              { name: 'clear-filter', text: 'Clear all conditions' },\n            ]\n          : filterId.id !== null && filterId.status === 'saved'\n            ? [\n                { name: 'rename-filter', text: 'Rename' },\n                { name: 'delete-filter', text: 'Delete' },\n                Menu.line,\n                {\n                  name: 'save-filter',\n                  text: 'Save new filter',\n                  disabled: true,\n                },\n                { name: 'clear-filter', text: 'Clear all conditions' },\n              ]\n            : [\n                { name: 'rename-filter', text: 'Rename' },\n                { name: 'update-filter', text: 'Update condtions' },\n                { name: 'reload-filter', text: 'Revert changes' },\n                { name: 'delete-filter', text: 'Delete' },\n                Menu.line,\n                { name: 'save-filter', text: 'Save new filter' },\n                { name: 'clear-filter', text: 'Clear all conditions' },\n              ]\n      }\n    />\n  );\n}\n","import React, { useRef, useEffect } from 'react';\n\nimport { theme } from '../../style';\nimport { Button } from '../common/Button';\nimport { Input } from '../common/Input';\nimport { Stack } from '../common/Stack';\nimport { Text } from '../common/Text';\nimport { FormField, FormLabel } from '../forms';\n\nexport function NameFilter({\n  menuItem,\n  name,\n  setName,\n  adding,\n  onAddUpdate,\n  err,\n}: {\n  menuItem: string;\n  name: string;\n  setName: (item: string) => void;\n  adding: boolean;\n  onAddUpdate: () => void;\n  err: string | null;\n}) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  return (\n    <>\n      {menuItem !== 'update-filter' && (\n        <form>\n          <Stack\n            direction=\"row\"\n            justify=\"flex-end\"\n            align=\"center\"\n            style={{ padding: 10 }}\n          >\n            <FormField style={{ flex: 1 }}>\n              <FormLabel\n                title=\"Filter Name\"\n                htmlFor=\"name-field\"\n                style={{ userSelect: 'none' }}\n              />\n              <Input\n                id=\"name-field\"\n                inputRef={inputRef}\n                defaultValue={name || ''}\n                onChangeValue={setName}\n              />\n            </FormField>\n            <Button\n              type=\"primary\"\n              style={{ marginTop: 18 }}\n              onClick={e => {\n                e.preventDefault();\n                onAddUpdate();\n              }}\n            >\n              {adding ? 'Add' : 'Update'}\n            </Button>\n          </Stack>\n        </form>\n      )}\n      {err && (\n        <Stack direction=\"row\" align=\"center\" style={{ padding: 10 }}>\n          <Text style={{ color: theme.errorText }}>{err}</Text>\n        </Stack>\n      )}\n    </>\n  );\n}\n","import React, { useRef, useState } from 'react';\n\nimport { send, sendCatch } from 'loot-core/src/platform/client/fetch';\nimport { type TransactionFilterEntity } from 'loot-core/types/models';\nimport { type RuleConditionEntity } from 'loot-core/types/models/rule';\n\nimport { SvgExpandArrow } from '../../icons/v0';\nimport { Button } from '../common/Button';\nimport { Popover } from '../common/Popover';\nimport { Text } from '../common/Text';\nimport { View } from '../common/View';\n\nimport { FilterMenu } from './FilterMenu';\nimport { NameFilter } from './NameFilter';\n\nexport type SavedFilter = {\n  conditions?: RuleConditionEntity[];\n  conditionsOp?: string;\n  id?: string;\n  name: string;\n  status?: string;\n};\n\nexport function SavedFilterMenuButton({\n  conditions,\n  conditionsOp,\n  filterId,\n  onClearFilters,\n  onReloadSavedFilter,\n  savedFilters,\n}: {\n  conditions: RuleConditionEntity[];\n  conditionsOp: string;\n  filterId: SavedFilter;\n  onClearFilters: () => void;\n  onReloadSavedFilter: (savedFilter: SavedFilter, value?: string) => void;\n  savedFilters: TransactionFilterEntity[];\n}) {\n  const [nameOpen, setNameOpen] = useState(false);\n  const [adding, setAdding] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const triggerRef = useRef(null);\n  const [err, setErr] = useState(null);\n  const [menuItem, setMenuItem] = useState('');\n  const [name, setName] = useState(filterId.name);\n  const id = filterId.id;\n  let savedFilter: SavedFilter;\n\n  const onFilterMenuSelect = async (item: string) => {\n    setMenuItem(item);\n    switch (item) {\n      case 'rename-filter':\n        setErr(null);\n        setAdding(false);\n        setMenuOpen(false);\n        setNameOpen(true);\n        break;\n      case 'delete-filter':\n        setMenuOpen(false);\n        await send('filter-delete', id);\n        onClearFilters();\n        break;\n      case 'update-filter':\n        setErr(null);\n        setAdding(false);\n        setMenuOpen(false);\n        savedFilter = {\n          conditions,\n          conditionsOp,\n          id: filterId.id,\n          name: filterId.name,\n          status: 'saved',\n        };\n        const response = await sendCatch('filter-update', {\n          state: savedFilter,\n          filters: [...savedFilters],\n        });\n\n        if (response.error) {\n          setErr(response.error.message);\n          setNameOpen(true);\n          return;\n        }\n\n        onReloadSavedFilter(savedFilter, 'update');\n        break;\n      case 'save-filter':\n        setErr(null);\n        setAdding(true);\n        setMenuOpen(false);\n        setNameOpen(true);\n        break;\n      case 'reload-filter':\n        setMenuOpen(false);\n        savedFilter = {\n          ...savedFilter,\n          status: 'saved',\n        };\n        onReloadSavedFilter(savedFilter, 'reload');\n        break;\n      case 'clear-filter':\n        setMenuOpen(false);\n        onClearFilters();\n        break;\n      default:\n    }\n  };\n\n  async function onAddUpdate() {\n    if (adding) {\n      const newSavedFilter = {\n        conditions,\n        conditionsOp,\n        name,\n        status: 'saved',\n      };\n\n      const response = await sendCatch('filter-create', {\n        state: newSavedFilter,\n        filters: [...savedFilters],\n      });\n\n      if (response.error) {\n        setErr(response.error.message);\n        setNameOpen(true);\n        return;\n      }\n\n      setNameOpen(false);\n      onReloadSavedFilter({\n        ...newSavedFilter,\n        id: response.data,\n      });\n      return;\n    }\n\n    const updatedFilter = {\n      conditions: filterId.conditions,\n      conditionsOp: filterId.conditionsOp,\n      id: filterId.id,\n      name,\n    };\n\n    const response = await sendCatch('filter-update', {\n      state: updatedFilter,\n      filters: [...savedFilters],\n    });\n\n    if (response.error) {\n      setErr(response.error.message);\n      setNameOpen(true);\n      return;\n    }\n\n    setNameOpen(false);\n    onReloadSavedFilter(updatedFilter);\n  }\n\n  return (\n    <View>\n      {conditions.length > 0 && (\n        <Button\n          ref={triggerRef}\n          type=\"bare\"\n          style={{ marginTop: 10 }}\n          onClick={() => {\n            setMenuOpen(true);\n          }}\n        >\n          <Text\n            style={{\n              maxWidth: 150,\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              flexShrink: 0,\n            }}\n          >\n            {!filterId.id ? 'Unsaved filter' : filterId.name}&nbsp;\n          </Text>\n          {filterId.id && filterId.status !== 'saved' && (\n            <Text>(modified)&nbsp;</Text>\n          )}\n          <SvgExpandArrow width={8} height={8} style={{ marginRight: 5 }} />\n        </Button>\n      )}\n\n      <Popover\n        triggerRef={triggerRef}\n        isOpen={menuOpen}\n        onOpenChange={() => setMenuOpen(false)}\n        style={{ width: 200 }}\n      >\n        <FilterMenu\n          filterId={filterId}\n          onFilterMenuSelect={onFilterMenuSelect}\n        />\n      </Popover>\n\n      <Popover\n        triggerRef={triggerRef}\n        isOpen={nameOpen}\n        onOpenChange={() => setNameOpen(false)}\n        style={{ width: 325 }}\n      >\n        <NameFilter\n          menuItem={menuItem}\n          name={name}\n          setName={setName}\n          adding={adding}\n          onAddUpdate={onAddUpdate}\n          err={err}\n        />\n      </Popover>\n    </View>\n  );\n}\n","import React from 'react';\n\nimport { type TransactionFilterEntity } from 'loot-core/types/models';\nimport { type RuleConditionEntity } from 'loot-core/types/models/rule';\n\nimport { Stack } from '../common/Stack';\nimport { View } from '../common/View';\n\nimport { AppliedFilters } from './AppliedFilters';\nimport {\n  type SavedFilter,\n  SavedFilterMenuButton,\n} from './SavedFilterMenuButton';\n\nexport function FiltersStack({\n  conditions,\n  conditionsOp,\n  onUpdateFilter,\n  onDeleteFilter,\n  onClearFilters,\n  onReloadSavedFilter,\n  filterId,\n  savedFilters,\n  onConditionsOpChange,\n}: {\n  conditions: RuleConditionEntity[];\n  conditionsOp: string;\n  onUpdateFilter: (\n    filter: RuleConditionEntity,\n    newFilter: RuleConditionEntity,\n  ) => void;\n  onDeleteFilter: (filter: RuleConditionEntity) => void;\n  onClearFilters: () => void;\n  onReloadSavedFilter: (savedFilter: SavedFilter, value?: string) => void;\n  filterId: SavedFilter;\n  savedFilters: TransactionFilterEntity[];\n  onConditionsOpChange: () => void;\n}) {\n  return (\n    <View>\n      <Stack\n        spacing={2}\n        direction=\"row\"\n        justify=\"flex-start\"\n        align=\"flex-start\"\n      >\n        <AppliedFilters\n          conditions={conditions}\n          conditionsOp={conditionsOp}\n          onConditionsOpChange={onConditionsOpChange}\n          onUpdate={onUpdateFilter}\n          onDelete={onDeleteFilter}\n        />\n        <View style={{ flex: 1 }} />\n        <SavedFilterMenuButton\n          conditions={conditions}\n          conditionsOp={conditionsOp}\n          filterId={filterId}\n          onClearFilters={onClearFilters}\n          onReloadSavedFilter={onReloadSavedFilter}\n          savedFilters={savedFilters}\n        />\n      </Stack>\n    </View>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useDispatch } from 'react-redux';\n\nimport { pushModal } from 'loot-core/client/actions';\nimport { isPreviewId } from 'loot-core/shared/transactions';\nimport { validForTransfer } from 'loot-core/src/client/transfer';\n\nimport { useSelectedItems } from '../../hooks/useSelected';\nimport { Menu } from '../common/Menu';\nimport { SelectedItemsButton } from '../table';\n\nexport function SelectedTransactionsButton({\n  getTransaction,\n  onShow,\n  onDuplicate,\n  onDelete,\n  onEdit,\n  onUnlink,\n  onCreateRule,\n  onSetTransfer,\n  onScheduleAction,\n  showMakeTransfer,\n  onMakeAsSplitTransaction,\n  onMakeAsNonSplitTransactions,\n}) {\n  const dispatch = useDispatch();\n  const selectedItems = useSelectedItems();\n  const selectedIds = useMemo(() => [...selectedItems], [selectedItems]);\n\n  const types = useMemo(() => {\n    const items = selectedIds;\n    return {\n      preview: !!items.find(id => isPreviewId(id)),\n      trans: !!items.find(id => !isPreviewId(id)),\n    };\n  }, [selectedIds]);\n\n  const ambiguousDuplication = useMemo(() => {\n    const transactions = selectedIds.map(id => getTransaction(id));\n\n    return transactions.some(t => t && t.is_child);\n  }, [selectedIds, getTransaction]);\n\n  const linked = useMemo(() => {\n    return (\n      !types.preview &&\n      selectedIds.every(id => {\n        const t = getTransaction(id);\n        return t && t.schedule;\n      })\n    );\n  }, [types.preview, selectedIds, getTransaction]);\n\n  const canBeTransfer = useMemo(() => {\n    // only two selected\n    if (selectedIds.length !== 2) {\n      return false;\n    }\n    const fromTrans = getTransaction(selectedIds[0]);\n    const toTrans = getTransaction(selectedIds[1]);\n\n    // previously selected transactions aren't always present in current transaction list\n    if (!fromTrans || !toTrans) {\n      return false;\n    }\n\n    return validForTransfer(fromTrans, toTrans);\n  }, [selectedIds, getTransaction]);\n\n  const canMakeAsSplitTransaction = useMemo(() => {\n    if (selectedIds.length <= 1 || types.preview) {\n      return false;\n    }\n\n    const transactions = selectedIds.map(id => getTransaction(id));\n    const [firstTransaction] = transactions;\n\n    const areAllSameDateAndAccount = transactions.every(\n      t =>\n        t &&\n        t.date === firstTransaction.date &&\n        t.account === firstTransaction.account,\n    );\n    const areNoSplitTransactions = transactions.every(\n      t => t && !t.is_parent && !t.is_child,\n    );\n    const areNoReconciledTransactions = transactions.every(\n      t => t && !t.reconciled,\n    );\n\n    return (\n      areAllSameDateAndAccount &&\n      areNoSplitTransactions &&\n      areNoReconciledTransactions\n    );\n  }, [selectedIds, types, getTransaction]);\n\n  const canUnsplitTransactions = useMemo(() => {\n    if (selectedIds.length === 0 || types.preview) {\n      return false;\n    }\n\n    const transactions = selectedIds.map(id => getTransaction(id));\n\n    const areNoReconciledTransactions = transactions.every(\n      t => t && !t.reconciled,\n    );\n    const areAllSplitTransactions = transactions.every(\n      t => t && (t.is_parent || t.is_child),\n    );\n    return areNoReconciledTransactions && areAllSplitTransactions;\n  }, [selectedIds, types, getTransaction]);\n\n  const hotKeyOptions = {\n    enabled: types.trans,\n    scopes: ['app'],\n  };\n  useHotkeys('f', () => onShow(selectedIds), hotKeyOptions, [\n    onShow,\n    selectedIds,\n  ]);\n  useHotkeys('d', () => onDelete(selectedIds), hotKeyOptions, [\n    onDelete,\n    selectedIds,\n  ]);\n  useHotkeys('a', () => onEdit('account', selectedIds), hotKeyOptions, [\n    onEdit,\n    selectedIds,\n  ]);\n  useHotkeys('p', () => onEdit('payee', selectedIds), hotKeyOptions, [\n    onEdit,\n    selectedIds,\n  ]);\n  useHotkeys('n', () => onEdit('notes', selectedIds), hotKeyOptions, [\n    onEdit,\n    selectedIds,\n  ]);\n  useHotkeys('c', () => onEdit('category', selectedIds), hotKeyOptions, [\n    onEdit,\n    selectedIds,\n  ]);\n  useHotkeys('l', () => onEdit('cleared', selectedIds), hotKeyOptions, [\n    onEdit,\n    selectedIds,\n  ]);\n\n  return (\n    <SelectedItemsButton\n      name=\"transactions\"\n      items={[\n        ...(!types.trans\n          ? [\n              { name: 'view-schedule', text: 'View schedule' },\n              { name: 'post-transaction', text: 'Post transaction' },\n              { name: 'skip', text: 'Skip scheduled date' },\n            ]\n          : [\n              { name: 'show', text: 'Show', key: 'F' },\n              {\n                name: 'duplicate',\n                text: 'Duplicate',\n                disabled: ambiguousDuplication,\n              },\n              { name: 'delete', text: 'Delete', key: 'D' },\n              ...(linked\n                ? [\n                    {\n                      name: 'view-schedule',\n                      text: 'View schedule',\n                      disabled: selectedIds.length > 1,\n                    },\n                    { name: 'unlink-schedule', text: 'Unlink schedule' },\n                  ]\n                : [\n                    {\n                      name: 'link-schedule',\n                      text: 'Link schedule',\n                    },\n                    {\n                      name: 'create-rule',\n                      text: 'Create rule',\n                    },\n                  ]),\n              ...(showMakeTransfer\n                ? [\n                    {\n                      name: 'set-transfer',\n                      text: 'Make transfer',\n                      disabled: !canBeTransfer,\n                    },\n                  ]\n                : []),\n              ...(canMakeAsSplitTransaction\n                ? [\n                    {\n                      name: 'make-as-split-transaction',\n                      text: 'Make as split transaction',\n                    },\n                  ]\n                : []),\n              ...(canUnsplitTransactions\n                ? [\n                    {\n                      name: 'unsplit-transactions',\n                      text:\n                        'Unsplit transaction' +\n                        (selectedIds.length > 1 ? 's' : ''),\n                    },\n                  ]\n                : []),\n              Menu.line,\n              { type: Menu.label, name: 'Edit field' },\n              { name: 'date', text: 'Date' },\n              { name: 'account', text: 'Account', key: 'A' },\n              { name: 'payee', text: 'Payee', key: 'P' },\n              { name: 'notes', text: 'Notes', key: 'N' },\n              { name: 'category', text: 'Category', key: 'C' },\n              { name: 'amount', text: 'Amount' },\n              { name: 'cleared', text: 'Cleared', key: 'L' },\n            ]),\n      ]}\n      onSelect={name => {\n        switch (name) {\n          case 'show':\n            onShow(selectedIds);\n            break;\n          case 'duplicate':\n            onDuplicate(selectedIds);\n            break;\n          case 'delete':\n            onDelete(selectedIds);\n            break;\n          case 'make-as-split-transaction':\n            onMakeAsSplitTransaction(selectedIds);\n            break;\n          case 'unsplit-transactions':\n            onMakeAsNonSplitTransactions(selectedIds);\n            break;\n          case 'post-transaction':\n          case 'skip':\n            onScheduleAction(name, selectedIds);\n            break;\n          case 'view-schedule':\n            const firstId = selectedIds[0];\n            let scheduleId;\n            if (isPreviewId(firstId)) {\n              const parts = firstId.split('/');\n              scheduleId = parts[1];\n            } else {\n              const trans = getTransaction(firstId);\n              scheduleId = trans && trans.schedule;\n            }\n\n            if (scheduleId) {\n              dispatch(pushModal('schedule-edit', { id: scheduleId }));\n            }\n            break;\n          case 'link-schedule':\n            dispatch(\n              pushModal('schedule-link', {\n                transactionIds: selectedIds,\n                getTransaction,\n              }),\n            );\n            break;\n          case 'unlink-schedule':\n            onUnlink(selectedIds);\n            break;\n          case 'create-rule':\n            onCreateRule(selectedIds);\n            break;\n          case 'set-transfer':\n            onSetTransfer(selectedIds);\n            break;\n          default:\n            onEdit(name, selectedIds);\n        }\n      }}\n    />\n  );\n}\n","import React, { useRef } from 'react';\n\nimport { useHover } from 'usehooks-ts';\n\nimport { isPreviewId } from 'loot-core/shared/transactions';\nimport { useCachedSchedules } from 'loot-core/src/client/data-hooks/schedules';\nimport { q } from 'loot-core/src/shared/query';\nimport { getScheduledAmount } from 'loot-core/src/shared/schedules';\n\nimport { useSelectedItems } from '../../hooks/useSelected';\nimport { SvgArrowButtonRight1 } from '../../icons/v2';\nimport { theme } from '../../style';\nimport { Button } from '../common/Button2';\nimport { Text } from '../common/Text';\nimport { View } from '../common/View';\nimport { PrivacyFilter } from '../PrivacyFilter';\nimport { CellValue } from '../spreadsheet/CellValue';\nimport { useFormat } from '../spreadsheet/useFormat';\nimport { useSheetValue } from '../spreadsheet/useSheetValue';\n\nfunction DetailedBalance({ name, balance, isExactBalance = true }) {\n  const format = useFormat();\n  return (\n    <Text\n      style={{\n        marginLeft: 15,\n        borderRadius: 4,\n        padding: '4px 6px',\n        color: theme.pillText,\n        backgroundColor: theme.pillBackground,\n      }}\n    >\n      {name}{' '}\n      <PrivacyFilter>\n        <Text style={{ fontWeight: 600 }}>\n          {!isExactBalance && '~ '}\n          {format(balance, 'financial')}\n        </Text>\n      </PrivacyFilter>\n    </Text>\n  );\n}\n\nfunction SelectedBalance({ selectedItems, account }) {\n  const name = `selected-balance-${[...selectedItems].join('-')}`;\n\n  const rows = useSheetValue({\n    name,\n    query: q('transactions')\n      .filter({\n        id: { $oneof: [...selectedItems] },\n        parent_id: { $oneof: [...selectedItems] },\n      })\n      .select('id'),\n  });\n  const ids = new Set((rows || []).map(r => r.id));\n\n  const finalIds = [...selectedItems].filter(id => !ids.has(id));\n  let balance = useSheetValue({\n    name: name + '-sum',\n    query: q('transactions')\n      .filter({ id: { $oneof: finalIds } })\n      .options({ splits: 'all' })\n      .calculate({ $sum: '$amount' }),\n  });\n\n  let scheduleBalance = null;\n  const scheduleData = useCachedSchedules();\n  const schedules = scheduleData ? scheduleData.schedules : [];\n  const previewIds = [...selectedItems]\n    .filter(id => isPreviewId(id))\n    .map(id => id.slice(8));\n  let isExactBalance = true;\n\n  for (const s of schedules) {\n    if (previewIds.includes(s.id)) {\n      // If a schedule is `between X and Y` then we calculate the average\n      if (s._amountOp === 'isbetween') {\n        isExactBalance = false;\n      }\n\n      if (!account || account.id === s._account) {\n        scheduleBalance += getScheduledAmount(s._amount);\n      } else {\n        scheduleBalance -= getScheduledAmount(s._amount);\n      }\n    }\n  }\n\n  if (balance == null) {\n    if (scheduleBalance == null) {\n      return null;\n    } else {\n      balance = scheduleBalance;\n    }\n  } else if (scheduleBalance != null) {\n    balance += scheduleBalance;\n  }\n\n  return (\n    <DetailedBalance\n      name=\"Selected balance:\"\n      balance={balance}\n      isExactBalance={isExactBalance}\n    />\n  );\n}\n\nfunction FilteredBalance({ filteredAmount }) {\n  return (\n    <DetailedBalance\n      name=\"Filtered balance:\"\n      balance={filteredAmount || 0}\n      isExactBalance={true}\n    />\n  );\n}\n\nfunction MoreBalances({ balanceQuery }) {\n  const cleared = useSheetValue({\n    name: balanceQuery.name + '-cleared',\n    query: balanceQuery.query.filter({ cleared: true }),\n  });\n  const uncleared = useSheetValue({\n    name: balanceQuery.name + '-uncleared',\n    query: balanceQuery.query.filter({ cleared: false }),\n  });\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      <DetailedBalance name=\"Cleared total:\" balance={cleared} />\n      <DetailedBalance name=\"Uncleared total:\" balance={uncleared} />\n    </View>\n  );\n}\n\nexport function Balances({\n  balanceQuery,\n  showExtraBalances,\n  onToggleExtraBalances,\n  account,\n  isFiltered,\n  filteredAmount,\n}) {\n  const selectedItems = useSelectedItems();\n  const buttonRef = useRef(null);\n  const isButtonHovered = useHover(buttonRef);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: -5,\n        marginLeft: -5,\n      }}\n    >\n      <Button\n        ref={buttonRef}\n        data-testid=\"account-balance\"\n        variant=\"bare\"\n        onPress={onToggleExtraBalances}\n        style={{\n          paddingTop: 1,\n          paddingBottom: 1,\n        }}\n      >\n        <CellValue\n          binding={{ ...balanceQuery, value: 0 }}\n          type=\"financial\"\n          style={{ fontSize: 22, fontWeight: 400 }}\n          getStyle={value => ({\n            color:\n              value < 0\n                ? theme.errorText\n                : value > 0\n                  ? theme.noticeTextLight\n                  : theme.pageTextSubdued,\n          })}\n          privacyFilter={{\n            blurIntensity: 5,\n          }}\n        />\n\n        <SvgArrowButtonRight1\n          style={{\n            width: 10,\n            height: 10,\n            marginLeft: 10,\n            color: theme.pillText,\n            transform: showExtraBalances ? 'rotateZ(180deg)' : 'rotateZ(0)',\n            opacity:\n              isButtonHovered || selectedItems.size > 0 || showExtraBalances\n                ? 1\n                : 0,\n          }}\n        />\n      </Button>\n      {showExtraBalances && <MoreBalances balanceQuery={balanceQuery} />}\n\n      {selectedItems.size > 0 && (\n        <SelectedBalance selectedItems={selectedItems} account={account} />\n      )}\n      {isFiltered && <FilteredBalance filteredAmount={filteredAmount} />}\n    </View>\n  );\n}\n","import React, { useState } from 'react';\n\nimport * as queries from 'loot-core/src/client/queries';\nimport { currencyToInteger } from 'loot-core/src/shared/util';\n\nimport { SvgCheckCircle1 } from '../../icons/v2';\nimport { styles, theme } from '../../style';\nimport { Button } from '../common/Button2';\nimport { InitialFocus } from '../common/InitialFocus';\nimport { Input } from '../common/Input';\nimport { Text } from '../common/Text';\nimport { View } from '../common/View';\nimport { useFormat } from '../spreadsheet/useFormat';\nimport { useSheetValue } from '../spreadsheet/useSheetValue';\n\nexport function ReconcilingMessage({\n  balanceQuery,\n  targetBalance,\n  onDone,\n  onCreateTransaction,\n}) {\n  const cleared = useSheetValue({\n    name: balanceQuery.name + '-cleared',\n    value: 0,\n    query: balanceQuery.query.filter({ cleared: true }),\n  });\n  const format = useFormat();\n  const targetDiff = targetBalance - cleared;\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignSelf: 'center',\n        backgroundColor: theme.tableBackground,\n        ...styles.shadow,\n        borderRadius: 4,\n        marginTop: 5,\n        marginBottom: 15,\n        padding: 10,\n      }}\n    >\n      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n        {targetDiff === 0 ? (\n          <View\n            style={{\n              color: theme.noticeTextLight,\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <SvgCheckCircle1\n              style={{\n                width: 13,\n                height: 13,\n                color: 'inherit',\n                marginRight: 3,\n              }}\n            />\n            All reconciled!\n          </View>\n        ) : (\n          <View style={{ color: theme.tableText }}>\n            <Text style={{ fontStyle: 'italic', textAlign: 'center' }}>\n              Your cleared balance{' '}\n              <strong>{format(cleared, 'financial')}</strong> needs{' '}\n              <strong>\n                {(targetDiff > 0 ? '+' : '') + format(targetDiff, 'financial')}\n              </strong>{' '}\n              to match\n              <br /> your bank’s balance of{' '}\n              <Text style={{ fontWeight: 700 }}>\n                {format(targetBalance, 'financial')}\n              </Text>\n            </Text>\n          </View>\n        )}\n        <View style={{ marginLeft: 15 }}>\n          <Button variant=\"primary\" onPress={onDone}>\n            Done Reconciling\n          </Button>\n        </View>\n        {targetDiff !== 0 && (\n          <View style={{ marginLeft: 15 }}>\n            <Button onPress={() => onCreateTransaction(targetDiff)}>\n              Create Reconciliation Transaction\n            </Button>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n}\n\nexport function ReconcileMenu({ account, onReconcile, onClose }) {\n  const balanceQuery = queries.accountBalance(account);\n  const clearedBalance = useSheetValue({\n    name: balanceQuery.name + '-cleared',\n    value: null,\n    query: balanceQuery.query.filter({ cleared: true }),\n  });\n  const format = useFormat();\n  const [inputValue, setInputValue] = useState(null);\n  const [inputFocused, setInputFocused] = useState(false);\n\n  function onSubmit() {\n    if (inputValue === '') {\n      setInputFocused(true);\n      return;\n    }\n\n    const amount =\n      inputValue != null ? currencyToInteger(inputValue) : clearedBalance;\n\n    onReconcile(amount);\n    onClose();\n  }\n\n  return (\n    <View style={{ padding: '5px 8px' }}>\n      <Text>\n        Enter the current balance of your bank account that you want to\n        reconcile with:\n      </Text>\n      {clearedBalance != null && (\n        <InitialFocus>\n          <Input\n            defaultValue={format(clearedBalance, 'financial')}\n            onChangeValue={setInputValue}\n            style={{ margin: '7px 0' }}\n            focused={inputFocused}\n            onEnter={onSubmit}\n          />\n        </InitialFocus>\n      )}\n      <Button variant=\"primary\" onPress={onSubmit}>\n        Reconcile\n      </Button>\n    </View>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { useLocalPref } from '../../hooks/useLocalPref';\nimport { useSplitsExpanded } from '../../hooks/useSplitsExpanded';\nimport { useSyncServerStatus } from '../../hooks/useSyncServerStatus';\nimport { AnimatedLoading } from '../../icons/AnimatedLoading';\nimport { SvgAdd } from '../../icons/v1';\nimport {\n  SvgArrowsExpand3,\n  SvgArrowsShrink3,\n  SvgDownloadThickBottom,\n  SvgPencil1,\n} from '../../icons/v2';\nimport { theme, styles } from '../../style';\nimport { AnimatedRefresh } from '../AnimatedRefresh';\nimport { Button } from '../common/Button2';\nimport { InitialFocus } from '../common/InitialFocus';\nimport { Input } from '../common/Input';\nimport { Menu } from '../common/Menu';\nimport { MenuButton } from '../common/MenuButton';\nimport { Popover } from '../common/Popover';\nimport { Search } from '../common/Search';\nimport { Stack } from '../common/Stack';\nimport { View } from '../common/View';\nimport { FilterButton } from '../filters/FiltersMenu';\nimport { FiltersStack } from '../filters/FiltersStack';\nimport { NotesButton } from '../NotesButton';\nimport { SelectedTransactionsButton } from '../transactions/SelectedTransactionsButton';\n\nimport { Balances } from './Balance';\nimport { ReconcilingMessage, ReconcileMenu } from './Reconcile';\n\nexport function AccountHeader({\n  tableRef,\n  editingName,\n  isNameEditable,\n  workingHard,\n  accountName,\n  account,\n  filterId,\n  savedFilters,\n  accountsSyncing,\n  failedAccounts,\n  accounts,\n  transactions,\n  showBalances,\n  showExtraBalances,\n  showCleared,\n  showReconciled,\n  showEmptyMessage,\n  balanceQuery,\n  reconcileAmount,\n  canCalculateBalance,\n  isFiltered,\n  filteredAmount,\n  isSorted,\n  search,\n  filterConditions,\n  filterConditionsOp,\n  pushModal,\n  onSearch,\n  onAddTransaction,\n  onShowTransactions,\n  onDoneReconciling,\n  onCreateReconciliationTransaction,\n  onToggleExtraBalances,\n  onSaveName,\n  onExposeName,\n  onSync,\n  onImport,\n  onMenuSelect,\n  onReconcile,\n  onBatchDelete,\n  onBatchDuplicate,\n  onBatchEdit,\n  onBatchUnlink,\n  onCreateRule,\n  onApplyFilter,\n  onUpdateFilter,\n  onClearFilters,\n  onReloadSavedFilter,\n  onConditionsOpChange,\n  onDeleteFilter,\n  onScheduleAction,\n  onSetTransfer,\n  onMakeAsSplitTransaction,\n  onMakeAsNonSplitTransactions,\n}) {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const searchInput = useRef(null);\n  const triggerRef = useRef(null);\n  const splitsExpanded = useSplitsExpanded();\n  const syncServerStatus = useSyncServerStatus();\n  const isUsingServer = syncServerStatus !== 'no-server';\n  const isServerOffline = syncServerStatus === 'offline';\n  const [_, setExpandSplitsPref] = useLocalPref('expand-splits');\n\n  let canSync = account && account.account_id && isUsingServer;\n  if (!account) {\n    // All accounts - check for any syncable account\n    canSync = !!accounts.find(account => !!account.account_id) && isUsingServer;\n  }\n\n  // Only show the ability to make linked transfers on multi-account views.\n  const showMakeTransfer = !account;\n\n  function onToggleSplits() {\n    if (tableRef.current) {\n      splitsExpanded.dispatch({\n        type: 'switch-mode',\n        id: tableRef.current.getScrolledItem(),\n      });\n\n      setExpandSplitsPref(!(splitsExpanded.state.mode === 'expand'));\n    }\n  }\n\n  useHotkeys(\n    'ctrl+f, cmd+f, meta+f',\n    () => {\n      if (searchInput.current) {\n        searchInput.current.focus();\n      }\n    },\n    {\n      enableOnFormTags: true,\n      preventDefault: true,\n      scopes: ['app'],\n    },\n    [searchInput],\n  );\n  useHotkeys(\n    't',\n    () => onAddTransaction(),\n    {\n      preventDefault: true,\n      scopes: ['app'],\n    },\n    [onAddTransaction],\n  );\n  useHotkeys(\n    'ctrl+i, cmd+i, meta+i',\n    () => onImport(),\n    {\n      scopes: ['app'],\n    },\n    [onImport],\n  );\n  useHotkeys(\n    'ctrl+b, cmd+b, meta+b',\n    () => onSync(),\n    {\n      enabled: canSync && !isServerOffline,\n      preventDefault: true,\n      scopes: ['app'],\n    },\n    [onSync],\n  );\n\n  return (\n    <>\n      <View style={{ ...styles.pageContent, paddingBottom: 10, flexShrink: 0 }}>\n        <View\n          style={{ marginTop: 2, marginBottom: 10, alignItems: 'flex-start' }}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              alignItems: 'center',\n              gap: 3,\n            }}\n          >\n            {!!account?.bank && (\n              <View\n                style={{\n                  backgroundColor: accountsSyncing.includes(account.id)\n                    ? theme.sidebarItemBackgroundPending\n                    : failedAccounts.has(account.id)\n                      ? theme.sidebarItemBackgroundFailed\n                      : theme.sidebarItemBackgroundPositive,\n                  marginRight: '4px',\n                  width: 8,\n                  height: 8,\n                  borderRadius: 8,\n                }}\n              />\n            )}\n            {editingName ? (\n              <InitialFocus>\n                <Input\n                  defaultValue={accountName}\n                  onEnter={e => onSaveName(e.target.value)}\n                  onBlur={e => onSaveName(e.target.value)}\n                  onEscape={() => onExposeName(false)}\n                  style={{\n                    fontSize: 25,\n                    fontWeight: 500,\n                    marginTop: -3,\n                    marginBottom: -4,\n                    marginLeft: -6,\n                    paddingTop: 2,\n                    paddingBottom: 2,\n                    width: Math.max(20, accountName.length) + 'ch',\n                  }}\n                />\n              </InitialFocus>\n            ) : isNameEditable ? (\n              <View\n                style={{\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  gap: 3,\n                  '& .hover-visible': {\n                    opacity: 0,\n                    transition: 'opacity .25s',\n                  },\n                  '&:hover .hover-visible': {\n                    opacity: 1,\n                  },\n                }}\n              >\n                <View\n                  style={{\n                    fontSize: 25,\n                    fontWeight: 500,\n                    marginRight: 5,\n                    marginBottom: -1,\n                  }}\n                  data-testid=\"account-name\"\n                >\n                  {account && account.closed\n                    ? 'Closed: ' + accountName\n                    : accountName}\n                </View>\n\n                {account && (\n                  <NotesButton\n                    id={`account-${account.id}`}\n                    defaultColor={theme.pageTextSubdued}\n                  />\n                )}\n                <Button\n                  variant=\"bare\"\n                  aria-label=\"Edit account name\"\n                  className=\"hover-visible\"\n                  onPress={() => onExposeName(true)}\n                >\n                  <SvgPencil1\n                    style={{\n                      width: 11,\n                      height: 11,\n                      color: theme.pageTextSubdued,\n                    }}\n                  />\n                </Button>\n              </View>\n            ) : (\n              <View\n                style={{ fontSize: 25, fontWeight: 500, marginBottom: -1 }}\n                data-testid=\"account-name\"\n              >\n                {account && account.closed\n                  ? 'Closed: ' + accountName\n                  : accountName}\n              </View>\n            )}\n          </View>\n        </View>\n\n        <Balances\n          balanceQuery={balanceQuery}\n          showExtraBalances={showExtraBalances}\n          onToggleExtraBalances={onToggleExtraBalances}\n          account={account}\n          isFiltered={isFiltered}\n          filteredAmount={filteredAmount}\n        />\n\n        <Stack\n          spacing={2}\n          direction=\"row\"\n          align=\"center\"\n          style={{ marginTop: 12 }}\n        >\n          {((account && !account.closed) || canSync) && (\n            <Button\n              variant=\"bare\"\n              onPress={canSync ? onSync : onImport}\n              isDisabled={canSync && isServerOffline}\n            >\n              {canSync ? (\n                <>\n                  <AnimatedRefresh\n                    width={13}\n                    height={13}\n                    animating={\n                      account\n                        ? accountsSyncing.includes(account.id)\n                        : accountsSyncing.length > 0\n                    }\n                    style={{ marginRight: 4 }}\n                  />{' '}\n                  {isServerOffline ? 'Bank Sync Offline' : 'Bank Sync'}\n                </>\n              ) : (\n                <>\n                  <SvgDownloadThickBottom\n                    width={13}\n                    height={13}\n                    style={{ marginRight: 4 }}\n                  />{' '}\n                  Import\n                </>\n              )}\n            </Button>\n          )}\n          {!showEmptyMessage && (\n            <Button variant=\"bare\" onPress={onAddTransaction}>\n              <SvgAdd width={10} height={10} style={{ marginRight: 3 }} /> Add\n              New\n            </Button>\n          )}\n          <View style={{ flexShrink: 0 }}>\n            <FilterButton onApply={onApplyFilter} type=\"accounts\" />\n          </View>\n          <View style={{ flex: 1 }} />\n          <Search\n            placeholder=\"Search\"\n            value={search}\n            onChange={onSearch}\n            inputRef={searchInput}\n          />\n          {workingHard ? (\n            <View>\n              <AnimatedLoading style={{ width: 16, height: 16 }} />\n            </View>\n          ) : (\n            <SelectedTransactionsButton\n              getTransaction={id => transactions.find(t => t.id === id)}\n              onShow={onShowTransactions}\n              onDuplicate={onBatchDuplicate}\n              onDelete={onBatchDelete}\n              onEdit={onBatchEdit}\n              onUnlink={onBatchUnlink}\n              onCreateRule={onCreateRule}\n              onSetTransfer={onSetTransfer}\n              onScheduleAction={onScheduleAction}\n              pushModal={pushModal}\n              showMakeTransfer={showMakeTransfer}\n              onMakeAsSplitTransaction={onMakeAsSplitTransaction}\n              onMakeAsNonSplitTransactions={onMakeAsNonSplitTransactions}\n            />\n          )}\n          <Button\n            variant=\"bare\"\n            aria-label={\n              splitsExpanded.state.mode === 'collapse'\n                ? 'Collapse split transactions'\n                : 'Expand split transactions'\n            }\n            isDisabled={search !== '' || filterConditions.length > 0}\n            style={{ padding: 6, marginLeft: 10 }}\n            onPress={onToggleSplits}\n          >\n            <View\n              title={\n                splitsExpanded.state.mode === 'collapse'\n                  ? 'Collapse split transactions'\n                  : 'Expand split transactions'\n              }\n            >\n              {splitsExpanded.state.mode === 'collapse' ? (\n                <SvgArrowsShrink3 style={{ width: 14, height: 14 }} />\n              ) : (\n                <SvgArrowsExpand3 style={{ width: 14, height: 14 }} />\n              )}\n            </View>\n          </Button>\n          {account ? (\n            <View>\n              <MenuButton ref={triggerRef} onClick={() => setMenuOpen(true)} />\n\n              <Popover\n                triggerRef={triggerRef}\n                style={{ width: 275 }}\n                isOpen={menuOpen}\n                onOpenChange={() => setMenuOpen(false)}\n              >\n                <AccountMenu\n                  account={account}\n                  canSync={canSync}\n                  canShowBalances={canCalculateBalance()}\n                  isSorted={isSorted}\n                  showBalances={showBalances}\n                  showCleared={showCleared}\n                  showReconciled={showReconciled}\n                  onMenuSelect={item => {\n                    setMenuOpen(false);\n                    onMenuSelect(item);\n                  }}\n                  onReconcile={onReconcile}\n                  onClose={() => setMenuOpen(false)}\n                />\n              </Popover>\n            </View>\n          ) : (\n            <View>\n              <MenuButton ref={triggerRef} onClick={() => setMenuOpen(true)} />\n\n              <Popover\n                triggerRef={triggerRef}\n                isOpen={menuOpen}\n                onOpenChange={() => setMenuOpen(false)}\n              >\n                <Menu\n                  onMenuSelect={item => {\n                    setMenuOpen(false);\n                    onMenuSelect(item);\n                  }}\n                  items={[\n                    isSorted && {\n                      name: 'remove-sorting',\n                      text: 'Remove all sorting',\n                    },\n                    { name: 'export', text: 'Export' },\n                  ]}\n                />\n              </Popover>\n            </View>\n          )}\n        </Stack>\n\n        {filterConditions?.length > 0 && (\n          <FiltersStack\n            conditions={filterConditions}\n            conditionsOp={filterConditionsOp}\n            onUpdateFilter={onUpdateFilter}\n            onDeleteFilter={onDeleteFilter}\n            onClearFilters={onClearFilters}\n            onReloadSavedFilter={onReloadSavedFilter}\n            filterId={filterId}\n            savedFilters={savedFilters}\n            onConditionsOpChange={onConditionsOpChange}\n          />\n        )}\n      </View>\n      {reconcileAmount != null && (\n        <ReconcilingMessage\n          targetBalance={reconcileAmount}\n          balanceQuery={balanceQuery}\n          onDone={onDoneReconciling}\n          onCreateTransaction={onCreateReconciliationTransaction}\n        />\n      )}\n    </>\n  );\n}\n\nfunction AccountMenu({\n  account,\n  canSync,\n  showBalances,\n  canShowBalances,\n  showCleared,\n  showReconciled,\n  onClose,\n  isSorted,\n  onReconcile,\n  onMenuSelect,\n}) {\n  const [tooltip, setTooltip] = useState('default');\n  const syncServerStatus = useSyncServerStatus();\n\n  return tooltip === 'reconcile' ? (\n    <ReconcileMenu\n      account={account}\n      onClose={onClose}\n      onReconcile={onReconcile}\n    />\n  ) : (\n    <Menu\n      onMenuSelect={item => {\n        if (item === 'reconcile') {\n          setTooltip('reconcile');\n        } else {\n          onMenuSelect(item);\n        }\n      }}\n      items={[\n        isSorted && {\n          name: 'remove-sorting',\n          text: 'Remove all sorting',\n        },\n        canShowBalances && {\n          name: 'toggle-balance',\n          text: (showBalances ? 'Hide' : 'Show') + ' running balance',\n        },\n        {\n          name: 'toggle-cleared',\n          text: (showCleared ? 'Hide' : 'Show') + ' “cleared” checkboxes',\n        },\n        {\n          name: 'toggle-reconciled',\n          text: (showReconciled ? 'Hide' : 'Show') + ' reconciled transactions',\n        },\n        { name: 'export', text: 'Export' },\n        { name: 'reconcile', text: 'Reconcile' },\n        account &&\n          !account.closed &&\n          (canSync\n            ? {\n                name: 'unlink',\n                text: 'Unlink account',\n              }\n            : syncServerStatus === 'online' && {\n                name: 'link',\n                text: 'Link account',\n              }),\n        account.closed\n          ? { name: 'reopen', text: 'Reopen account' }\n          : { name: 'close', text: 'Close account' },\n      ].filter(x => x)}\n    />\n  );\n}\n","import React, { PureComponent, createRef, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate, useParams, useLocation } from 'react-router-dom';\n\nimport { debounce } from 'debounce';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { validForTransfer } from 'loot-core/client/transfer';\nimport { useFilters } from 'loot-core/src/client/data-hooks/filters';\nimport {\n  SchedulesProvider,\n  useDefaultSchedulesQueryTransform,\n} from 'loot-core/src/client/data-hooks/schedules';\nimport * as queries from 'loot-core/src/client/queries';\nimport { runQuery, pagedQuery } from 'loot-core/src/client/query-helpers';\nimport { send, listen } from 'loot-core/src/platform/client/fetch';\nimport { currentDay } from 'loot-core/src/shared/months';\nimport * as monthUtils from 'loot-core/src/shared/months';\nimport { q } from 'loot-core/src/shared/query';\nimport { getScheduledAmount } from 'loot-core/src/shared/schedules';\nimport {\n  deleteTransaction,\n  updateTransaction,\n  realizeTempTransactions,\n  ungroupTransaction,\n  ungroupTransactions,\n  makeChild,\n  makeAsNonChildTransactions,\n} from 'loot-core/src/shared/transactions';\nimport { applyChanges, groupById } from 'loot-core/src/shared/util';\n\nimport { useAccounts } from '../../hooks/useAccounts';\nimport { useActions } from '../../hooks/useActions';\nimport { useCategories } from '../../hooks/useCategories';\nimport { useDateFormat } from '../../hooks/useDateFormat';\nimport { useFailedAccounts } from '../../hooks/useFailedAccounts';\nimport { useLocalPref } from '../../hooks/useLocalPref';\nimport { usePayees } from '../../hooks/usePayees';\nimport { usePreviewTransactions } from '../../hooks/usePreviewTransactions';\nimport { SelectedProviderWithItems } from '../../hooks/useSelected';\nimport {\n  SplitsExpandedProvider,\n  useSplitsExpanded,\n} from '../../hooks/useSplitsExpanded';\nimport { styles, theme } from '../../style';\nimport { Button } from '../common/Button2';\nimport { Text } from '../common/Text';\nimport { View } from '../common/View';\nimport { TransactionList } from '../transactions/TransactionList';\n\nimport { AccountHeader } from './Header';\n\nfunction EmptyMessage({ onAdd }) {\n  return (\n    <View\n      style={{\n        color: theme.tableText,\n        backgroundColor: theme.tableBackground,\n        flex: 1,\n        alignItems: 'center',\n        borderTopWidth: 1,\n        borderColor: theme.tableBorder,\n      }}\n    >\n      <View\n        style={{\n          width: 550,\n          marginTop: 75,\n          fontSize: 15,\n          alignItems: 'center',\n        }}\n      >\n        <Text style={{ textAlign: 'center', lineHeight: '1.4em' }}>\n          For Actual to be useful, you need to <strong>add an account</strong>.\n          You can link an account to automatically download transactions, or\n          manage it locally yourself.\n        </Text>\n\n        <Button variant=\"primary\" style={{ marginTop: 20 }} onPress={onAdd}>\n          Add account\n        </Button>\n\n        <View\n          style={{ marginTop: 20, fontSize: 13, color: theme.tableTextLight }}\n        >\n          In the future, you can add accounts from the sidebar.\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction AllTransactions({\n  account = {},\n  transactions,\n  balances,\n  showBalances,\n  filtered,\n  children,\n}) {\n  const accountId = account.id;\n  const prependTransactions = usePreviewTransactions().map(trans => ({\n    ...trans,\n    _inverse: accountId ? accountId !== trans.account : false,\n  }));\n\n  transactions ??= [];\n\n  let runningBalance = useMemo(() => {\n    if (!showBalances) {\n      return 0;\n    }\n\n    return balances && transactions?.length > 0\n      ? balances[transactions[0].id]?.balance ?? 0\n      : 0;\n  }, [showBalances, balances, transactions]);\n\n  const prependBalances = useMemo(() => {\n    if (!showBalances) {\n      return null;\n    }\n\n    // Reverse so we can calculate from earliest upcoming schedule.\n    const scheduledBalances = [...prependTransactions]\n      .reverse()\n      .map(scheduledTransaction => {\n        const amount =\n          (scheduledTransaction._inverse ? -1 : 1) *\n          getScheduledAmount(scheduledTransaction.amount);\n        return {\n          balance: (runningBalance += amount),\n          id: scheduledTransaction.id,\n        };\n      });\n    return groupById(scheduledBalances);\n  }, [showBalances, prependTransactions, runningBalance]);\n\n  const allTransactions = useMemo(() => {\n    // Don't prepend scheduled transactions if we are filtering\n    if (!filtered && prependTransactions.length > 0) {\n      return prependTransactions.concat(transactions);\n    }\n    return transactions;\n  }, [filtered, prependTransactions, transactions]);\n\n  const allBalances = useMemo(() => {\n    // Don't prepend scheduled transactions if we are filtering\n    if (!filtered && prependBalances && balances) {\n      return { ...prependBalances, ...balances };\n    }\n    return balances;\n  }, [filtered, prependBalances, balances]);\n\n  if (!prependTransactions) {\n    return children(transactions, balances);\n  }\n  return children(allTransactions, allBalances);\n}\n\nfunction getField(field) {\n  switch (field) {\n    case 'account':\n      return 'account.name';\n    case 'payee':\n      return 'payee.name';\n    case 'category':\n      return 'category.name';\n    case 'payment':\n      return 'amount';\n    case 'deposit':\n      return 'amount';\n    default:\n      return field;\n  }\n}\n\nclass AccountInternal extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.paged = null;\n    this.table = createRef();\n    this.animated = true;\n\n    this.state = {\n      search: '',\n      filterConditions: props.filterConditions || [],\n      filterId: [],\n      filterConditionsOp: 'and',\n      loading: true,\n      workingHard: false,\n      reconcileAmount: null,\n      transactions: [],\n      transactionsCount: 0,\n      showBalances: props.showBalances,\n      balances: null,\n      showCleared: props.showCleared,\n      showReconciled: props.showReconciled,\n      editingName: false,\n      isAdding: false,\n      latestDate: null,\n      sort: [],\n      filteredAmount: null,\n    };\n  }\n\n  async componentDidMount() {\n    const maybeRefetch = tables => {\n      if (\n        tables.includes('transactions') ||\n        tables.includes('category_mapping') ||\n        tables.includes('payee_mapping')\n      ) {\n        return this.refetchTransactions();\n      }\n    };\n\n    const onUndo = async ({ tables, messages }) => {\n      await maybeRefetch(tables);\n\n      // If all the messages are dealing with transactions, find the\n      // first message referencing a non-deleted row so that we can\n      // highlight the row\n      //\n      let focusId;\n      if (\n        messages.every(msg => msg.dataset === 'transactions') &&\n        !messages.find(msg => msg.column === 'tombstone')\n      ) {\n        const focusableMsgs = messages.filter(\n          msg =>\n            msg.dataset === 'transactions' && !(msg.column === 'tombstone'),\n        );\n\n        focusId = focusableMsgs.length === 1 ? focusableMsgs[0].row : null;\n\n        // Highlight the transactions\n        // this.table && this.table.highlight(focusableMsgs.map(msg => msg.row));\n      }\n\n      if (this.table.current) {\n        this.table.current.edit(null);\n\n        // Focus a transaction if applicable. There is a chance if the\n        // user navigated away that focusId is a transaction that has\n        // been \"paged off\" and we won't focus it. That's ok, we just\n        // do our best.\n        if (focusId) {\n          this.table.current.scrollTo(focusId);\n        }\n      }\n\n      this.props.setLastUndoState(null);\n    };\n\n    const unlistens = [listen('undo-event', onUndo)];\n\n    this.unlisten = () => {\n      unlistens.forEach(unlisten => unlisten());\n    };\n\n    // Important that any async work happens last so that the\n    // listeners are set up synchronously\n    await this.props.initiallyLoadPayees();\n    await this.fetchTransactions(this.state.filterConditions);\n\n    // If there is a pending undo, apply it immediately (this happens\n    // when an undo changes the location to this page)\n    if (this.props.lastUndoState && this.props.lastUndoState.current) {\n      onUndo(this.props.lastUndoState.current);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // If the active account changes - close the transaction entry mode\n    if (this.state.isAdding && this.props.accountId !== prevProps.accountId) {\n      this.setState({ isAdding: false });\n    }\n\n    // If the user was on a different screen and is now coming back to\n    // the transactions, automatically refresh the transaction to make\n    // sure we have updated state\n    if (prevProps.modalShowing && !this.props.modalShowing) {\n      // This is clearly a hack. Need a better way to track which\n      // things are listening to transactions and refetch\n      // automatically (use ActualQL?)\n      setTimeout(() => {\n        this.refetchTransactions();\n      }, 100);\n    }\n\n    //Resest sort/filter/search on account change\n    if (this.props.accountId !== prevProps.accountId) {\n      this.setState({ sort: [], search: '', filterConditions: [] });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.unlisten) {\n      this.unlisten();\n    }\n    if (this.paged) {\n      this.paged.unsubscribe();\n    }\n  }\n\n  fetchAllIds = async () => {\n    const { data } = await runQuery(this.paged.getQuery().select('id'));\n    // Remember, this is the `grouped` split type so we need to deal\n    // with the `subtransactions` property\n    return data.reduce((arr, t) => {\n      arr.push(t.id);\n      t.subtransactions.forEach(sub => arr.push(sub.id));\n      return arr;\n    }, []);\n  };\n\n  refetchTransactions = async () => {\n    this.paged?.run();\n  };\n\n  fetchTransactions = filterConditions => {\n    const query = this.makeRootQuery();\n    this.rootQuery = this.currentQuery = query;\n    if (filterConditions) this.applyFilters(filterConditions);\n    else this.updateQuery(query);\n\n    if (this.props.accountId) {\n      this.props.markAccountRead(this.props.accountId);\n    }\n  };\n\n  makeRootQuery = () => {\n    const accountId = this.props.accountId;\n\n    return queries.makeTransactionsQuery(accountId);\n  };\n\n  updateQuery(query, isFiltered) {\n    if (this.paged) {\n      this.paged.unsubscribe();\n    }\n\n    // Filter out reconciled transactions if necessary.\n    if (!this.state.showReconciled) {\n      query = query.filter({ reconciled: { $eq: false } });\n    }\n\n    this.paged = pagedQuery(\n      query.select('*'),\n      async (data, prevData) => {\n        const firstLoad = prevData == null;\n\n        if (firstLoad) {\n          this.table.current?.setRowAnimation(false);\n\n          if (isFiltered) {\n            this.props.splitsExpandedDispatch({\n              type: 'set-mode',\n              mode: 'collapse',\n            });\n          } else {\n            this.props.splitsExpandedDispatch({\n              type: 'set-mode',\n              mode: this.props.expandSplits ? 'expand' : 'collapse',\n            });\n          }\n        }\n\n        this.setState(\n          {\n            transactions: data,\n            transactionCount: this.paged.getTotalCount(),\n            transactionsFiltered: isFiltered,\n            loading: false,\n            workingHard: false,\n            balances: this.state.showBalances\n              ? await this.calculateBalances()\n              : null,\n            filteredAmount: await this.getFilteredAmount(),\n          },\n          () => {\n            if (firstLoad) {\n              this.table.current?.scrollToTop();\n            }\n\n            setTimeout(() => {\n              this.table.current?.setRowAnimation(true);\n            }, 0);\n          },\n        );\n      },\n      {\n        pageCount: 150,\n        onlySync: true,\n        mapper: ungroupTransactions,\n      },\n    );\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.accountId !== nextProps.accountId) {\n      this.setState(\n        {\n          editingName: false,\n          loading: true,\n          search: '',\n          showBalances: nextProps.showBalances,\n          balances: null,\n          showCleared: nextProps.showCleared,\n          showReconciled: nextProps.showReconciled,\n          reconcileAmount: null,\n        },\n        () => {\n          this.fetchTransactions();\n        },\n      );\n    }\n  }\n\n  onSearch = value => {\n    this.paged.unsubscribe();\n    this.setState({ search: value }, this.onSearchDone);\n  };\n\n  onSearchDone = debounce(() => {\n    if (this.state.search === '') {\n      this.updateQuery(\n        this.currentQuery,\n        this.state.filterConditions.length > 0,\n      );\n    } else {\n      this.updateQuery(\n        queries.makeTransactionSearchQuery(\n          this.currentQuery,\n          this.state.search,\n          this.props.dateFormat,\n        ),\n        true,\n      );\n    }\n  }, 150);\n\n  onSync = async () => {\n    const accountId = this.props.accountId;\n    const account = this.props.accounts.find(acct => acct.id === accountId);\n\n    await this.props.syncAndDownload(account ? account.id : undefined);\n  };\n\n  onImport = async () => {\n    const accountId = this.props.accountId;\n    const account = this.props.accounts.find(acct => acct.id === accountId);\n    const categories = await this.props.getCategories();\n\n    if (account) {\n      const res = await window.Actual?.openFileDialog({\n        filters: [\n          {\n            name: 'Financial Files',\n            extensions: ['qif', 'ofx', 'qfx', 'csv', 'tsv', 'xml'],\n          },\n        ],\n      });\n\n      if (res) {\n        this.props.pushModal('import-transactions', {\n          accountId,\n          categories,\n          filename: res[0],\n          onImported: didChange => {\n            if (didChange) {\n              this.fetchTransactions();\n            }\n          },\n        });\n      }\n    }\n  };\n\n  onExport = async accountName => {\n    const exportedTransactions = await send('transactions-export-query', {\n      query: this.currentQuery.serialize(),\n    });\n    const normalizedName =\n      accountName && accountName.replace(/[()]/g, '').replace(/\\s+/g, '-');\n    const filename = `${normalizedName || 'transactions'}.csv`;\n\n    window.Actual?.saveFile(\n      exportedTransactions,\n      filename,\n      'Export Transactions',\n    );\n  };\n\n  onTransactionsChange = (newTransaction, data) => {\n    // Apply changes to pagedQuery data\n    this.paged.optimisticUpdate(\n      data => {\n        if (newTransaction._deleted) {\n          return data.filter(t => t.id !== newTransaction.id);\n        } else {\n          return data.map(t => {\n            return t.id === newTransaction.id ? newTransaction : t;\n          });\n        }\n      },\n      () => {\n        return data;\n      },\n    );\n\n    this.props.updateNewTransactions(newTransaction.id);\n  };\n\n  canCalculateBalance = () => {\n    const accountId = this.props.accountId;\n    const account = this.props.accounts.find(\n      account => account.id === accountId,\n    );\n    return (\n      account &&\n      this.state.search === '' &&\n      this.state.filterConditions.length === 0 &&\n      (this.state.sort.length === 0 ||\n        (this.state.sort.field === 'date' &&\n          this.state.sort.ascDesc === 'desc'))\n    );\n  };\n\n  async calculateBalances() {\n    if (!this.canCalculateBalance()) {\n      return null;\n    }\n\n    const { data } = await runQuery(\n      this.paged\n        .getQuery()\n        .options({ splits: 'none' })\n        .select([{ balance: { $sumOver: '$amount' } }]),\n    );\n\n    return groupById(data);\n  }\n\n  onAddTransaction = () => {\n    this.setState({ isAdding: true });\n  };\n\n  onExposeName = flag => {\n    this.setState({ editingName: flag });\n  };\n\n  onSaveName = name => {\n    if (name.trim().length) {\n      const accountId = this.props.accountId;\n      const account = this.props.accounts.find(\n        account => account.id === accountId,\n      );\n      this.props.updateAccount({ ...account, name });\n      this.setState({ editingName: false });\n    }\n  };\n\n  onToggleExtraBalances = () => {\n    const { accountId, showExtraBalances } = this.props;\n    const key = 'show-extra-balances-' + accountId || 'all-accounts';\n\n    this.props.savePrefs({ [key]: !showExtraBalances });\n  };\n\n  onMenuSelect = async item => {\n    const accountId = this.props.accountId;\n    const account = this.props.accounts.find(\n      account => account.id === accountId,\n    );\n\n    switch (item) {\n      case 'link':\n        this.props.pushModal('add-account', {\n          upgradingAccountId: accountId,\n        });\n        break;\n      case 'unlink':\n        this.props.pushModal('confirm-unlink-account', {\n          accountName: account.name,\n          onUnlink: () => {\n            this.props.unlinkAccount(accountId);\n          },\n        });\n        break;\n      case 'close':\n        this.props.openAccountCloseModal(accountId);\n        break;\n      case 'reopen':\n        this.props.reopenAccount(accountId);\n        break;\n      case 'export':\n        const accountName = this.getAccountTitle(account, accountId);\n        this.onExport(accountName);\n        break;\n      case 'toggle-balance':\n        if (this.state.showBalances) {\n          this.props.savePrefs({ ['show-balances-' + accountId]: false });\n          this.setState({ showBalances: false, balances: null });\n        } else {\n          this.props.savePrefs({ ['show-balances-' + accountId]: true });\n          this.setState(\n            {\n              transactions: [],\n              transactionCount: 0,\n              filterConditions: [],\n              search: '',\n              sort: [],\n              showBalances: true,\n            },\n            () => {\n              this.fetchTransactions();\n            },\n          );\n        }\n        break;\n      case 'remove-sorting': {\n        this.setState({ sort: [] }, () => {\n          const filterConditions = this.state.filterConditions;\n          if (filterConditions.length > 0) {\n            this.applyFilters([...filterConditions]);\n          } else {\n            this.fetchTransactions();\n          }\n          if (this.state.search !== '') {\n            this.onSearch(this.state.search);\n          }\n        });\n        break;\n      }\n      case 'toggle-cleared':\n        if (this.state.showCleared) {\n          this.props.savePrefs({ ['hide-cleared-' + accountId]: true });\n          this.setState({ showCleared: false });\n        } else {\n          this.props.savePrefs({ ['hide-cleared-' + accountId]: false });\n          this.setState({ showCleared: true });\n        }\n        break;\n      case 'toggle-reconciled':\n        if (this.state.showReconciled) {\n          this.props.savePrefs({ ['hide-reconciled-' + accountId]: true });\n          this.setState({ showReconciled: false }, () =>\n            this.fetchTransactions(this.state.filterConditions),\n          );\n        } else {\n          this.props.savePrefs({ ['hide-reconciled-' + accountId]: false });\n          this.setState({ showReconciled: true }, () =>\n            this.fetchTransactions(this.state.filterConditions),\n          );\n        }\n        break;\n      default:\n    }\n  };\n\n  getAccountTitle(account, id) {\n    const { filterName } = this.props.location.state || {};\n\n    if (filterName) {\n      return filterName;\n    }\n\n    if (!account) {\n      if (id === 'budgeted') {\n        return 'Budgeted Accounts';\n      } else if (id === 'offbudget') {\n        return 'Off Budget Accounts';\n      } else if (id === 'uncategorized') {\n        return 'Uncategorized';\n      } else if (!id) {\n        return 'All Accounts';\n      }\n      return null;\n    }\n\n    return account.name;\n  }\n\n  getBalanceQuery(account, id) {\n    return {\n      name: `balance-query-${id}`,\n      query: this.makeRootQuery().calculate({ $sum: '$amount' }),\n    };\n  }\n\n  getFilteredAmount = async () => {\n    const { data: amount } = await runQuery(\n      this.paged.getQuery().calculate({ $sum: '$amount' }),\n    );\n    return amount;\n  };\n\n  isNew = id => {\n    return this.props.newTransactions.includes(id);\n  };\n\n  isMatched = id => {\n    return this.props.matchedTransactions.includes(id);\n  };\n\n  onCreatePayee = name => {\n    const trimmed = name.trim();\n    if (trimmed !== '') {\n      return this.props.createPayee(name);\n    }\n    return null;\n  };\n\n  lockTransactions = async () => {\n    this.setState({ workingHard: true });\n\n    const { accountId } = this.props;\n\n    const { data } = await runQuery(\n      q('transactions')\n        .filter({ cleared: true, reconciled: false, account: accountId })\n        .select('*')\n        .options({ splits: 'grouped' }),\n    );\n    let transactions = ungroupTransactions(data);\n\n    const changes = { updated: [] };\n\n    transactions.forEach(trans => {\n      const { diff } = updateTransaction(transactions, {\n        ...trans,\n        reconciled: true,\n      });\n\n      transactions = applyChanges(diff, transactions);\n\n      changes.updated = changes.updated\n        ? changes.updated.concat(diff.updated)\n        : diff.updated;\n    });\n\n    await send('transactions-batch-update', changes);\n    await this.refetchTransactions();\n  };\n\n  onReconcile = async balance => {\n    this.setState(({ showCleared }) => ({\n      reconcileAmount: balance,\n      showCleared: true,\n      prevShowCleared: showCleared,\n    }));\n  };\n\n  onDoneReconciling = async () => {\n    const { accountId } = this.props;\n    const { reconcileAmount } = this.state;\n\n    const { data } = await runQuery(\n      q('transactions')\n        .filter({ cleared: true, account: accountId })\n        .select('*')\n        .options({ splits: 'grouped' }),\n    );\n    const transactions = ungroupTransactions(data);\n\n    let cleared = 0;\n\n    transactions.forEach(trans => {\n      if (!trans.is_parent) {\n        cleared += trans.amount;\n      }\n    });\n\n    const targetDiff = reconcileAmount - cleared;\n\n    if (targetDiff === 0) {\n      await this.lockTransactions();\n    }\n\n    this.setState({\n      reconcileAmount: null,\n      showCleared: this.state.prevShowCleared,\n    });\n  };\n\n  onCreateReconciliationTransaction = async diff => {\n    // Create a new reconciliation transaction\n    const reconciliationTransactions = realizeTempTransactions([\n      {\n        id: 'temp',\n        account: this.props.accountId,\n        cleared: true,\n        reconciled: false,\n        amount: diff,\n        date: currentDay(),\n        notes: 'Reconciliation balance adjustment',\n      },\n    ]);\n\n    // Optimistic UI: update the transaction list before sending the data to the database\n    this.setState({\n      transactions: [...reconciliationTransactions, ...this.state.transactions],\n    });\n\n    // sync the reconciliation transaction\n    await send('transactions-batch-update', {\n      added: reconciliationTransactions,\n    });\n    await this.refetchTransactions();\n  };\n\n  onShowTransactions = async ids => {\n    this.onApplyFilter({\n      customName: 'Selected transactions',\n      queryFilter: { id: { $oneof: ids } },\n    });\n  };\n\n  onBatchEdit = async (name, ids) => {\n    const { data } = await runQuery(\n      q('transactions')\n        .filter({ id: { $oneof: ids } })\n        .select('*')\n        .options({ splits: 'grouped' }),\n    );\n    const transactions = ungroupTransactions(data);\n\n    const onChange = async (name, value, mode) => {\n      let transactionsToChange = transactions;\n\n      const newValue = value === null ? '' : value;\n      this.setState({ workingHard: true });\n\n      const changes = { deleted: [], updated: [] };\n\n      // Cleared is a special case right now\n      if (name === 'cleared') {\n        // Clear them if any are uncleared, otherwise unclear them\n        value = !!transactionsToChange.find(t => !t.cleared);\n      }\n\n      const idSet = new Set(ids);\n\n      transactionsToChange.forEach(trans => {\n        if (name === 'cleared' && trans.reconciled) {\n          // Skip transactions that are reconciled. Don't want to set them as\n          // uncleared.\n          return;\n        }\n\n        if (!idSet.has(trans.id)) {\n          // Skip transactions which aren't actually selected, since the query\n          // above also retrieves the siblings & parent of any selected splits.\n          return;\n        }\n\n        if (name === 'notes') {\n          if (mode === 'prepend') {\n            value =\n              trans.notes === null ? newValue : newValue + ' ' + trans.notes;\n          } else if (mode === 'append') {\n            value =\n              trans.notes === null ? newValue : trans.notes + ' ' + newValue;\n          } else if (mode === 'replace') {\n            value = newValue;\n          }\n        }\n        const transaction = {\n          ...trans,\n          [name]: value,\n        };\n\n        if (name === 'account' && trans.account !== value) {\n          transaction.reconciled = false;\n        }\n\n        const { diff } = updateTransaction(transactionsToChange, transaction);\n\n        // TODO: We need to keep an updated list of transactions so\n        // the logic in `updateTransaction`, particularly about\n        // updating split transactions, works. This isn't ideal and we\n        // should figure something else out\n        transactionsToChange = applyChanges(diff, transactionsToChange);\n\n        changes.deleted = changes.deleted\n          ? changes.deleted.concat(diff.deleted)\n          : diff.deleted;\n        changes.updated = changes.updated\n          ? changes.updated.concat(diff.updated)\n          : diff.updated;\n        changes.added = changes.added\n          ? changes.added.concat(diff.added)\n          : diff.added;\n      });\n\n      await send('transactions-batch-update', changes);\n      await this.refetchTransactions();\n\n      if (this.table.current) {\n        this.table.current.edit(transactionsToChange[0].id, 'select', false);\n      }\n    };\n\n    const pushPayeeAutocompleteModal = () => {\n      this.props.pushModal('payee-autocomplete', {\n        onSelect: payeeId => onChange(name, payeeId),\n      });\n    };\n\n    const pushAccountAutocompleteModal = () => {\n      this.props.pushModal('account-autocomplete', {\n        onSelect: accountId => onChange(name, accountId),\n      });\n    };\n\n    const pushCategoryAutocompleteModal = () => {\n      // Only show balances when all selected transaction are in the same month.\n      const transactionMonth = transactions[0]?.date\n        ? monthUtils.monthFromDate(transactions[0]?.date)\n        : null;\n      const transactionsHaveSameMonth =\n        transactionMonth &&\n        transactions.every(\n          t => monthUtils.monthFromDate(t.date) === transactionMonth,\n        );\n      this.props.pushModal('category-autocomplete', {\n        month: transactionsHaveSameMonth ? transactionMonth : undefined,\n        onSelect: categoryId => onChange(name, categoryId),\n      });\n    };\n\n    if (\n      name === 'amount' ||\n      name === 'payee' ||\n      name === 'account' ||\n      name === 'date'\n    ) {\n      const reconciledTransactions = transactions.filter(t => t.reconciled);\n      if (reconciledTransactions.length > 0) {\n        this.props.pushModal('confirm-transaction-edit', {\n          onConfirm: () => {\n            if (name === 'payee') {\n              pushPayeeAutocompleteModal();\n            } else if (name === 'account') {\n              pushAccountAutocompleteModal();\n            } else {\n              this.props.pushModal('edit-field', { name, onSubmit: onChange });\n            }\n          },\n          confirmReason: 'batchEditWithReconciled',\n        });\n        return;\n      }\n    }\n\n    if (name === 'cleared') {\n      // Cleared just toggles it on/off and it depends on the data\n      // loaded. Need to clean this up in the future.\n      onChange('cleared', null);\n    } else if (name === 'category') {\n      pushCategoryAutocompleteModal();\n    } else if (name === 'payee') {\n      pushPayeeAutocompleteModal();\n    } else if (name === 'account') {\n      pushAccountAutocompleteModal();\n    } else {\n      this.props.pushModal('edit-field', { name, onSubmit: onChange });\n    }\n  };\n\n  onBatchDuplicate = async ids => {\n    const onConfirmDuplicate = async ids => {\n      this.setState({ workingHard: true });\n\n      const { data } = await runQuery(\n        q('transactions')\n          .filter({ id: { $oneof: ids } })\n          .select('*')\n          .options({ splits: 'grouped' }),\n      );\n\n      const changes = {\n        added: data\n          .reduce((newTransactions, trans) => {\n            return newTransactions.concat(\n              realizeTempTransactions(ungroupTransaction(trans)),\n            );\n          }, [])\n          .map(({ sort_order, ...trans }) => ({ ...trans })),\n      };\n\n      await send('transactions-batch-update', changes);\n\n      await this.refetchTransactions();\n    };\n\n    await this.checkForReconciledTransactions(\n      ids,\n      'batchDuplicateWithReconciled',\n      onConfirmDuplicate,\n    );\n  };\n\n  onBatchDelete = async ids => {\n    const onConfirmDelete = async ids => {\n      this.setState({ workingHard: true });\n\n      const { data } = await runQuery(\n        q('transactions')\n          .filter({ id: { $oneof: ids } })\n          .select('*')\n          .options({ splits: 'grouped' }),\n      );\n      let transactions = ungroupTransactions(data);\n\n      const idSet = new Set(ids);\n      const changes = { deleted: [], updated: [] };\n\n      transactions.forEach(trans => {\n        const parentId = trans.parent_id;\n\n        // First, check if we're actually deleting this transaction by\n        // checking `idSet`. Then, we don't need to do anything if it's\n        // a child transaction and the parent is already being deleted\n        if (!idSet.has(trans.id) || (parentId && idSet.has(parentId))) {\n          return;\n        }\n\n        const { diff } = deleteTransaction(transactions, trans.id);\n\n        // TODO: We need to keep an updated list of transactions so\n        // the logic in `updateTransaction`, particularly about\n        // updating split transactions, works. This isn't ideal and we\n        // should figure something else out\n        transactions = applyChanges(diff, transactions);\n\n        changes.deleted = diff.deleted\n          ? changes.deleted.concat(diff.deleted)\n          : diff.deleted;\n        changes.updated = diff.updated\n          ? changes.updated.concat(diff.updated)\n          : diff.updated;\n      });\n\n      await send('transactions-batch-update', changes);\n      await this.refetchTransactions();\n    };\n\n    await this.checkForReconciledTransactions(\n      ids,\n      'batchDeleteWithReconciled',\n      onConfirmDelete,\n    );\n  };\n\n  onMakeAsSplitTransaction = async ids => {\n    this.setState({ workingHard: true });\n\n    const { data: transactions } = await runQuery(\n      q('transactions')\n        .filter({ id: { $oneof: ids } })\n        .select('*')\n        .options({ splits: 'none' }),\n    );\n\n    if (!transactions || transactions.length === 0) {\n      return;\n    }\n\n    const [firstTransaction] = transactions;\n    const parentTransaction = {\n      id: uuidv4(),\n      is_parent: true,\n      cleared: transactions.every(t => !!t.cleared),\n      date: firstTransaction.date,\n      account: firstTransaction.account,\n      amount: transactions\n        .map(t => t.amount)\n        .reduce((total, amount) => total + amount, 0),\n    };\n    const childTransactions = transactions.map(t =>\n      makeChild(parentTransaction, t),\n    );\n\n    await send('transactions-batch-update', {\n      added: [parentTransaction],\n      updated: childTransactions,\n    });\n\n    this.refetchTransactions();\n  };\n\n  onMakeAsNonSplitTransactions = async ids => {\n    this.setState({ workingHard: true });\n\n    const { data: groupedTransactions } = await runQuery(\n      q('transactions')\n        .filter({ id: { $oneof: ids } })\n        .select('*')\n        .options({ splits: 'grouped' }),\n    );\n\n    let changes = {\n      updated: [],\n      deleted: [],\n    };\n\n    const groupedTransactionsToUpdate = groupedTransactions.filter(\n      t => t.is_parent,\n    );\n\n    for (const groupedTransaction of groupedTransactionsToUpdate) {\n      const transactions = ungroupTransaction(groupedTransaction);\n      const [parentTransaction, ...childTransactions] = transactions;\n\n      if (ids.includes(parentTransaction.id)) {\n        // Unsplit all child transactions.\n        const diff = makeAsNonChildTransactions(\n          childTransactions,\n          transactions,\n        );\n\n        changes = {\n          updated: [...changes.updated, ...diff.updated],\n          deleted: [...changes.deleted, ...diff.deleted],\n        };\n\n        // Already processed the child transactions above, no need to process them below.\n        continue;\n      }\n\n      // Unsplit selected child transactions.\n\n      const selectedChildTransactions = childTransactions.filter(t =>\n        ids.includes(t.id),\n      );\n\n      if (selectedChildTransactions.length === 0) {\n        continue;\n      }\n\n      const diff = makeAsNonChildTransactions(\n        selectedChildTransactions,\n        transactions,\n      );\n\n      changes = {\n        updated: [...changes.updated, ...diff.updated],\n        deleted: [...changes.deleted, ...diff.deleted],\n      };\n    }\n\n    await send('transactions-batch-update', changes);\n\n    this.refetchTransactions();\n\n    const transactionsToSelect = changes.updated.map(t => t.id);\n    this.dispatchSelected({\n      type: 'select-all',\n      ids: transactionsToSelect,\n    });\n  };\n\n  checkForReconciledTransactions = async (ids, confirmReason, onConfirm) => {\n    const { data } = await runQuery(\n      q('transactions')\n        .filter({ id: { $oneof: ids }, reconciled: true })\n        .select('*')\n        .options({ splits: 'grouped' }),\n    );\n    const transactions = ungroupTransactions(data);\n    if (transactions.length > 0) {\n      this.props.pushModal('confirm-transaction-edit', {\n        onConfirm: () => {\n          onConfirm(ids);\n        },\n        confirmReason,\n      });\n    } else {\n      onConfirm(ids);\n    }\n  };\n\n  onBatchUnlink = async ids => {\n    await send('transactions-batch-update', {\n      updated: ids.map(id => ({ id, schedule: null })),\n    });\n\n    await this.refetchTransactions();\n  };\n\n  onCreateRule = async ids => {\n    const { data } = await runQuery(\n      q('transactions')\n        .filter({ id: { $oneof: ids } })\n        .select('*')\n        .options({ splits: 'grouped' }),\n    );\n\n    const transactions = ungroupTransactions(data);\n    const ruleTransaction = transactions[0];\n    const childTransactions = transactions.filter(\n      t => t.parent_id === ruleTransaction.id,\n    );\n\n    const payeeCondition = ruleTransaction.imported_payee\n      ? {\n          field: 'imported_payee',\n          op: 'is',\n          value: ruleTransaction.imported_payee,\n          type: 'string',\n        }\n      : {\n          field: 'payee',\n          op: 'is',\n          value: ruleTransaction.payee,\n          type: 'id',\n        };\n    const amountCondition = {\n      field: 'amount',\n      op: 'isapprox',\n      value: ruleTransaction.amount,\n      type: 'number',\n    };\n\n    const rule = {\n      stage: null,\n      conditionsOp: 'and',\n      conditions: [payeeCondition, amountCondition],\n      actions: [\n        ...(childTransactions.length === 0\n          ? [\n              {\n                op: 'set',\n                field: 'category',\n                value: ruleTransaction.category,\n                type: 'id',\n                options: {\n                  splitIndex: 0,\n                },\n              },\n            ]\n          : []),\n        ...childTransactions.flatMap((sub, index) => [\n          {\n            op: 'set-split-amount',\n            value: sub.amount,\n            options: {\n              splitIndex: index + 1,\n              method: 'fixed-amount',\n            },\n          },\n          {\n            op: 'set',\n            field: 'category',\n            value: sub.category,\n            type: 'id',\n            options: {\n              splitIndex: index + 1,\n            },\n          },\n        ]),\n      ],\n    };\n\n    this.props.pushModal('edit-rule', { rule });\n  };\n\n  onSetTransfer = async ids => {\n    const onConfirmTransfer = async ids => {\n      this.setState({ workingHard: true });\n\n      const payees = await this.props.getPayees();\n      const { data: transactions } = await runQuery(\n        q('transactions')\n          .filter({ id: { $oneof: ids } })\n          .select('*'),\n      );\n      const [fromTrans, toTrans] = transactions;\n\n      if (transactions.length === 2 && validForTransfer(fromTrans, toTrans)) {\n        const fromPayee = payees.find(\n          p => p.transfer_acct === fromTrans.account,\n        );\n        const toPayee = payees.find(p => p.transfer_acct === toTrans.account);\n\n        const changes = {\n          updated: [\n            {\n              ...fromTrans,\n              payee: toPayee.id,\n              transfer_id: toTrans.id,\n            },\n            {\n              ...toTrans,\n              payee: fromPayee.id,\n              transfer_id: fromTrans.id,\n            },\n          ],\n        };\n\n        await send('transactions-batch-update', changes);\n      }\n\n      await this.refetchTransactions();\n    };\n\n    await this.checkForReconciledTransactions(\n      ids,\n      'batchEditWithReconciled',\n      onConfirmTransfer,\n    );\n  };\n\n  onConditionsOpChange = (value, conditions) => {\n    this.setState({ filterConditionsOp: value });\n    this.setState({ filterId: { ...this.state.filterId, status: 'changed' } });\n    this.applyFilters([...conditions]);\n    if (this.state.search !== '') {\n      this.onSearch(this.state.search);\n    }\n  };\n\n  onReloadSavedFilter = (savedFilter, item) => {\n    if (item === 'reload') {\n      const [savedFilter] = this.props.savedFilters.filter(\n        f => f.id === this.state.filterId.id,\n      );\n      this.setState({ filterConditionsOp: savedFilter.conditionsOp });\n      this.applyFilters([...savedFilter.conditions]);\n    } else {\n      if (savedFilter.status) {\n        this.setState({ filterConditionsOp: savedFilter.conditionsOp });\n        this.applyFilters([...savedFilter.conditions]);\n      }\n    }\n    this.setState({ filterId: { ...this.state.filterId, ...savedFilter } });\n  };\n\n  onClearFilters = () => {\n    this.setState({ filterConditionsOp: 'and' });\n    this.setState({ filterId: [] });\n    this.applyFilters([]);\n    if (this.state.search !== '') {\n      this.onSearch(this.state.search);\n    }\n  };\n\n  onUpdateFilter = (oldCondition, updatedCondition) => {\n    this.applyFilters(\n      this.state.filterConditions.map(c =>\n        c === oldCondition ? updatedCondition : c,\n      ),\n    );\n    this.setState({\n      filterId: {\n        ...this.state.filterId,\n        status: this.state.filterId && 'changed',\n      },\n    });\n    if (this.state.search !== '') {\n      this.onSearch(this.state.search);\n    }\n  };\n\n  onDeleteFilter = condition => {\n    this.applyFilters(this.state.filterConditions.filter(c => c !== condition));\n    if (this.state.filterConditions.length === 1) {\n      this.setState({ filterId: [] });\n      this.setState({ filterConditionsOp: 'and' });\n    } else {\n      this.setState({\n        filterId: {\n          ...this.state.filterId,\n          status: this.state.filterId && 'changed',\n        },\n      });\n    }\n    if (this.state.search !== '') {\n      this.onSearch(this.state.search);\n    }\n  };\n\n  onApplyFilter = async conditionOrSavedFilter => {\n    let filterConditions = this.state.filterConditions;\n    if (conditionOrSavedFilter.customName) {\n      filterConditions = filterConditions.filter(\n        c => c.customName !== conditionOrSavedFilter.customName,\n      );\n    }\n    if (conditionOrSavedFilter.conditions) {\n      // A saved filter was passed in.\n      const savedFilter = conditionOrSavedFilter;\n      this.setState({\n        filterId: { ...savedFilter, status: 'saved' },\n      });\n      this.setState({ filterConditionsOp: savedFilter.conditionsOp });\n      this.applyFilters([...savedFilter.conditions]);\n    } else {\n      // A condition was passed in.\n      const condition = conditionOrSavedFilter;\n      this.setState({\n        filterId: {\n          ...this.state.filterId,\n          status: this.state.filterId && 'changed',\n        },\n      });\n      this.applyFilters([...filterConditions, condition]);\n    }\n    if (this.state.search !== '') {\n      this.onSearch(this.state.search);\n    }\n  };\n\n  onScheduleAction = async (name, ids) => {\n    switch (name) {\n      case 'post-transaction':\n        for (const id of ids) {\n          const parts = id.split('/');\n          await send('schedule/post-transaction', { id: parts[1] });\n        }\n        this.refetchTransactions();\n        break;\n      case 'skip':\n        for (const id of ids) {\n          const parts = id.split('/');\n          await send('schedule/skip-next-date', { id: parts[1] });\n        }\n        break;\n      default:\n    }\n  };\n\n  applyFilters = async conditions => {\n    if (conditions.length > 0) {\n      const customQueryFilters = conditions\n        .filter(cond => !!cond.customName)\n        .map(f => f.queryFilter);\n      const { filters: queryFilters } = await send(\n        'make-filters-from-conditions',\n        {\n          conditions: conditions.filter(cond => !cond.customName),\n        },\n      );\n      const conditionsOpKey =\n        this.state.filterConditionsOp === 'or' ? '$or' : '$and';\n      this.currentQuery = this.rootQuery.filter({\n        [conditionsOpKey]: [...queryFilters, ...customQueryFilters],\n      });\n\n      this.setState(\n        {\n          filterConditions: conditions,\n        },\n        () => {\n          this.updateQuery(this.currentQuery, true);\n        },\n      );\n    } else {\n      this.setState(\n        {\n          transactions: [],\n          transactionCount: 0,\n          filterConditions: conditions,\n        },\n        () => {\n          this.fetchTransactions();\n        },\n      );\n    }\n\n    if (this.state.sort.length !== 0) {\n      this.applySort();\n    }\n  };\n\n  applySort = (field, ascDesc, prevField, prevAscDesc) => {\n    const filterConditions = this.state.filterConditions;\n    const isFiltered = filterConditions.length > 0;\n    const sortField = getField(!field ? this.state.sort.field : field);\n    const sortAscDesc = !ascDesc ? this.state.sort.ascDesc : ascDesc;\n    const sortPrevField = getField(\n      !prevField ? this.state.sort.prevField : prevField,\n    );\n    const sortPrevAscDesc = !prevField\n      ? this.state.sort.prevAscDesc\n      : prevAscDesc;\n\n    const sortCurrentQuery = function (that, sortField, sortAscDesc) {\n      if (sortField === 'cleared') {\n        that.currentQuery = that.currentQuery.orderBy({\n          reconciled: sortAscDesc,\n        });\n      }\n\n      that.currentQuery = that.currentQuery.orderBy({\n        [sortField]: sortAscDesc,\n      });\n    };\n\n    const sortRootQuery = function (that, sortField, sortAscDesc) {\n      if (sortField === 'cleared') {\n        that.currentQuery = that.rootQuery.orderBy({\n          reconciled: sortAscDesc,\n        });\n        that.currentQuery = that.currentQuery.orderBy({\n          cleared: sortAscDesc,\n        });\n      } else {\n        that.currentQuery = that.rootQuery.orderBy({\n          [sortField]: sortAscDesc,\n        });\n      }\n    };\n\n    // sort by previously used sort field, if any\n    const maybeSortByPreviousField = function (\n      that,\n      sortPrevField,\n      sortPrevAscDesc,\n    ) {\n      if (!sortPrevField) {\n        return;\n      }\n\n      if (sortPrevField === 'cleared') {\n        that.currentQuery = that.currentQuery.orderBy({\n          reconciled: sortPrevAscDesc,\n        });\n      }\n\n      that.currentQuery = that.currentQuery.orderBy({\n        [sortPrevField]: sortPrevAscDesc,\n      });\n    };\n\n    switch (true) {\n      // called by applyFilters to sort an already filtered result\n      case !field:\n        sortCurrentQuery(this, sortField, sortAscDesc);\n        break;\n\n      // called directly from UI by sorting a column.\n      // active filters need to be applied before sorting\n      case isFiltered:\n        this.applyFilters([...filterConditions]);\n        sortCurrentQuery(this, sortField, sortAscDesc);\n        break;\n\n      // called directly from UI by sorting a column.\n      // no active filters, start a new root query.\n      case !isFiltered:\n        sortRootQuery(this, sortField, sortAscDesc);\n        break;\n\n      default:\n    }\n\n    maybeSortByPreviousField(this, sortPrevField, sortPrevAscDesc);\n    this.updateQuery(this.currentQuery, isFiltered);\n  };\n\n  onSort = (headerClicked, ascDesc) => {\n    let prevField;\n    let prevAscDesc;\n    //if staying on same column but switching asc/desc\n    //then keep prev the same\n    if (headerClicked === this.state.sort.field) {\n      prevField = this.state.sort.prevField;\n      prevAscDesc = this.state.sort.prevAscDesc;\n      this.setState({\n        sort: {\n          ...this.state.sort,\n          ascDesc,\n        },\n      });\n    } else {\n      //if switching to new column then capture state\n      //of current sort column as prev\n      prevField = this.state.sort.field;\n      prevAscDesc = this.state.sort.ascDesc;\n      this.setState({\n        sort: {\n          field: headerClicked,\n          ascDesc,\n          prevField: this.state.sort.field,\n          prevAscDesc: this.state.sort.ascDesc,\n        },\n      });\n    }\n\n    this.applySort(headerClicked, ascDesc, prevField, prevAscDesc);\n    if (this.state.search !== '') {\n      this.onSearch(this.state.search);\n    }\n  };\n\n  render() {\n    const {\n      accounts,\n      categoryGroups,\n      payees,\n      dateFormat,\n      hideFraction,\n      addNotification,\n      accountsSyncing,\n      failedAccounts,\n      replaceModal,\n      showExtraBalances,\n      accountId,\n      categoryId,\n    } = this.props;\n    const {\n      transactions,\n      loading,\n      workingHard,\n      filterId,\n      reconcileAmount,\n      transactionsFiltered,\n      editingName,\n      showBalances,\n      balances,\n      showCleared,\n      showReconciled,\n      filteredAmount,\n    } = this.state;\n\n    const account = accounts.find(account => account.id === accountId);\n    const accountName = this.getAccountTitle(account, accountId);\n\n    if (!accountName && !loading) {\n      // This is probably an account that was deleted, so redirect to\n      // all accounts\n      return <Navigate to=\"/accounts\" replace />;\n    }\n\n    const category = categoryGroups\n      .flatMap(g => g.categories)\n      .find(category => category.id === categoryId);\n\n    const showEmptyMessage = !loading && !accountId && accounts.length === 0;\n\n    const isNameEditable =\n      accountId &&\n      accountId !== 'budgeted' &&\n      accountId !== 'offbudget' &&\n      accountId !== 'uncategorized';\n\n    const balanceQuery = this.getBalanceQuery(account, accountId);\n\n    return (\n      <AllTransactions\n        account={account}\n        transactions={transactions}\n        balances={balances}\n        showBalances={showBalances}\n        filtered={transactionsFiltered}\n      >\n        {(allTransactions, allBalances) => (\n          <SelectedProviderWithItems\n            name=\"transactions\"\n            items={allTransactions}\n            fetchAllIds={this.fetchAllIds}\n            registerDispatch={dispatch => (this.dispatchSelected = dispatch)}\n            selectAllFilter={item => !item._unmatched && !item.is_parent}\n          >\n            <View style={styles.page}>\n              <AccountHeader\n                tableRef={this.table}\n                editingName={editingName}\n                isNameEditable={isNameEditable}\n                workingHard={workingHard}\n                account={account}\n                filterId={filterId}\n                savedFilters={this.props.savedFilters}\n                location={this.props.location}\n                accountName={accountName}\n                accountsSyncing={accountsSyncing}\n                failedAccounts={failedAccounts}\n                accounts={accounts}\n                transactions={transactions}\n                showBalances={showBalances}\n                showExtraBalances={showExtraBalances}\n                showCleared={showCleared}\n                showReconciled={showReconciled}\n                showEmptyMessage={showEmptyMessage}\n                balanceQuery={balanceQuery}\n                canCalculateBalance={this.canCalculateBalance}\n                filteredAmount={filteredAmount}\n                isFiltered={transactionsFiltered}\n                isSorted={this.state.sort.length !== 0}\n                reconcileAmount={reconcileAmount}\n                search={this.state.search}\n                filterConditions={this.state.filterConditions}\n                filterConditionsOp={this.state.filterConditionsOp}\n                savePrefs={this.props.savePrefs}\n                pushModal={this.props.pushModal}\n                onSearch={this.onSearch}\n                onShowTransactions={this.onShowTransactions}\n                onMenuSelect={this.onMenuSelect}\n                onAddTransaction={this.onAddTransaction}\n                onToggleExtraBalances={this.onToggleExtraBalances}\n                onSaveName={this.onSaveName}\n                onExposeName={this.onExposeName}\n                onReconcile={this.onReconcile}\n                onDoneReconciling={this.onDoneReconciling}\n                onCreateReconciliationTransaction={\n                  this.onCreateReconciliationTransaction\n                }\n                onSync={this.onSync}\n                onImport={this.onImport}\n                onBatchDelete={this.onBatchDelete}\n                onBatchDuplicate={this.onBatchDuplicate}\n                onBatchEdit={this.onBatchEdit}\n                onBatchUnlink={this.onBatchUnlink}\n                onCreateRule={this.onCreateRule}\n                onUpdateFilter={this.onUpdateFilter}\n                onClearFilters={this.onClearFilters}\n                onReloadSavedFilter={this.onReloadSavedFilter}\n                onConditionsOpChange={this.onConditionsOpChange}\n                onDeleteFilter={this.onDeleteFilter}\n                onApplyFilter={this.onApplyFilter}\n                onScheduleAction={this.onScheduleAction}\n                onSetTransfer={this.onSetTransfer}\n                onMakeAsSplitTransaction={this.onMakeAsSplitTransaction}\n                onMakeAsNonSplitTransactions={this.onMakeAsNonSplitTransactions}\n              />\n\n              <View style={{ flex: 1 }}>\n                <TransactionList\n                  tableRef={this.table}\n                  account={account}\n                  transactions={transactions}\n                  allTransactions={allTransactions}\n                  animated={this.animated}\n                  loadMoreTransactions={() =>\n                    this.paged && this.paged.fetchNext()\n                  }\n                  accounts={accounts}\n                  category={category}\n                  categoryGroups={categoryGroups}\n                  payees={payees}\n                  balances={allBalances}\n                  showBalances={!!allBalances}\n                  showCleared={showCleared}\n                  showAccount={\n                    !accountId ||\n                    accountId === 'offbudget' ||\n                    accountId === 'budgeted' ||\n                    accountId === 'uncategorized'\n                  }\n                  isAdding={this.state.isAdding}\n                  isNew={this.isNew}\n                  isMatched={this.isMatched}\n                  isFiltered={transactionsFiltered}\n                  dateFormat={dateFormat}\n                  hideFraction={hideFraction}\n                  addNotification={addNotification}\n                  renderEmpty={() =>\n                    showEmptyMessage ? (\n                      <EmptyMessage onAdd={() => replaceModal('add-account')} />\n                    ) : !loading ? (\n                      <View\n                        style={{\n                          color: theme.tableText,\n                          marginTop: 20,\n                          textAlign: 'center',\n                          fontStyle: 'italic',\n                        }}\n                      >\n                        No transactions\n                      </View>\n                    ) : null\n                  }\n                  onSort={this.onSort}\n                  sortField={this.state.sort.field}\n                  ascDesc={this.state.sort.ascDesc}\n                  onChange={this.onTransactionsChange}\n                  onRefetch={this.refetchTransactions}\n                  onRefetchUpToRow={row =>\n                    this.paged.refetchUpToRow(row, {\n                      field: 'date',\n                      order: 'desc',\n                    })\n                  }\n                  onCloseAddTransaction={() =>\n                    this.setState({ isAdding: false })\n                  }\n                  onCreatePayee={this.onCreatePayee}\n                  onApplyFilter={this.onApplyFilter}\n                />\n              </View>\n            </View>\n          </SelectedProviderWithItems>\n        )}\n      </AllTransactions>\n    );\n  }\n}\n\nfunction AccountHack(props) {\n  const { dispatch: splitsExpandedDispatch } = useSplitsExpanded();\n\n  return (\n    <AccountInternal\n      splitsExpandedDispatch={splitsExpandedDispatch}\n      {...props}\n    />\n  );\n}\n\nexport function Account() {\n  const params = useParams();\n  const location = useLocation();\n\n  const { grouped: categoryGroups } = useCategories();\n  const newTransactions = useSelector(state => state.queries.newTransactions);\n  const matchedTransactions = useSelector(\n    state => state.queries.matchedTransactions,\n  );\n  const accounts = useAccounts();\n  const payees = usePayees();\n  const failedAccounts = useFailedAccounts();\n  const dateFormat = useDateFormat() || 'MM/dd/yyyy';\n  const [hideFraction = false] = useLocalPref('hideFraction');\n  const [expandSplits] = useLocalPref('expand-splits');\n  const [showBalances] = useLocalPref(`show-balances-${params.id}`);\n  const [hideCleared] = useLocalPref(`hide-cleared-${params.id}`);\n  const [hideReconciled] = useLocalPref(`hide-reconciled-${params.id}`);\n  const [showExtraBalances] = useLocalPref(\n    `show-extra-balances-${params.id || 'all-accounts'}`,\n  );\n  const modalShowing = useSelector(state => state.modals.modalStack.length > 0);\n  const accountsSyncing = useSelector(state => state.account.accountsSyncing);\n  const lastUndoState = useSelector(state => state.app.lastUndoState);\n  const filterConditions = location?.state?.filterConditions || [];\n\n  const savedFiters = useFilters();\n  const actionCreators = useActions();\n\n  const transform = useDefaultSchedulesQueryTransform(params.id);\n\n  return (\n    <SchedulesProvider transform={transform}>\n      <SplitsExpandedProvider\n        initialMode={expandSplits ? 'collapse' : 'expand'}\n      >\n        <AccountHack\n          newTransactions={newTransactions}\n          matchedTransactions={matchedTransactions}\n          accounts={accounts}\n          failedAccounts={failedAccounts}\n          dateFormat={dateFormat}\n          hideFraction={hideFraction}\n          expandSplits={expandSplits}\n          showBalances={showBalances}\n          showCleared={!hideCleared}\n          showReconciled={!hideReconciled}\n          showExtraBalances={showExtraBalances}\n          payees={payees}\n          modalShowing={modalShowing}\n          accountsSyncing={accountsSyncing}\n          lastUndoState={lastUndoState}\n          filterConditions={filterConditions}\n          categoryGroups={categoryGroups}\n          {...actionCreators}\n          accountId={params.id}\n          categoryId={location?.state?.categoryId}\n          location={location}\n          savedFilters={savedFiters}\n        />\n      </SplitsExpandedProvider>\n    </SchedulesProvider>\n  );\n}\n"],"names":["SvgLeftArrow2","props","_jsx","svg","xmlns","viewBox","style","color","path","fill","d","SvgArrowDown","SvgArrowUp","SvgArrowButtonDown1","_jsxs","SvgArrowButtonRight1","SvgArrowButtonUp1","SvgArrowsExpand3","SvgArrowsShrink3","SvgCustomNotesPaper","SvgDownloadThickBottom","SvgHyperlink2","SvgPencil1","MonthPicker","startMonth","numDisplayed","monthBounds","onSelect","hoverId","setHoverId","useState","targetMonthCount","setTargetMonthCount","currentMonth","monthUtils","firstSelectedMonth","lastSelectedMonth","range","firstSelectedIndex","Math","floor","length","lastSelectedIndex","size","setSize","containerRef","useResizeObserver","rect","width","min","max","yearHeadersShown","View","flexDirection","alignItems","justifyContent","innerRef","flex","map","month","idx","monthName","selected","lastHoverId","hovered","current","year","showYearHeader","includes","push","isMonthBudgeted","start","end","padding","textAlign","userSelect","cursor","borderRadius","border","textDecoration","theme","pageTextSubdued","styles","smallText","backgroundColor","tableBorderHover","buttonPrimaryText","filter","buttonBareBackgroundHover","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","fontWeight","onClick","onMouseEnter","onMouseLeave","position","top","left","fontSize","pageText","BudgetPageHeader","onMonthSelect","numMonths","marginLeft","flexShrink","marginRight","getScrollbarWidth","paddingTop","displayName","RenderMonths","component","Component","editingMonth","args","months","useContext","MonthsContext","index","editing","NamespaceContext","Provider","value","borderLeft","tableBorder","NotesButton","id","height","defaultColor","buttonNormalText","tooltipPosition","triggerRef","useRef","isOpen","setIsOpen","note","useNotes","hasNotes","tempNotes","setTempNotes","useEffect","onClose","send","Tooltip","content","Notes","notes","placement","triggerProps","isDisabled","Button","ref","type","aria-label","className","display","event","stopPropagation","Popover","onOpenChange","editable","focused","onChange","SidebarCategory","category","categoryGroup","dragPreview","dragging","isLast","onEditName","onSave","onDelete","onHideNewCategory","temporary","menuOpen","setMenuOpen","displayed","WebkitUserSelect","opacity","hidden","undefined","div","data-testid","textOverflow","whiteSpace","overflow","minWidth","name","e","SvgCheveronDown","Menu","onMenuSelect","items","text","pageTextLight","formInputTextPlaceholderSelected","tableBackground","zIndex","onKeyDown","key","InputCell","formatter","exposed","onUpdate","onBlur","paddingLeft","borderBottomWidth","inputProps","placeholder","ExpenseCategory","cat","editingCell","dragState","MonthComponent","onEditMonth","onBudgetAction","onShowActivity","onDragChange","onReorder","item","cat_group","dragRef","useDraggable","canDrag","dropRef","dropPos","useDroppable","types","onDrop","Row","collapsed","DropHighlight","pos","offset","preview","cell","onEdit","SidebarGroup","group","onShowNewCategory","onHideNewGroup","onToggleCollapse","SvgExpandArrow","transition","transform","Text","_Fragment","is_income","tableRowHeaderBackground","ExpenseGroup","onReorderGroup","onReorderCategory","catDropRef","catDropPos","onLongHover","right","ROW_HEIGHT","categories","IncomeCategory","IncomeGroup","IncomeHeader","onShowNewGroup","margin","BudgetCategories","memo","categoryGroups","dataComponents","onSaveCategory","onSaveGroup","onDeleteCategory","onDeleteGroup","collapsedGroupIds","setCollapsedGroupIdsPref","useLocalPref","showHiddenCategories","onCollapse","isAddingGroup","setIsAddingGroup","newCategoryForGroup","setNewCategoryForGroup","useMemo","expenseGroups","incomeGroup","separateGroups","Array","prototype","concat","apply","groupCategories","x","setDragState","savedCollapsed","setSavedCollapsed","newDragState","state","hoveredId","hoveredPos","id_","_onSaveGroup","groupId","c","_onSaveCategory","marginBottom","boxShadow","cardShadow","find","g","ExpenseGroupComponent","ExpenseCategoryComponent","incomeHeaderHeight","IncomeHeaderComponent","IncomeGroupComponent","IncomeCategoryComponent","Error","DropHighlightPosContext","BudgetSummaries","SummaryComponent","widthState","setWidthState","spring","useSpring","config","mass","tension","friction","useCallback","prevMonth0","allMonths","unshift","subMonths","addMonths","monthWidth","useLayoutEffect","prevMonth","reversed","offsetX","from","to","css","animated","willChange","paddingRight","BudgetTotals","toggleHiddenCategories","expandAllCategories","collapseAllCategories","borderBottom","flexGrow","SvgDotsHorizontalTriple","BudgetTable","prewarmStartMonth","grouped","useCategories","setShowHiddenCategoriesPef","setEditing","_onReorderCategory","targetId","findSortUp","targetGroup","findSortDown","_onReorderGroup","moveVertically","dir","flattened","reduce","all","isGroup","nextIdx","findIndex","next","preventDefault","shiftKey","collapsedIds","onToggleHiddenCategories","lightScrollbar","tableHeaderBackground","MonthsProvider","BudgetTotalsComponent","overflowY","overflowAnchor","getNumPossibleMonths","estimatedTableWidth","DynamicBudgetTableInner","maxMonths","setDisplayMax","useBudgetMonthCount","numPossible","maxWidth","getValidMonth","_onMonthSelect","useHotkeys","scopes","DynamicBudgetTable","AutoSizer","Context","ReportProvider","summaryCollapsed","onToggleSummaryCollapse","children","useReport","BudgetSummary","onMenuOpen","onMenuClose","ExpandOrCollapseIcon","marginTop","textDecorationSkip","BudgetMonthMenu","onCopyLastMonthBudget","onSetBudgetsToZero","onSetMonthsAverage","numberOfMonths","onCheckTemplates","onApplyBudgetTemplates","onOverwriteWithBudgetTemplates","Stack","spacing","alignSelf","IncomeTotal","ExpenseTotal","borderTop","Saved","projected","headerLabelStyle","BudgetTotalsMonth","format","useFormat","monthRightPadding","paddingBottom","CellValue","binding","reportBudget","totalBudgetedExpense","parseFloat","totalSpent","totalLeftover","IncomeHeaderMonth","GroupMonth","SheetCell","tnum","valueProps","groupBudgeted","groupSumAmount","groupBalance","privacyFilter","CategoryMonth","hover","setHover","balanceMenuOpen","setBalanceMenuOpen","triggerBalanceMenuRef","onMenuAction","onMouseOverCapture","borderTopWidth","borderColor","BudgetMenu","onCopyLastMonthAverage","onApplyBudgetTemplate","onExpose","valueStyle","mobileAccountShadow","catBudgeted","getValueStyle","makeAmountGrey","formatExpr","expr","integerToCurrency","unformatExpr","amountToInteger","evalArithmetic","amount","Field","span","catSumAmount","getStyle","BalanceWithCarryover","disabled","carryover","catCarryover","balance","catBalance","goal","catGoal","budgeted","longGoal","catLongGoal","BalanceMenu","categoryId","onCarryover","flag","ExpenseGroupMonth","ExpenseCategoryMonth","IncomeGroupMonth","IncomeCategoryMonth","CoverMenu","showToBeBudgeted","onSubmit","originalCategoryGroups","addToBeBudgetedGroup","setCategoryId","submit","InitialFocus","node","CategoryAutocomplete","openOnFocus","inputRef","onEnter","defaultPrevented","TransferMenu","initialAmount","_initialAmount","setAmount","_onSubmit","newAmount","parsedAmount","Input","defaultValue","BalanceMovementMenu","useSheetValue","rolloverBudget","menu","setMenu","onTransfer","onCover","toCategoryId","fromCategoryId","RolloverContext","createContext","RolloverProvider","useRollover","HoldMenu","spreadsheet","useSpreadsheet","sheetName","get","target","ToBudget","prevMonthName","amountStyle","isCollapsed","sheetValue","toBudget","availableValue","parseInt","isMenuOpen","Boolean","ToBudgetAmount","isTotalsListTooltipDisabled","ToBudgetMenu","onHoldBuffer","onResetHoldBuffer","tableTextLight","onEndOfMonthCleanup","TotalsList","tableHeaderText","totalBudgeted","totalBalance","budgetMenuTriggerRef","balanceMenuTriggerRef","budgetMenuOpen","setBudgetMenuOpen","groupIncomeReceived","BudgetInner","dispatch","useDispatch","navigate","useNavigate","setSummaryCollapsedPref","startMonthPref","setStartMonthPref","bounds","setBounds","budgetTypePref","budgetType","maxMonthsPref","useGlobalPref","initialized","setInitialized","loadCategories","getCategories","run","prewarmAllMonths","unlistens","listen","tables","forEach","unlisten","then","accountId","warmingMonth","prewarmMonth","categoryNameAlreadyExistsNotification","addNotification","message","toUpperCase","createCategory","updateCategory","mustTransfer","pushModal","transferCategory","deleteCategory","createGroup","updateGroup","deleteGroup","applyBudgetAction","goBack","filterConditions","field","op","options","sortInfo","cats","moveCandidate","list","moveCategory","moveCategoryGroup","reportComponents","rolloverComponents","table","RolloverBudgetSummary","rollover","Budget","report","page","Schedules","useActions","setFilter","scheduleData","useSchedules","schedules","statuses","onAdd","onDiscover","onAction","schedule","completed","resetNextDate","Page","header","Search","SchedulesTable","allowCompleted","onPress","variant","GoCardlessLink","window","close","Modal","isCurrent","title","Paragraph","validForTransfer","fromTransaction","toTransaction","every","tran","transfer_id","is_child","account","SplitsExpandedContext","useSplitsExpanded","data","expanded","mode","ids","has","SplitsExpandedProvider","initialMode","cachedState","useSelector","app","lastSplitState","reduxDispatch","useReducer","action","Set","delete","add","transitionId","setTimeout","splitState","toString","require$$0","reRegExpChar","reHasRegExpChar","escapeRegExp","string","escapeRegExp_1","getDisplayValue","obj","serializeTransaction","transaction","showZeroInDeposit","date","isPreviewId","_inverse","getScheduledAmount","debit","credit","isDateValid","parseISO","deserializeTransaction","originalTransaction","originalDate","realTransaction","parsed","currentDay","isLastChild","transactions","trans","parent_id","selectAscDesc","ascDesc","clicked","defaultAscDesc","TransactionHeader","hasSelected","showAccount","showCategory","showBalance","showCleared","scrollWidth","onSort","dispatchSelected","useSelectedDispatch","SelectCell","HeaderCell","icon","getPayeePretty","payee","transferAcct","numHiddenPayees","formatPayeeName","payeeName","payeeId","startsWith","slice","StatusCell","status","isChild","isPreview","isClearedField","statusProps","getStatusProps","statusColor","noticeTextLight","errorText","warningText","pageTextLinkLight","Cell","plain","CellButton","formInputBorderSelected","visibility","Icon","CustomCell","unexposedContent","cellValue","UnexposedCellContent","useParentPayee","payees","subtransactions","transferAccountsByTransaction","counts","mostCommonPayeeTransaction","result","sub","maxCount","mostCommonPayee","getPayeesById","numDistinctPayees","Object","keys","PayeeCell","accounts","onCreatePayee","onManagePayees","onNavigateToTransferAccount","onNavigateToSchedule","isCreatingPayee","parentPayee","transferAccount","is_parent","bare","buttonNormalBorder","SvgSplit","fontStyle","PayeeIcons","shouldSaveFromKey","inputStyle","PayeeAutocomplete","showManagePayees","clearOnBlur","menuPortalTarget","scheduleId","useCachedSchedules","s","buttonStyle","scheduleIconStyle","transferIconStyle","recurring","_date","frequency","SvgArrowsSynchronize","SvgCalendar","isTemporaryId","SvgRightArrow2","Transaction","allTransactions","highlighted","added","matched","focusedField","dateFormat","hideFraction","onSplit","onToggleSplit","onNotesTagClick","splitError","listContainerRef","prevShowZero","setPrevShowZero","prevTransaction","setPrevTransaction","setTransaction","showReconciliationWarning","setShowReconciliationWarning","reconciled","onCancel","onConfirm","onUpdateAfterConfirm","confirmReason","newTransaction","getAccountsById","offbudget","deserialized","deserializedName","imported_payee","importedPayee","cleared","isParent","_unmatched","isBudgetTransfer","isOffBudget","backgroundFocus","letterSpacing","runningBalance","updateId","setUpdateId","tableRowBackgroundHighlight","tableRowBackgroundHover","tableRowBackgroundHighlightText","tableText","tableTextInactive","arrowSize","isNonModal","maxHeight","shouldFlip","UNSTABLE_portalContainer","DeleteCell","borderLeftWidth","lineHeight","buttonProps","formatDate","DateSelect","acctId","acct","AccountAutocomplete","includeClosedAccounts","transfer_acct","notesTagFormatter","bind","formLabelText","upcomingText","errorBackground","warningBackground","formLabelBackground","upcomingBackground","titleFirst","readOnly","getCategoriesById","formInputTextHighlight","showSplitOption","activationFilters","TransactionError","error","isDeposit","onAddSplit","onDistributeRemainder","canDistributeRemainder","version","difference","makeTemporaryTransactions","currentAccountId","currentCategoryId","lastDate","NewTransaction","editingTransaction","childTransactions","t","emptyChildTransactions","isNew","TransactionTableInner","tableNavigator","tableRef","newNavigator","renderEmpty","onScroll","createRef","isAddingPrev","usePrevious","isAdding","setScrollWidth","saveScrollWidth","parent","child","onCloseAddTransaction","noteTag","renderRow","selectedItems","showBalances","balances","isMatched","isExpanded","transactionMap","isChildDeposit","hasSplitError","transactionsByParent","sortField","getNavigatorProps","onCheckNewEnter","newTransactions","editingId","onAddTemporary","Table","navigator","renderItem","loadMore","loadMoreTransactions","isSelected","onCheckEnter","TransactionTable","forwardRef","setNewTransactions","prevIsAdding","setPrevIsAdding","splitsExpanded","prevSplitsExpanded","mergedRef","useMergedRefs","transactionsWithExpandedSplits","anchor","setRowAnimation","Map","acc","fromEntries","isAnchored","unanchor","useTableNavigator","getFields","shouldAdd","latestState","savePending","afterSaveFunc","_","forceRerender","useSelectedItems","fields","f","afterSave","func","metaKey","getLastTransaction","lastTransaction","isSplit","updatedFieldName","groupedTransaction","groupTransaction","onApplyRules","newTrans","ungroupTransactions","updateTransaction","deleteTransaction","diff","splitTransaction","newId","addSplitTransaction","targetTransactions","parentTransaction","siblingTransactions","emptyTransactions","remainingAmount","amountPerTransaction","remainingCents","amounts","amountIndex","transactionIndex","words","split","word","i","arr","separator","tag","ti","validTag","noteTagBackground","noteTagText","hoveredStyle","noteTagBackgroundHover","saveDiff","remoteUpdates","learnCategories","updates","saveDiffAndApply","changes","remoteDiff","applyTransactionDiff","applyChanges","TransactionList","headerContent","isFiltered","onRefetch","onApplyFilter","transactionsLatest","realizeTempTransactions","updated","sort_order","Date","now","afterRules","getChangedValues","st","selectedPayee","FilterMenu","filterId","onFilterMenuSelect","line","NameFilter","menuItem","setName","adding","onAddUpdate","err","focus","form","direction","justify","align","FormField","FormLabel","htmlFor","onChangeValue","SavedFilterMenuButton","conditions","conditionsOp","onClearFilters","onReloadSavedFilter","savedFilters","nameOpen","setNameOpen","setAdding","setErr","setMenuItem","savedFilter","response","sendCatch","filters","newSavedFilter","updatedFilter","FiltersStack","onUpdateFilter","onDeleteFilter","onConditionsOpChange","AppliedFilters","SelectedTransactionsButton","getTransaction","onShow","onDuplicate","onUnlink","onCreateRule","onSetTransfer","onScheduleAction","showMakeTransfer","onMakeAsSplitTransaction","onMakeAsNonSplitTransactions","selectedIds","ambiguousDuplication","some","linked","canBeTransfer","fromTrans","toTrans","canMakeAsSplitTransaction","firstTransaction","areAllSameDateAndAccount","areNoSplitTransactions","areNoReconciledTransactions","canUnsplitTransactions","areAllSplitTransactions","hotKeyOptions","enabled","SelectedItemsButton","label","firstId","transactionIds","DetailedBalance","isExactBalance","pillText","pillBackground","PrivacyFilter","SelectedBalance","join","rows","query","q","$oneof","select","r","finalIds","splits","calculate","$sum","scheduleBalance","previewIds","_amountOp","_account","_amount","FilteredBalance","filteredAmount","MoreBalances","balanceQuery","uncleared","Balances","showExtraBalances","onToggleExtraBalances","buttonRef","isButtonHovered","useHover","blurIntensity","ReconcilingMessage","targetBalance","onDone","onCreateTransaction","targetDiff","shadow","SvgCheckCircle1","strong","br","ReconcileMenu","onReconcile","queries","clearedBalance","inputValue","setInputValue","inputFocused","setInputFocused","currencyToInteger","AccountHeader","editingName","isNameEditable","workingHard","accountName","accountsSyncing","failedAccounts","showReconciled","showEmptyMessage","reconcileAmount","canCalculateBalance","isSorted","search","filterConditionsOp","onSearch","onAddTransaction","onShowTransactions","onDoneReconciling","onCreateReconciliationTransaction","onSaveName","onExposeName","onSync","onImport","onBatchDelete","onBatchDuplicate","onBatchEdit","onBatchUnlink","searchInput","syncServerStatus","useSyncServerStatus","isUsingServer","isServerOffline","setExpandSplitsPref","canSync","account_id","onToggleSplits","getScrolledItem","enableOnFormTags","pageContent","gap","bank","sidebarItemBackgroundPending","sidebarItemBackgroundFailed","sidebarItemBackgroundPositive","onEscape","closed","AnimatedRefresh","animating","SvgAdd","FilterButton","onApply","AnimatedLoading","MenuButton","AccountMenu","canShowBalances","tooltip","setTooltip","EmptyMessage","AllTransactions","filtered","prependTransactions","usePreviewTransactions","prependBalances","scheduledBalances","reverse","scheduledTransaction","groupById","allBalances","getField","AccountInternal","PureComponent","constructor","paged","loading","transactionsCount","latestDate","sort","componentDidMount","maybeRefetch","refetchTransactions","onUndo","messages","focusId","msg","dataset","column","focusableMsgs","row","edit","scrollTo","setLastUndoState","initiallyLoadPayees","fetchTransactions","lastUndoState","componentDidUpdate","prevProps","setState","modalShowing","componentWillUnmount","unsubscribe","fetchAllIds","runQuery","getQuery","makeRootQuery","rootQuery","currentQuery","applyFilters","updateQuery","markAccountRead","$eq","pagedQuery","prevData","firstLoad","splitsExpandedDispatch","expandSplits","transactionCount","getTotalCount","transactionsFiltered","calculateBalances","getFilteredAmount","scrollToTop","pageCount","onlySync","mapper","UNSAFE_componentWillReceiveProps","nextProps","onSearchDone","debounce","syncAndDownload","res","Actual","openFileDialog","extensions","filename","onImported","didChange","onExport","exportedTransactions","serialize","replace","saveFile","onTransactionsChange","optimisticUpdate","_deleted","updateNewTransactions","$sumOver","trim","updateAccount","savePrefs","upgradingAccountId","unlinkAccount","openAccountCloseModal","reopenAccount","getAccountTitle","filterName","location","getBalanceQuery","matchedTransactions","createPayee","lockTransactions","prevShowCleared","reconciliationTransactions","customName","queryFilter","transactionsToChange","newValue","deleted","idSet","pushPayeeAutocompleteModal","pushAccountAutocompleteModal","pushCategoryAutocompleteModal","transactionMonth","transactionsHaveSameMonth","onConfirmDuplicate","ungroupTransaction","checkForReconciledTransactions","onConfirmDelete","parentId","uuidv4","total","makeChild","groupedTransactions","groupedTransactionsToUpdate","makeAsNonChildTransactions","selectedChildTransactions","transactionsToSelect","ruleTransaction","payeeCondition","amountCondition","rule","stage","actions","splitIndex","flatMap","method","onConfirmTransfer","getPayees","fromPayee","p","toPayee","oldCondition","updatedCondition","condition","conditionOrSavedFilter","parts","customQueryFilters","cond","queryFilters","conditionsOpKey","applySort","prevField","prevAscDesc","sortAscDesc","sortPrevField","sortPrevAscDesc","sortCurrentQuery","that","orderBy","sortRootQuery","maybeSortByPreviousField","headerClicked","render","replaceModal","Navigate","SelectedProviderWithItems","registerDispatch","selectAllFilter","fetchNext","onRefetchUpToRow","refetchUpToRow","order","AccountHack","Account","params","useParams","useLocation","useAccounts","usePayees","useFailedAccounts","useDateFormat","hideCleared","hideReconciled","modals","modalStack","savedFiters","useFilters","actionCreators","useDefaultSchedulesQueryTransform","SchedulesProvider"],"mappings":"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","x_google_ignoreList":[44]}