{"version":3,"file":"usePreviewTransactions.9E3yxDt5.chunk.js","sources":["../../../src/hooks/usePreviewTransactions.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport {\n  type ScheduleStatuses,\n  useCachedSchedules,\n} from 'loot-core/client/data-hooks/schedules';\nimport { type ScheduleEntity } from 'loot-core/types/models';\n\nexport function usePreviewTransactions() {\n  const scheduleData = useCachedSchedules();\n\n  return useMemo(() => {\n    if (!scheduleData) {\n      return [];\n    }\n\n    const schedules =\n      scheduleData.schedules.filter(s =>\n        isForPreview(s, scheduleData.statuses),\n      ) || [];\n\n    return schedules.map(schedule => ({\n      id: 'preview/' + schedule.id,\n      payee: schedule._payee,\n      account: schedule._account,\n      amount: schedule._amount,\n      date: schedule.next_date,\n      notes: scheduleData.statuses.get(schedule.id),\n      schedule: schedule.id,\n    }));\n  }, [scheduleData]);\n}\n\nfunction isForPreview(schedule: ScheduleEntity, statuses: ScheduleStatuses) {\n  const status = statuses.get(schedule.id);\n  return (\n    !schedule.completed &&\n    (status === 'due' || status === 'upcoming' || status === 'missed')\n  );\n}\n"],"names":["usePreviewTransactions","scheduleData","useCachedSchedules","useMemo","schedules","filter","s","isForPreview","statuses","map","schedule","id","payee","_payee","account","_account","amount","_amount","date","next_date","notes","get","status","completed"],"mappings":"gDAQO,SAASA,GAAAA,CACd,MAAMC,EAAeC,IAErB,OAAOC,UAAQ,IACRF,GAKHA,EAAaG,UAAUC,OAAOC,GAC5BC,EAAaD,EAAGL,EAAaO,QAAQ,IAClC,CAAA,GAEUC,IAAIC,IAAa,CAChCC,GAAI,WAAaD,EAASC,GAC1BC,MAAOF,EAASG,OAChBC,QAASJ,EAASK,SAClBC,OAAQN,EAASO,QACjBC,KAAMR,EAASS,UACfC,MAAOnB,EAAaO,SAASa,IAAIX,EAASC,EAAE,EAC5CD,SAAUA,EAASC,EACrB,EAAA,EAhBS,GAiBR,CAACV,CAAAA,CAAa,CACnB,CAEA,SAASM,EAAaG,EAA0BF,EAA0B,CACxE,MAAMc,EAASd,EAASa,IAAIX,EAASC,EAAE,EACvC,MACE,CAACD,EAASa,YACTD,IAAW,OAASA,IAAW,YAAcA,IAAW,SAE7D"}